{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/src/pages/kangyi/containers/each-item.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/src/pages/kangyi/containers/each-item.js","mtime":1695633995748},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/src/pages/kangyi/containers/each-item.js"],"names":["H5Components","LineChart","BarChart","Numeral","EpidTable","ReportTable","SurroundEpid","Notice","isX","feed","data","get","result","layout","Object","keys","indexOf","templateC","templateIf","key","tagName","channelize","EachItem","isShow","item","index","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,YAAY,GAAG;AACjB,gBAAcC,kBADG;AAEjB,eAAaC,iBAFI;AAGjB,kBAAgBC,gBAHC;AAIjB,gBAAcC,kBAJG;AAKjB,iBAAeC,oBALE;AAMjB,mBAAiBC,qBANA;AAOjB,iBAAeC;AAPE,CAArB;;AASA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAY;AACpB,MAAMC,IAAI,GAAG,KAAKC,IAAL,CAAUC,GAAV,CAAc,MAAd,CAAb;AACA,MAAIC,MAAM,GAAG,EAAb;AACAA,EAAAA,MAAM,CAACH,IAAI,CAACI,MAAN,CAAN,GAAsBJ,IAAI,IAAIK,MAAM,CAACC,IAAP,CAAYf,YAAZ,EAA0BgB,OAA1B,CAAkCP,IAAI,CAACI,MAAvC,MAAmD,CAAC,CAAlF;AACA,SAAOD,MAAP;AACH,CALD;;AAMA,IAAIK,SAAS,GAAG,EAAhB;AACA,IAAIC,UAAU,GAAG,IAAjB;;AACA,KAAK,IAAIC,GAAT,IAAgBnB,YAAhB,EAA8B;AAC1B,MAAMoB,OAAO,GAAGD,GAAhB;AACAF,EAAAA,SAAS,yBACFG,OADE,6BAEGF,UAFH,oBAEsBC,GAFtB,iFAAT;AAKAD,EAAAA,UAAU,GAAG,MAAb;AACH;;AACc,SAASG,UAAT,GAAsB;AAAA,MAC3BC,QAD2B;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,iCAsElB;AACP,eAAO;AACHL,UAAAA,SAAS,EAATA,SADG;AAEHM,UAAAA,MAAM,EAAE,IAFL;AAGHC,UAAAA,IAAI,EAAE,EAHH;AAIHf,UAAAA,IAAI,EAAE;AACFI,YAAAA,MAAM,EAAE;AADN,WAJH;AAOHY,UAAAA,KAAK,EAAE;AAPJ,SAAP;AASH;AAhF4B;AAAA;AAAA,IACVC,cADU;;AAAA,gCAC3BJ,QAD2B,gBAET;AAChB,kBAAcrB,kBADE;AAEhB,iBAAaC,iBAFG;AAGhB,oBAAgBC,gBAHA;AAIhB,kBAAcC,kBAJE;AAKhB,mBAAeC,oBALC;AAMhB,qBAAiBC,qBAND;AAOhB,mBAAeC;AAPC,GAFS;AAAA,gCAC3Be,QAD2B;AAAA,gCAC3BA,QAD2B,cA8DX;AACdd,IAAAA,GADc,iBACR;AACF,UAAMC,IAAI,GAAG,KAAKC,IAAL,CAAUC,GAAV,CAAc,MAAd,CAAb;AACA,UAAIC,MAAM,GAAG,EAAb;AACAA,MAAAA,MAAM,CAACH,IAAI,CAACI,MAAN,CAAN,GAAsBJ,IAAI,IAAIK,MAAM,CAACC,IAAP,CAAYf,YAAZ,EAA0BgB,OAA1B,CAAkCP,IAAI,CAACI,MAAvC,MAAmD,CAAC,CAAlF;AACA,aAAOD,MAAP;AACH;AANa,GA9DW;AAkFjC,SAAOU,QAAP;AACH","sourcesContent":["\nimport {Component} from 'san';\nimport LineChart from '../components/lineChart';\nimport BarChart from '../components/barChart';\nimport Numeral from '../components/numeral';\nimport EpidTable from '../components/epidTable';\nimport ReportTable from '../components/reportTable';\nimport SurroundEpid from '../components/surroundEpid';\nimport Notice from '../components/notice';\n\nconst H5Components = {\n    'live-chart': LineChart,\n    'bar-chart': BarChart,\n    'show-numeral': Numeral,\n    'show-table': EpidTable,\n    'show-report': ReportTable,\n    'show-surround': SurroundEpid,\n    'show-notice': Notice\n};\nconst isX = function () {\n    const feed = this.data.get('feed');\n    let result = {};\n    result[feed.layout] = feed && Object.keys(H5Components).indexOf(feed.layout) !== -1;\n    return result;\n};\nlet templateC = '';\nlet templateIf = 'if';\nfor (let key in H5Components) {\n    const tagName = key;\n    templateC += `\n        <${tagName}\n            s-${templateIf}=\"isX.${key} && isShow\"\n            feed=\"{{feed}}\"\n            pos=\"{{index}}\"/>`;\n    templateIf = 'elif';\n}\nexport default function channelize() {\n    class EachItem extends Component {\n        static components = {\n            'live-chart': LineChart,\n            'bar-chart': BarChart,\n            'show-numeral': Numeral,\n            'show-table': EpidTable,\n            'show-report': ReportTable,\n            'show-surround': SurroundEpid,\n            'show-notice': Notice\n        };\n        static template = `\n            <div\n                style=\"\">\n                <live-chart\n                    s-if=\"isX['live-chart'] && isShow\"\n                    feed=\"{{feed}}\"\n                    pos=\"{{index}}\"\n                    theme=\"{{theme}}\"\n                    province=\"{{province}}\"\n                    topTabSelectedId=\"{{topTabSelectedId}}\"\n                    underTalosTab=\"{{underTalosTab}}\"/>\n                <bar-chart\n                    s-elif=\"isX['bar-chart'] && isShow\"\n                    feed=\"{{feed}}\"\n                    pos=\"{{index}}\"\n                    theme=\"{{theme}}\"\n                    underTalosTab=\"{{underTalosTab}}\"/>\n                <show-numeral \n                    s-elif=\"isX['show-numeral'] && isShow\"\n                    feed=\"{{feed}}\"\n                    pos=\"{{index}}\"\n                    timeInfo=\"{{timeInfo}}\"\n                    theme=\"{{theme}}\"\n                    topTabSelectedId=\"{{topTabSelectedId}}\"\n                    tabType=\"{{tabType}}\"\n                    tabTitle=\"{{tabTitle}}\"/>\n                <show-table\n                    s-elif=\"isX['show-table'] && isShow\"\n                    feed=\"{{feed}}\"\n                    pos=\"{{index}}\"\n                    theme=\"{{theme}}\"\n                    topTabSelectedId=\"{{topTabSelectedId}}\"/>\n                <show-report\n                    s-elif=\"isX['show-report'] && isShow\"\n                    feed=\"{{feed}}\"\n                    pos=\"{{index}}\"\n                    theme=\"{{theme}}\"/>\n                <show-surround\n                    s-elif=\"isX['show-surround'] && isShow\"\n                    feed=\"{{feed}}\"\n                    pos=\"{{index}}\"\n                    timeInfo=\"{{timeInfo}}\"\n                    theme=\"{{theme}}\"/>\n                <show-notice\n                    s-elif=\"isX['show-notice'] && isShow\"\n                    feed=\"{{feed}}\"\n                    pos=\"{{index}}\"\n                    timeInfo=\"{{timeInfo}}\"\n                    theme=\"{{theme}}\"/>\n            </div>`;\n\n        static computed = {\n            isX() {\n                const feed = this.data.get('feed');\n                let result = {};\n                result[feed.layout] = feed && Object.keys(H5Components).indexOf(feed.layout) !== -1;\n                return result;\n            }\n        }\n        initData() {\n            return {\n                templateC,\n                isShow: true,\n                item: {},\n                feed: {\n                    layout: ''\n                },\n                index: 0\n            };\n        }\n    }\n    return EachItem;\n}\n"]}]}