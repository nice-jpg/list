{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/date-format.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/date-format.js","mtime":1696919504571},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvVXNlcnMvbGlhb2h1YW55dS9wcm9qZWN0cy9iYWlkdS13b3JrL2JhaWR1L2ZlZWQzL211bHRpLXBhZ2VzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIik7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDsKCnZhciBfdHlwZSA9IHJlcXVpcmUoIi4vdHlwZSIpOwoKdmFyIF90eXBlRXJyb3IgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4vdHlwZS1lcnJvciIpKTsKCi8qKgogKiBAZmlsZSDml6XmnJ/moLzlvI/ljJYKICogQGF1dGhvciB3YW5neW9uZ3FpbmcgPHdhbmd5b25ncWluZzAxQGJhaWR1LmNvbT4KICovCgovKioKICog5pel5pyf5qC85byP5YyWCiAqIEBhdXRob3Igd2FuZ3lvbmdxaW5nMDEKICogQGZ1bmN0aW9uIGRhdGVGb3JtYXQKICogQHBhcmFtIHtEYXRlfSBkIC0gZGF0ZSDlr7nosaEKICogQHBhcmFtIHtzdHJpbmd9IFtwYXR0ZXJuID0gJ3l5eXktTU0tZGQnXSAtIOWtl+espuS4sgogKiBAcmV0dXJuIHtzdHJpbmd9IOWkhOeQhuWQjueahOWtl+espuS4sgogKiBAZXhhbXBsZQogKgl2YXIgZCA9IG5ldyBEYXRlKCk7CiAqICBkYXRlRm9ybWF0KGQsIiB5eXl55bm0TeaciGTml6VcbiB5eXl5LU1NLWRkXG4gTU0tZGQteXlcbiB5eXl5LU1NLWRkIGhoOm1tOnNzIikKICogIC8vMjAxOOW5tDEx5pyIMTDml6VcbiAyMDE4LTAxLTAxXG4gMDEtMDEtMThcbiAyMDE4LTExLTEyIDEyOjAxOjAyCiAqLwp2YXIgX2RlZmF1bHQgPSBmdW5jdGlvbiBfZGVmYXVsdChkKSB7CiAgdmFyIHBhdHRlcm4gPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICd5eXl5LU1NLWRkJzsKCiAgaWYgKCEoMCwgX3R5cGUuaXNUeXBlKShkLCAnZGF0ZScpKSB7CiAgICB0aHJvdyAoMCwgX3R5cGVFcnJvci5kZWZhdWx0KSgnZCcsICdEYXRlJywgZCk7CiAgfQoKICB2YXIgeSA9IGQuZ2V0RnVsbFllYXIoKS50b1N0cmluZygpOwogIHZhciBvID0gewogICAgTTogZC5nZXRNb250aCgpICsgMSwKICAgIC8vIG1vbnRoCiAgICBkOiBkLmdldERhdGUoKSwKICAgIC8vIGRheQogICAgaDogZC5nZXRIb3VycygpLAogICAgLy8gaG91cgogICAgbTogZC5nZXRNaW51dGVzKCksCiAgICAvLyBtaW51dGUKICAgIHM6IGQuZ2V0U2Vjb25kcygpIC8vIHNlY29uZAoKICB9OwogIHBhdHRlcm4gPSBwYXR0ZXJuLnJlcGxhY2UoLyh5KykvZ2ksIGZ1bmN0aW9uIChhLCBiKSB7CiAgICByZXR1cm4geS5zdWJzdHIoNCAtIE1hdGgubWluKDQsIGIubGVuZ3RoKSk7CiAgfSk7CiAgT2JqZWN0LmtleXMobykuZm9yRWFjaChmdW5jdGlvbiAoaSkgewogICAgcGF0dGVybiA9IHBhdHRlcm4ucmVwbGFjZShuZXcgUmVnRXhwKCcoJyArIGkgKyAnKyknLCAnZycpLCBmdW5jdGlvbiAoYSwgYikgewogICAgICByZXR1cm4gb1tpXSA8IDEwICYmIGIubGVuZ3RoID4gMSA/ICcwJyArIG9baV0gOiBvW2ldOwogICAgfSk7CiAgfSk7CiAgcmV0dXJuIHBhdHRlcm47Cn07CgpleHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDs="},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/date-format.js"],"names":["d","pattern","y","getFullYear","toString","o","M","getMonth","getDate","h","getHours","m","getMinutes","s","getSeconds","replace","a","b","substr","Math","min","length","Object","keys","forEach","i","RegExp"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;AACA;;AALA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;eACe,kBAACA,CAAD,EAA+B;AAAA,MAA3BC,OAA2B,uEAAjB,YAAiB;;AAC1C,MAAI,CAAC,kBAAOD,CAAP,EAAU,MAAV,CAAL,EAAwB;AACpB,UAAM,wBAAU,GAAV,EAAe,MAAf,EAAuBA,CAAvB,CAAN;AACH;;AAED,MAAIE,CAAC,GAAGF,CAAC,CAACG,WAAF,GAAgBC,QAAhB,EAAR;AACA,MAAIC,CAAC,GAAG;AACJC,IAAAA,CAAC,EAAEN,CAAC,CAACO,QAAF,KAAe,CADd;AACiB;AACrBP,IAAAA,CAAC,EAAEA,CAAC,CAACQ,OAAF,EAFC;AAEY;AAChBC,IAAAA,CAAC,EAAET,CAAC,CAACU,QAAF,EAHC;AAGa;AACjBC,IAAAA,CAAC,EAAEX,CAAC,CAACY,UAAF,EAJC;AAIe;AACnBC,IAAAA,CAAC,EAAEb,CAAC,CAACc,UAAF,EALC,CAKc;;AALd,GAAR;AAOAb,EAAAA,OAAO,GAAGA,OAAO,CAACc,OAAR,CAAgB,QAAhB,EAA0B,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUf,CAAC,CAACgB,MAAF,CAAS,IAAIC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYH,CAAC,CAACI,MAAd,CAAb,CAAV;AAAA,GAA1B,CAAV;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYlB,CAAZ,EAAemB,OAAf,CAAuB,UAAAC,CAAC,EAAI;AACxBxB,IAAAA,OAAO,GAAGA,OAAO,CAACc,OAAR,CAAgB,IAAIW,MAAJ,CAAW,MAAMD,CAAN,GAAU,IAArB,EAA2B,GAA3B,CAAhB,EAAiD,UAACT,CAAD,EAAIC,CAAJ;AAAA,aACvDZ,CAAC,CAACoB,CAAD,CAAD,GAAO,EAAP,IAAaR,CAAC,CAACI,MAAF,GAAW,CAAxB,GAA4B,MAAMhB,CAAC,CAACoB,CAAD,CAAnC,GAAyCpB,CAAC,CAACoB,CAAD,CADa;AAAA,KAAjD,CAAV;AAGH,GAJD;AAKA,SAAOxB,OAAP;AACH,C","sourcesContent":["/**\n * @file 日期格式化\n * @author wangyongqing <wangyongqing01@baidu.com>\n */\nimport {isType} from './type';\nimport typeError from './type-error';\n/**\n * 日期格式化\n * @author wangyongqing01\n * @function dateFormat\n * @param {Date} d - date 对象\n * @param {string} [pattern = 'yyyy-MM-dd'] - 字符串\n * @return {string} 处理后的字符串\n * @example\n *\tvar d = new Date();\n *  dateFormat(d,\" yyyy年M月d日\\n yyyy-MM-dd\\n MM-dd-yy\\n yyyy-MM-dd hh:mm:ss\")\n *  //2018年11月10日\\n 2018-01-01\\n 01-01-18\\n 2018-11-12 12:01:02\n */\nexport default (d, pattern = 'yyyy-MM-dd') => {\n    if (!isType(d, 'date')) {\n        throw typeError('d', 'Date', d);\n    }\n\n    let y = d.getFullYear().toString();\n    let o = {\n        M: d.getMonth() + 1, // month\n        d: d.getDate(), // day\n        h: d.getHours(), // hour\n        m: d.getMinutes(), // minute\n        s: d.getSeconds() // second\n    };\n    pattern = pattern.replace(/(y+)/gi, (a, b) => y.substr(4 - Math.min(4, b.length)));\n    Object.keys(o).forEach(i => {\n        pattern = pattern.replace(new RegExp('(' + i + '+)', 'g'), (a, b) =>\n            o[i] < 10 && b.length > 1 ? '0' + o[i] : o[i]\n        );\n    });\n    return pattern;\n};\n"]}]}