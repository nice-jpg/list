{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/storage.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/storage.js","mtime":1696919504571},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvVXNlcnMvbGlhb2h1YW55dS9wcm9qZWN0cy9iYWlkdS13b3JrL2JhaWR1L2ZlZWQzL211bHRpLXBhZ2VzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlciIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZW50cmllcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIik7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuZGVmYXVsdCA9IHN0b3JhZ2U7CmV4cG9ydHMuU3RvcmFnZSA9IHZvaWQgMDsKCnZhciBfc2xpY2VkVG9BcnJheTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi9Vc2Vycy9saWFvaHVhbnl1L3Byb2plY3RzL2JhaWR1LXdvcmsvYmFpZHUvZmVlZDMvbXVsdGktcGFnZXMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvc2xpY2VkVG9BcnJheSIpKTsKCnZhciBfY2xhc3NDYWxsQ2hlY2syID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIvVXNlcnMvbGlhb2h1YW55dS9wcm9qZWN0cy9iYWlkdS13b3JrL2JhaWR1L2ZlZWQzL211bHRpLXBhZ2VzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIikpOwoKdmFyIF9jcmVhdGVDbGFzczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi9Vc2Vycy9saWFvaHVhbnl1L3Byb2plY3RzL2JhaWR1LXdvcmsvYmFpZHUvZmVlZDMvbXVsdGktcGFnZXMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKSk7CgovKioKICogQGZpbGUg5bCB6KOFIGxzIOWSjCBzcyDnmoQgY2FjaGUg55So5rOVCiAqIEBhdXRob3Igd2FuZ3lvbmdxaW5nIDx3YW5neW9uZ3FpbmcwMUBiYWlkdS5jb20+CiAqLwp2YXIgc3RvcmFnZVN1cHBvcnQgPSB7fTsKWydsb2NhbCcsICdzZXNzaW9uJ10uZm9yRWFjaChmdW5jdGlvbiAodikgewogIHRyeSB7CiAgICB2YXIgbmFtZSA9IHYgKyAnU3RvcmFnZSc7CiAgICB2YXIgdCA9IG5hbWUgaW4gd2luZG93ICYmIHdpbmRvd1tuYW1lXSAhPT0gbnVsbDsKICAgIHZhciB0ZXN0ID0gewogICAgICBrOiAnX194Ym94X3Rlc3RfJywKICAgICAgdjogJ2l0XCdzIGdyZWF0JwogICAgfTsKCiAgICBpZiAodCkgewogICAgICB2YXIgX3N0b3JhZ2UgPSB3aW5kb3dbbmFtZV07CgogICAgICBfc3RvcmFnZS5zZXRJdGVtKHRlc3QuaywgdGVzdC52KTsKCiAgICAgIHQgPSB0ZXN0LnYgPT09IF9zdG9yYWdlLmdldEl0ZW0odGVzdC5rKTsKCiAgICAgIF9zdG9yYWdlLnJlbW92ZUl0ZW0odGVzdC5rKTsKICAgIH0KCiAgICBzdG9yYWdlU3VwcG9ydFt2XSA9IHRydWU7CiAgfSBjYXRjaCAoZSkgewogICAgc3RvcmFnZVN1cHBvcnRbdl0gPSBmYWxzZTsKICB9Cn0pOwp2YXIgZmFrZVN0b3JhZ2UgPSB7CiAgX19mYWtlX186IHRydWUsCiAgZGF0YToge30sCiAgc2V0SXRlbTogZnVuY3Rpb24gc2V0SXRlbShrLCB2KSB7CiAgICBmYWtlU3RvcmFnZS5kYXRhW2tdID0gdjsKICB9LAogIGdldEl0ZW06IGZ1bmN0aW9uIGdldEl0ZW0oaykgewogICAgcmV0dXJuIGZha2VTdG9yYWdlLmRhdGFba107CiAgfSwKICByZW1vdmVJdGVtOiBmdW5jdGlvbiByZW1vdmVJdGVtKGspIHsKICAgIGRlbGV0ZSBmYWtlU3RvcmFnZS5kYXRhW2tdOwogIH0KfTsKdmFyIGRlZmF1bHRWYWx1ZSA9IHVuZGVmaW5lZDsKLyoqCiAqIGxvY2Fsc3RvcmFnZeWSjHNlc3Npb25TdG9yYWdl5Ye95pWw5bCB6KOF57G777yM5aaC5p6c5LiN5pSv5oyB5YiZ6Ieq5Yqo5bCB6KOF5YaF5a2Y5a+56LGhCiAqIEBjbGFzcyBTdG9yYWdlCiAqIEBwYXJhbSAge3N0cmluZ30gW3ByZWZpeD0nX2RlZmF1bHRfJ10g57yT5a2Y5YmN57yACiAqIEBwYXJhbSAge251bWJlcn0gW2V4cGlyZT0wXSDnvJPlrZjml7bpl7QKICogQHBhcmFtICB7c3RyaW5nfSBbdHlwZT0nbG9jYWwnXSAgIOexu+Wei++8jGxvY2Fs5oiW6ICFc2Vzc2lvbgogKiBAYXV0aG9yIHdhbmd5b25ncWluZzAxCiAqLwoKdmFyIFN0b3JhZ2UgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIFN0b3JhZ2UoKSB7CiAgICB2YXIgcHJlZml4ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiAnX2RlZmF1bHRfJzsKICAgIHZhciBleHBpcmUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IDA7CiAgICB2YXIgdHlwZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogJ3Nlc3Npb24nOwogICAgKDAsIF9jbGFzc0NhbGxDaGVjazIuZGVmYXVsdCkodGhpcywgU3RvcmFnZSk7CgogICAgaWYgKHR5cGUubGVuZ3RoID4gNykgewogICAgICAvLyDlpITnkIZsb2NhbHN0b3JhZ2UgLT4gbG9jYWwKICAgICAgLy8gc2Vzc2lvbnN0b3JhZ2UgLT4gc2Vzc2lvbgogICAgICB0eXBlID0gdHlwZS5zbGljZSgwLCAtNyk7CiAgICB9CgogICAgdGhpcy50eXBlID0gdHlwZTsKICAgIHRoaXMucHJlZml4ID0gcHJlZml4ICsgJ18nOwogICAgdGhpcy5zdG9yYWdlID0gc3RvcmFnZVN1cHBvcnRbdHlwZV0gPyB3aW5kb3dbdHlwZSArICdTdG9yYWdlJ10gOiBmYWtlU3RvcmFnZTsKICB9CiAgLyoqCiAgICog5riF55CG6L+H5pyfa2V5CiAgICogQHJldHVybiB7U3RvcmFnZX0g6L+U5ZueY2FjaGUKICAgKi8KCgogICgwLCBfY3JlYXRlQ2xhc3MyLmRlZmF1bHQpKFN0b3JhZ2UsIFt7CiAgICBrZXk6ICJjbGVhckV4cGlyZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY2xlYXJFeHBpcmUoKSB7CiAgICAgIHZhciBrZXlzID0gdGhpcy5nZXRLZXlzKCk7CiAgICAgIHZhciBzZWxmID0gdGhpczsKICAgICAga2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICAvLyDliKnnlKhnZXTmuIXnkIbov4fmnJ9zdG9yYWdlCiAgICAgICAgc2VsZi5nZXQoa2V5KTsKICAgICAgfSk7CiAgICAgIHJldHVybiB0aGlzOwogICAgfQogICAgLyoqCiAgICAgKiDojrflj5bmiYDmnIlrZXlzCiAgICAgKiBAcmV0dXJuIHtBcnJheX0g6L+U5Zuea2V5cwogICAgICovCgogIH0sIHsKICAgIGtleTogImdldEtleXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEtleXMoKSB7CiAgICAgIHZhciBzdG9yYWdlID0gdGhpcy5zdG9yYWdlOwoKICAgICAgaWYgKHN0b3JhZ2UuX19mYWtlX18pIHsKICAgICAgICBzdG9yYWdlID0gc3RvcmFnZS5kYXRhOwogICAgICB9CgogICAgICB2YXIgcmVnID0gbmV3IFJlZ0V4cCgnXicgKyB0aGlzLnByZWZpeCk7CiAgICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMoc3RvcmFnZSk7CiAgICAgIHZhciByZXN1bHQgPSBbXTsKCiAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBrZXlzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgdmFyIGtleSA9IGtleXNbaV07CgogICAgICAgIGlmIChyZWcudGVzdChrZXkpKSB7CiAgICAgICAgICByZXN1bHQucHVzaChrZXkucmVwbGFjZShyZWcsICcnKSk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gcmVzdWx0OwogICAgfQogICAgLyoqCiAgICAgKiDnsbvkvLwgT2JqZWN0LmVudHJpZXMg6L+U5Zue5omA5pyJ5pWw57uECiAgICAgKiBAcmV0dXJuIHthcnJheX0g6L+U5Zue5pWw57uECiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiZ2V0RW50cmllcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0RW50cmllcygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBzdG9yYWdlID0gdGhpcy5zdG9yYWdlOwoKICAgICAgaWYgKHN0b3JhZ2UuX19mYWtlX18pIHsKICAgICAgICBzdG9yYWdlID0gc3RvcmFnZS5kYXRhOwogICAgICB9CgogICAgICB2YXIgcmVnID0gbmV3IFJlZ0V4cCgnXicgKyB0aGlzLnByZWZpeCk7CiAgICAgIHJldHVybiBPYmplY3QuZW50cmllcyhzdG9yYWdlKS5maWx0ZXIoZnVuY3Rpb24gKGFycikgewogICAgICAgIGlmIChyZWcudGVzdChhcnJbMF0pKSB7CiAgICAgICAgICBhcnJbMV0gPSBfdGhpcy5fZ2V0KGFyclsxXSk7CgogICAgICAgICAgaWYgKGFyclsxXSAhPT0gZGVmYXVsdFZhbHVlKSB7CiAgICAgICAgICAgIGFyclswXSA9IGFyclswXS5yZXBsYWNlKHJlZywgJycpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfSk7CiAgICB9CiAgICAvKioKICAgICAqIOiOt+WPluaJgOacieWAvAogICAgICogQHJldHVybiB7b2JqZWN0fSDov5Tlm57lr7nosaEKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJnZXRBbGwiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEFsbCgpIHsKICAgICAgdmFyIHJlc3VsdCA9IHt9OwogICAgICB0aGlzLmdldEVudHJpZXMoKS5mb3JFYWNoKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgICAgdmFyIF9yZWYyID0gKDAsIF9zbGljZWRUb0FycmF5Mi5kZWZhdWx0KShfcmVmLCAyKSwKICAgICAgICAgICAga2V5ID0gX3JlZjJbMF0sCiAgICAgICAgICAgIHZhbHVlID0gX3JlZjJbMV07CgogICAgICAgIHJlc3VsdFtrZXldID0gdmFsdWU7CiAgICAgIH0pOwogICAgICByZXR1cm4gcmVzdWx0OwogICAgfQogIH0sIHsKICAgIGtleTogIl9nZXQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIF9nZXQodmFsdWUpIHsKICAgICAgdmFyIGV4cGlyZUNhbGxiYWNrID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBmdW5jdGlvbiAoKSB7fTsKCiAgICAgIHRyeSB7CiAgICAgICAgdmFsdWUgPSBKU09OLnBhcnNlKHZhbHVlKTsKICAgICAgICB2YXIgdCA9IERhdGUubm93KCk7CgogICAgICAgIGlmICgnZXhwaXJlJyBpbiB2YWx1ZSAmJiB2YWx1ZS5leHBpcmUgPD0gdCkgewogICAgICAgICAgLy8g5pWw5o2u6L+H5pyf77yM5riF56m6CiAgICAgICAgICB2YWx1ZSA9IGRlZmF1bHRWYWx1ZTsKICAgICAgICAgIGV4cGlyZUNhbGxiYWNrKCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHZhbHVlID0gdmFsdWUuZGF0YTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICB2YWx1ZSA9IGRlZmF1bHRWYWx1ZTsKICAgICAgfQoKICAgICAgcmV0dXJuIHZhbHVlOwogICAgfQogICAgLyoqCiAgICAgKiDorr7nva7nvJPlrZgKICAgICAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgIC0gIOe8k+WtmOWQjeWtlwogICAgICogQHBhcmFtIHthbnl9IHZhbHVlICAtIOe8k+WtmOWGheWuue+8jOaUr+aMgW9iamVjdAogICAgICogQHBhcmFtIHtudW1iZXJ9IFtleHBpcmU9MF0gLSDnvJPlrZjml7bpl7QKICAgICAqIEByZXR1cm4ge1N0b3JhZ2V9IOi/lOWbnmNhY2hlCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAic2V0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXQoa2V5LCB2YWx1ZSkgewogICAgICB2YXIgZXhwaXJlID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiAwOwogICAgICBleHBpcmUgPSAoZXhwaXJlIHx8IHRoaXMuZXhwaXJlKSB8IDA7CiAgICAgIHZhciBkYXRhID0gewogICAgICAgIGRhdGE6IHZhbHVlCiAgICAgIH07CgogICAgICBpZiAoZXhwaXJlICE9PSAwKSB7CiAgICAgICAgZGF0YS5leHBpcmUgPSBEYXRlLm5vdygpICsgZXhwaXJlOwogICAgICB9CgogICAgICBrZXkgPSB0aGlzLnByZWZpeCArIGtleTsKICAgICAgdGhpcy5zdG9yYWdlLnNldEl0ZW0oa2V5LCBKU09OLnN0cmluZ2lmeShkYXRhKSk7CiAgICAgIHJldHVybiB0aGlzOwogICAgfQogICAgLyoqCiAgICAgKiDojrflj5bnvJPlrZgKICAgICAqIEBwYXJhbSAge3N0cmluZ30ga2V5IOe8k+WtmOWQjeensAogICAgICogQHJldHVybiB7YW55fSAgICAg57yT5a2Y5YaF5a6577yM6L+H5pyf6L+U5ZuebnVsbAogICAgICovCgogIH0sIHsKICAgIGtleTogImdldCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0KGtleSkgewogICAgICBrZXkgPSB0aGlzLnByZWZpeCArIGtleTsKICAgICAgdmFyIHN0b3JhZ2UgPSB0aGlzLnN0b3JhZ2U7CiAgICAgIHJldHVybiB0aGlzLl9nZXQoc3RvcmFnZS5nZXRJdGVtKGtleSksIGZ1bmN0aW9uICgpIHsKICAgICAgICBzdG9yYWdlLnJlbW92ZUl0ZW0oa2V5KTsKICAgICAgfSk7CiAgICB9CiAgICAvKioKICAgICAqIOa4hemZpOaJgOaciee8k+WtmAogICAgICogQHJldHVybiB7U3RvcmFnZX0g6L+U5ZueY2FjaGUKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJjbGVhciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY2xlYXIoKSB7CiAgICAgIHZhciBrZXlzID0gdGhpcy5nZXRLZXlzKCk7CiAgICAgIHZhciBzZWxmID0gdGhpczsKICAgICAga2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICBzZWxmLnJlbW92ZShrZXkpOwogICAgICB9KTsKICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CiAgICAvKioKICAgICAqIOWIoOmZpGtleeeahOe8k+WtmOWGheWuuQogICAgICogQHBhcmFtICB7c3RyaW5nfSBrZXkg6KaB5Yig6Zmk55qEa2V5CiAgICAgKiBAcmV0dXJuIHtTdG9yYWdlfSAgICAg6L+U5ZueY2FjaGUKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJyZW1vdmUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlbW92ZShrZXkpIHsKICAgICAgdGhpcy5zdG9yYWdlLnJlbW92ZUl0ZW0odGhpcy5wcmVmaXggKyBrZXkpOwogICAgICByZXR1cm4gdGhpczsKICAgIH0KICB9XSk7CiAgcmV0dXJuIFN0b3JhZ2U7Cn0oKTsKLyoqCiAqIGxvY2Fsc3RvcmFnZeWSjHNlc3Npb25TdG9yYWdl5Ye95pWw5bCB6KOF57G777yM5aaC5p6c5LiN5pSv5oyB5YiZ6Ieq5Yqo5bCB6KOF5YaF5a2Y5a+56LGhCiAqIEBmdW5jdGlvbiBzdG9yYWdlCiAqIEBwYXJhbSAge3N0cmluZ30gcHJlZml4IOe8k+WtmOWJjee8gAogKiBAcGFyYW0gIHtudW1iZXJ9IGV4cGlyZSDnvJPlrZjml7bpl7QKICogQHBhcmFtICB7c3RyaW5nfSBbdHlwZT0nbG9jYWwnXSAgIOexu+Wei++8jGxvY2Fs5oiW6ICFc2Vzc2lvbgogKiBAcmV0dXJuIHtTdG9yYWdlfSAgICAgICAgc3RvcmXlr7nosaEKICoKICogQGV4YW1wbGUKICogdmFyIHN0b3JlID0gc3RvcmFnZSgncHJlZml4JywgNjBlMywgJ3Nlc3Npb24nKTsKICogc3RvcmUuc2V0KCdhJywge2FiYzoxfSk7CiAqIGNvbnNvbGUubG9nKHN0b3JlLmdldCgnYScpKTsKICogLy/nvJPlrZgzMHMKICogc3RvcmUuc2V0KCdiJyx7YToxfSwgMzBFMyk7CiAqLwoKCmV4cG9ydHMuU3RvcmFnZSA9IFN0b3JhZ2U7CgpmdW5jdGlvbiBzdG9yYWdlKHByZWZpeCwgZXhwaXJlLCB0eXBlKSB7CiAgcmV0dXJuIG5ldyBTdG9yYWdlKHByZWZpeCwgZXhwaXJlLCB0eXBlKTsKfQ=="},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/storage.js"],"names":["storageSupport","forEach","v","name","t","window","test","k","storage","setItem","getItem","removeItem","e","fakeStorage","__fake__","data","defaultValue","undefined","Storage","prefix","expire","type","length","slice","keys","getKeys","self","key","get","reg","RegExp","Object","result","i","len","push","replace","entries","filter","arr","_get","getEntries","value","expireCallback","JSON","parse","Date","now","stringify","remove"],"mappings":"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","sourcesContent":["/**\n * @file 封装 ls 和 ss 的 cache 用法\n * @author wangyongqing <wangyongqing01@baidu.com>\n */\nlet storageSupport = {};\n['local', 'session'].forEach(v => {\n    try {\n        const name = v + 'Storage';\n        let t = name in window && window[name] !== null;\n        const test = {\n            k: '__xbox_test_',\n            v: 'it\\'s great'\n        };\n        if (t) {\n            const storage = window[name];\n            storage.setItem(test.k, test.v);\n            t = test.v === storage.getItem(test.k);\n            storage.removeItem(test.k);\n        }\n\n        storageSupport[v] = true;\n    }\n    catch (e) {\n        storageSupport[v] = false;\n    }\n});\n\nconst fakeStorage = {\n    __fake__: true,\n    data: {},\n    setItem: (k, v) => {\n        fakeStorage.data[k] = v;\n    },\n    getItem: k => {\n        return fakeStorage.data[k];\n    },\n    removeItem: k => {\n        delete fakeStorage.data[k];\n    }\n};\nconst defaultValue = undefined;\n\n/**\n * localstorage和sessionStorage函数封装类，如果不支持则自动封装内存对象\n * @class Storage\n * @param  {string} [prefix='_default_'] 缓存前缀\n * @param  {number} [expire=0] 缓存时间\n * @param  {string} [type='local']   类型，local或者session\n * @author wangyongqing01\n */\nexport class Storage {\n    constructor(prefix = '_default_', expire = 0, type = 'session') {\n        if (type.length > 7) {\n            // 处理localstorage -> local\n            // sessionstorage -> session\n            type = type.slice(0, -7);\n        }\n\n        this.type = type;\n        this.prefix = prefix + '_';\n        this.storage = storageSupport[type] ? window[type + 'Storage'] : fakeStorage;\n    }\n\n    /**\n     * 清理过期key\n     * @return {Storage} 返回cache\n     */\n    clearExpire() {\n        const keys = this.getKeys();\n        const self = this;\n        keys.forEach(key => {\n            // 利用get清理过期storage\n            self.get(key);\n        });\n        return this;\n    }\n\n    /**\n     * 获取所有keys\n     * @return {Array} 返回keys\n     */\n    getKeys() {\n        let storage = this.storage;\n        if (storage.__fake__) {\n            storage = storage.data;\n        }\n\n        const reg = new RegExp('^' + this.prefix);\n        const keys = Object.keys(storage);\n        const result = [];\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const key = keys[i];\n            if (reg.test(key)) {\n                result.push(key.replace(reg, ''));\n            }\n\n        }\n        return result;\n    }\n\n    /**\n     * 类似 Object.entries 返回所有数组\n     * @return {array} 返回数组\n     */\n    getEntries() {\n        let storage = this.storage;\n        if (storage.__fake__) {\n            storage = storage.data;\n        }\n\n        const reg = new RegExp('^' + this.prefix);\n\n        return Object.entries(storage).filter(arr => {\n            if (reg.test(arr[0])) {\n\n                arr[1] = this._get(arr[1]);\n                if (arr[1] !== defaultValue) {\n                    arr[0] = arr[0].replace(reg, '');\n                    return true;\n                }\n            }\n            return false;\n\n        });\n    }\n\n    /**\n     * 获取所有值\n     * @return {object} 返回对象\n     */\n    getAll() {\n        const result = {};\n        this.getEntries().forEach(([key, value]) => {\n            result[key] = value;\n        });\n        return result;\n    }\n    _get(value, expireCallback = () => {}) {\n        try {\n            value = JSON.parse(value);\n            const t = Date.now();\n            if ('expire' in value && value.expire <= t) {\n                // 数据过期，清空\n                value = defaultValue;\n                expireCallback();\n            }\n            else {\n                value = value.data;\n            }\n        }\n        catch (e) {\n            value = defaultValue;\n        }\n        return value;\n    }\n\n    /**\n     * 设置缓存\n     * @param {string} key  -  缓存名字\n     * @param {any} value  - 缓存内容，支持object\n     * @param {number} [expire=0] - 缓存时间\n     * @return {Storage} 返回cache\n     */\n    set(key, value, expire = 0) {\n        expire = (expire || this.expire) | 0;\n        const data = {\n            data: value\n        };\n        if (expire !== 0) {\n            data.expire = Date.now() + expire;\n        }\n\n        key = this.prefix + key;\n        this.storage.setItem(key, JSON.stringify(data));\n        return this;\n    }\n\n    /**\n     * 获取缓存\n     * @param  {string} key 缓存名称\n     * @return {any}     缓存内容，过期返回null\n     */\n    get(key) {\n        key = this.prefix + key;\n        const storage = this.storage;\n\n        return this._get(storage.getItem(key), ()=>{\n            storage.removeItem(key);\n        });\n    }\n\n    /**\n     * 清除所有缓存\n     * @return {Storage} 返回cache\n     */\n    clear() {\n        const keys = this.getKeys();\n        const self = this;\n        keys.forEach(key => {\n            self.remove(key);\n        });\n        return this;\n    }\n\n    /**\n     * 删除key的缓存内容\n     * @param  {string} key 要删除的key\n     * @return {Storage}     返回cache\n     */\n    remove(key) {\n        this.storage.removeItem(this.prefix + key);\n        return this;\n    }\n}\n\n/**\n * localstorage和sessionStorage函数封装类，如果不支持则自动封装内存对象\n * @function storage\n * @param  {string} prefix 缓存前缀\n * @param  {number} expire 缓存时间\n * @param  {string} [type='local']   类型，local或者session\n * @return {Storage}        store对象\n *\n * @example\n * var store = storage('prefix', 60e3, 'session');\n * store.set('a', {abc:1});\n * console.log(store.get('a'));\n * //缓存30s\n * store.set('b',{a:1}, 30E3);\n */\nexport default function storage(prefix, expire, type) {\n    return new Storage(prefix, expire, type);\n}\n"]}]}