{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/auc-base/node_modules/@baidu/feed-baselog/dist/index.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/auc-base/node_modules/@baidu/feed-baselog/dist/index.js","mtime":1696919504147},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkID0gcmVxdWlyZSgiL1VzZXJzL2xpYW9odWFueXUvcHJvamVjdHMvYmFpZHUtd29yay9iYWlkdS9mZWVkMy9tdWx0aS1wYWdlcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIik7Cgp2YXIgX2ludGVyb3BSZXF1aXJlRGVmYXVsdCA9IHJlcXVpcmUoIi9Vc2Vycy9saWFvaHVhbnl1L3Byb2plY3RzL2JhaWR1LXdvcmsvYmFpZHUvZmVlZDMvbXVsdGktcGFnZXMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0Iik7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDsKCnZhciBfdHNsaWIgPSByZXF1aXJlKCJ0c2xpYiIpOwoKdmFyIF9sb2Rhc2ggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoImxvZGFzaC5tZXJnZSIpKTsKCnZhciBfdGh1bmRlciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi9saWIvdGh1bmRlci5oNSIpKTsKCnZhciB1YmMgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCJAYmFpZHUvdWJjLXJlcG9ydC1zZGsiKSk7Cgp2YXIgX2NvbnN0ID0gcmVxdWlyZSgiLi9saWIvY29uc3QiKTsKCi8qKgogKiBAZmlsZSBiYXNlIGxvZwogKiBAYXV0aG9yIG9rYXljaGVuPGNoZW5nbG9uZzEzQGJhaWR1LmNvbT4KICovCnZhciBCYXNlTG9nID0KLyoqIEBjbGFzcyAqLwpmdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gQmFzZUxvZyhpbml0QXJncykgewogICAgdGhpcy51YmNJZHMgPSB7fTsgLy8g5Yid5aeL5YyW5ZCI5bm26buY6K6k5YC8CgogICAgdGhpcy5maW5hbFBhcmFtcyA9ICgwLCBfbG9kYXNoLmRlZmF1bHQpKHt9LCBfY29uc3QuSU5JVEFSR1MsIGluaXRBcmdzKTsgLy8gdGh1bmRlciBiYXNlIHBhcmFtcwoKICAgIHRoaXMuYmFzZVBhcmFtcyA9ICgwLCBfdHNsaWIuX19hc3NpZ24pKHt9LCB0aGlzLmZpbmFsUGFyYW1zLnRQYXJhbXMpOwogIH0gLy8gdWJjIHNldAoKCiAgQmFzZUxvZy5wcm90b3R5cGUudWJjSW5pdCA9IGZ1bmN0aW9uICh1YmNJZCkgewogICAgLy8g57uZ5q+P5LiqdWJjaWTnu5Hlrprpmo/mnLrmlbDlrp7kvosKICAgIHRoaXMudWJjSWRzW3ViY0lkXSA9IF9jb25zdC5SQU5ET007CiAgICB0aGlzLnViY0lkc1t1YmNJZF0gPSBuZXcgdWJjLlViY0xvZ2dlcigoMCwgX3RzbGliLl9fYXNzaWduKSh7CiAgICAgIHNlcnZlcklkOiB1YmNJZAogICAgfSwgdGhpcy5maW5hbFBhcmFtcy5wYXJhbXMpKTsKICB9OyAvLyB1YmMgc2VuZAoKCiAgQmFzZUxvZy5wcm90b3R5cGUudWJjU2VuZCA9IGZ1bmN0aW9uICh1YmNMaXN0LCBjYWxsYmFjaykgewogICAgdmFyIHViY0lkID0gdWJjTGlzdC51YmNJZCwKICAgICAgICBwYXJhbXMgPSB1YmNMaXN0LnBhcmFtcywKICAgICAgICBxdWVyeVBhcmFtcyA9IHViY0xpc3QucXVlcnlQYXJhbXM7CgogICAgaWYgKHF1ZXJ5UGFyYW1zKSB7CiAgICAgIHRoaXMudWJjSWRzW3ViY0lkXS5zZXQoewogICAgICAgIHF1ZXJ5UGFyYW1zOiAoMCwgX3RzbGliLl9fYXNzaWduKSh7fSwgcXVlcnlQYXJhbXMpCiAgICAgIH0pOwogICAgfQoKICAgIHRoaXMudWJjSWRzW3ViY0lkXS5zZW5kKCgwLCBfdHNsaWIuX19hc3NpZ24pKHt9LCBwYXJhbXMpKS50aGVuKGNhbGxiYWNrKTsKICB9OwogIC8qKgogICAqIOWPkemAgXViY+aXpeW/lwogICAqCiAgICogQHBhcmFtIHtPYmplY3R9IFt1YmNMaXN0XSDlj5HpgIHml6Xlv5fpnIDopoHmkLrluKbnmoTlj4LmlbAKICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2tdIOWujOaIkOWQjueahOWbnuiwg+WHveaVsAogICAqLwoKCiAgQmFzZUxvZy5wcm90b3R5cGUuc2VuZFViYyA9IGZ1bmN0aW9uICh1YmNMaXN0LCBjYWxsYmFjaykgewogICAgdmFyIHViY0lkID0gdWJjTGlzdC51YmNJZDsKCiAgICBpZiAodWJjSWQpIHsKICAgICAgaWYgKCF0aGlzLnViY0lkc1t1YmNJZF0pIHsKICAgICAgICAvLyDor6VpZOacquiiq+WIneWni+WMlgogICAgICAgIHRoaXMudWJjSW5pdCh1YmNJZCk7CiAgICAgICAgdGhpcy51YmNTZW5kKCgwLCBfdHNsaWIuX19hc3NpZ24pKHt9LCB1YmNMaXN0KSwgY2FsbGJhY2spOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMudWJjU2VuZCgoMCwgX3RzbGliLl9fYXNzaWduKSh7fSwgdWJjTGlzdCksIGNhbGxiYWNrKTsKICAgICAgfQogICAgfQogIH07CiAgLyoqCiAgICog5Y+R6YCBdGh1bmRlcuaXpeW/lwogICAqCiAgICogQHBhcmFtIHtPYmplY3R9IFtwYXJhbXNdIOmcgOimgeaQuuW4pueahOWPguaVsAogICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10g5a6M5oiQ5ZCO55qE5Zue6LCD5Ye95pWwCiAgICogQHBhcmFtIHtzdHJpbmd9IFt1cmxdIOWPkemAgeaXpeW/l+eahOi3n+i3r+W+hAogICAqLwoKCiAgQmFzZUxvZy5wcm90b3R5cGUuc2VuZFRodW5kZXIgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaywgdXJsKSB7CiAgICB2YXIgdGh1bmRlciA9IG5ldyBfdGh1bmRlci5kZWZhdWx0KHRoaXMuYmFzZVBhcmFtcyk7CiAgICB2YXIgdEZpbm5hbFBhcmFtcyA9ICgwLCBfbG9kYXNoLmRlZmF1bHQpKHt9LCB0aGlzLmJhc2VQYXJhbXMsIHBhcmFtcyk7CiAgICB0aHVuZGVyLnNlbmQoKDAsIF90c2xpYi5fX2Fzc2lnbikoe30sIHRGaW5uYWxQYXJhbXMpLCBjYWxsYmFjaywgdXJsKTsKICB9OwogIC8qKgogICAqIOWwj+a1gemHj+i/geenu+aXpeW/l++8jOaUr+aMgeWPjOaJk++8jHViYy90aHVuZGVy5bCP5rWB6YePCiAgICoKICAgKiBAcGFyYW0ge09iamVjdH0gW3RodW5kZXJMaXN0XSB0aHVuZGVy5pel5b+X5Y+C5pWwCiAgICogQHBhcmFtIHtudW1iZXJ9IFt1YmNJZF0g6L+B56e7dWJjaWTvvIzpu5jorqQxMzU4NwogICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10g5a6M5oiQ5ZCO55qE5Zue6LCDCiAgICogQHBhcmFtIHtzdHJpbmd9IFt1cmxdIOWPkemAgeaXpeW/l+eahOi3n+i3r+W+hAogICAqLwoKCiAgQmFzZUxvZy5wcm90b3R5cGUuc2VuZExvZyA9IGZ1bmN0aW9uICh0aHVuZGVyTGlzdCwgdWJjSWQsIGNhbGxiYWNrLCB1cmwpIHsKICAgIGlmICh1YmNJZCA9PT0gdm9pZCAwKSB7CiAgICAgIHViY0lkID0gX2NvbnN0LlVCQ0lEOwogICAgfQoKICAgIGlmICh1cmwgPT09IHZvaWQgMCkgewogICAgICB1cmwgPSBfY29uc3QuVEJBU0VVUkw7CiAgICB9CgogICAgdmFyIG1vZGUgPSB0aGlzLmZpbmFsUGFyYW1zLm1vZGU7CiAgICB2YXIgdGh1bmRlciA9IG5ldyBfdGh1bmRlci5kZWZhdWx0KHRoaXMuYmFzZVBhcmFtcyk7CiAgICB2YXIgdGh1bmRlclVSTCA9IHRodW5kZXIuYXNzZW1ibGVVcmwodXJsLCB0aGlzLmJhc2VQYXJhbXMsIHRodW5kZXJMaXN0KTsKICAgIF9jb25zdC5MT0dBUkdTLnViY0lkID0gdWJjSWQ7CiAgICBfY29uc3QuTE9HQVJHUy5wYXJhbXMuZXh0ID0gewogICAgICB1cmw6IHRodW5kZXJVUkwgKyAnJmZyb21VYmM9MScKICAgIH07CgogICAgaWYgKG1vZGUgPT09ICdib3RoJykgewogICAgICAvLyDlj4zmiZMKICAgICAgdGhpcy5zZW5kVWJjKCgwLCBfdHNsaWIuX19hc3NpZ24pKHt9LCBfY29uc3QuTE9HQVJHUyksIGNhbGxiYWNrKTsKICAgICAgdGhpcy5zZW5kVGh1bmRlcih0aHVuZGVyTGlzdCwgY2FsbGJhY2ssIHVybCk7CiAgICB9IGVsc2UgaWYgKG1vZGUgJiYgTWF0aC5yYW5kb20oKSA8ICttb2RlIHx8ICFtb2RlICYmIG1vZGUgIT09IDApIHsKICAgICAgLy8g5bCP5rWB6YePdWJj77yMbW9kZeS4jeS8oOm7mOiupOmAieaLqQogICAgICB0aGlzLnNlbmRVYmMoKDAsIF90c2xpYi5fX2Fzc2lnbikoe30sIF9jb25zdC5MT0dBUkdTKSwgY2FsbGJhY2spOwogICAgfSBlbHNlIHsKICAgICAgLy8g5bCP5rWB6YePVGh1bmRlcgogICAgICB2YXIgbWVyZ2VMaXN0ID0gKDAsIF9sb2Rhc2guZGVmYXVsdCkoe30sIHRodW5kZXJMaXN0LCB7CiAgICAgICAgZnJvbVViYzogMAogICAgICB9KTsKICAgICAgdGhpcy5zZW5kVGh1bmRlcihtZXJnZUxpc3QsIGNhbGxiYWNrLCB1cmwpOwogICAgfQogIH07CgogIHJldHVybiBCYXNlTG9nOwp9KCk7Cgp2YXIgX2RlZmF1bHQgPSBCYXNlTG9nOwpleHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsKOw=="},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/auc-base/node_modules/@baidu/feed-baselog/dist/index.js"],"names":["BaseLog","initArgs","ubcIds","finalParams","INITARGS","baseParams","tParams","prototype","ubcInit","ubcId","RANDOM","ubc","UbcLogger","serverId","params","ubcSend","ubcList","callback","queryParams","set","send","then","sendUbc","sendThunder","url","thunder","ThunderH5","tFinnalParams","sendLog","thunderList","UBCID","TBASEURL","mode","thunderURL","assembleUrl","LOGARGS","ext","Math","random","mergeList","fromUbc"],"mappings":"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","sourcesContent":["/**\n * @file base log\n * @author okaychen<chenglong13@baidu.com>\n */\nimport { __assign } from \"tslib\";\nimport merge from 'lodash.merge';\nimport ThunderH5 from './lib/thunder.h5';\nimport * as ubc from '@baidu/ubc-report-sdk';\nimport { RANDOM, INITARGS, TBASEURL, LOGARGS, UBCID } from './lib/const';\nvar BaseLog = /** @class */ (function () {\n    function BaseLog(initArgs) {\n        this.ubcIds = {};\n        // 初始化合并默认值\n        this.finalParams = merge({}, INITARGS, initArgs);\n        // thunder base params\n        this.baseParams = __assign({}, this.finalParams.tParams);\n    }\n    // ubc set\n    BaseLog.prototype.ubcInit = function (ubcId) {\n        // 给每个ubcid绑定随机数实例\n        this.ubcIds[ubcId] = RANDOM;\n        this.ubcIds[ubcId] = new ubc.UbcLogger(__assign({ serverId: ubcId }, this.finalParams.params));\n    };\n    // ubc send\n    BaseLog.prototype.ubcSend = function (ubcList, callback) {\n        var ubcId = ubcList.ubcId, params = ubcList.params, queryParams = ubcList.queryParams;\n        if (queryParams) {\n            this.ubcIds[ubcId].set({\n                queryParams: __assign({}, queryParams)\n            });\n        }\n        this.ubcIds[ubcId].send(__assign({}, params)).then(callback);\n    };\n    /**\n     * 发送ubc日志\n     *\n     * @param {Object} [ubcList] 发送日志需要携带的参数\n     * @param {Function} [callback] 完成后的回调函数\n     */\n    BaseLog.prototype.sendUbc = function (ubcList, callback) {\n        var ubcId = ubcList.ubcId;\n        if (ubcId) {\n            if (!this.ubcIds[ubcId]) {\n                // 该id未被初始化\n                this.ubcInit(ubcId);\n                this.ubcSend(__assign({}, ubcList), callback);\n            }\n            else {\n                this.ubcSend(__assign({}, ubcList), callback);\n            }\n        }\n    };\n    /**\n     * 发送thunder日志\n     *\n     * @param {Object} [params] 需要携带的参数\n     * @param {Function} [callback] 完成后的回调函数\n     * @param {string} [url] 发送日志的跟路径\n     */\n    BaseLog.prototype.sendThunder = function (params, callback, url) {\n        var thunder = new ThunderH5(this.baseParams);\n        var tFinnalParams = merge({}, this.baseParams, params);\n        thunder.send(__assign({}, tFinnalParams), callback, url);\n    };\n    /**\n     * 小流量迁移日志，支持双打，ubc/thunder小流量\n     *\n     * @param {Object} [thunderList] thunder日志参数\n     * @param {number} [ubcId] 迁移ubcid，默认13587\n     * @param {Function} [callback] 完成后的回调\n     * @param {string} [url] 发送日志的跟路径\n     */\n    BaseLog.prototype.sendLog = function (thunderList, ubcId, callback, url) {\n        if (ubcId === void 0) { ubcId = UBCID; }\n        if (url === void 0) { url = TBASEURL; }\n        var mode = this.finalParams.mode;\n        var thunder = new ThunderH5(this.baseParams);\n        var thunderURL = thunder.assembleUrl(url, this.baseParams, thunderList);\n        LOGARGS.ubcId = ubcId;\n        LOGARGS.params.ext = {\n            url: thunderURL + '&fromUbc=1'\n        };\n        if (mode === 'both') {\n            // 双打\n            this.sendUbc(__assign({}, LOGARGS), callback);\n            this.sendThunder(thunderList, callback, url);\n        }\n        else if ((mode && Math.random() < +mode) || (!mode && mode !== 0)) {\n            // 小流量ubc，mode不传默认选择\n            this.sendUbc(__assign({}, LOGARGS), callback);\n        }\n        else {\n            // 小流量Thunder\n            var mergeList = merge({}, thunderList, { fromUbc: 0 });\n            this.sendThunder(mergeList, callback, url);\n        }\n    };\n    return BaseLog;\n}());\nexport default BaseLog;\n;\n"]}]}