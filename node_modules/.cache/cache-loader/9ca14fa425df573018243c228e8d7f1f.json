{"remainingRequest":"/Users/a2012/Desktop/list/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/a2012/Desktop/list/src/lib/Store.js","dependencies":[{"path":"/Users/a2012/Desktop/list/src/lib/Store.js","mtime":1695633995000},{"path":"/Users/a2012/Desktop/list/node_modules/san-hot-loader/index.js","mtime":1696919525000},{"path":"/Users/a2012/Desktop/list/node_modules/cache-loader/dist/cjs.js","mtime":1696919513000},{"path":"/Users/a2012/Desktop/list/node_modules/babel-loader/lib/index.js","mtime":1696919524000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvVXNlcnMvYTIwMTIvRGVza3RvcC9saXN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMucmVmbGVjdC5jb25zdHJ1Y3QiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCIpOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIlN0b3JlIiwgewogIGVudW1lcmFibGU6IHRydWUsCiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICByZXR1cm4gX3NhblN0b3JlLlN0b3JlOwogIH0KfSk7CmV4cG9ydHMuY29ubmVjdCA9IGV4cG9ydHMuc3RvcmUgPSB2b2lkIDA7Cgp2YXIgX3R5cGVvZjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi9Vc2Vycy9hMjAxMi9EZXNrdG9wL2xpc3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdHlwZW9mIikpOwoKdmFyIF9jbGFzc0NhbGxDaGVjazIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi9Vc2Vycy9hMjAxMi9EZXNrdG9wL2xpc3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKSk7Cgp2YXIgX2NyZWF0ZUNsYXNzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiL1VzZXJzL2EyMDEyL0Rlc2t0b3AvbGlzdC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpKTsKCnZhciBfaW5oZXJpdHMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIvVXNlcnMvYTIwMTIvRGVza3RvcC9saXN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzIikpOwoKdmFyIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiL1VzZXJzL2EyMDEyL0Rlc2t0b3AvbGlzdC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIikpOwoKdmFyIF9nZXRQcm90b3R5cGVPZjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi9Vc2Vycy9hMjAxMi9EZXNrdG9wL2xpc3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZ2V0UHJvdG90eXBlT2YiKSk7Cgp2YXIgX3NhblN0b3JlID0gcmVxdWlyZSgic2FuLXN0b3JlIik7CgpmdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkgeyB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTsgcmV0dXJuIGZ1bmN0aW9uIF9jcmVhdGVTdXBlckludGVybmFsKCkgeyB2YXIgU3VwZXIgPSAoMCwgX2dldFByb3RvdHlwZU9mMi5kZWZhdWx0KShEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gKDAsIF9nZXRQcm90b3R5cGVPZjIuZGVmYXVsdCkodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuICgwLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjIuZGVmYXVsdCkodGhpcywgcmVzdWx0KTsgfTsgfQoKZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSAidW5kZWZpbmVkIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gImZ1bmN0aW9uIikgcmV0dXJuIHRydWU7IHRyeSB7IERhdGUucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoRGF0ZSwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9Cgp2YXIgY3JlYXRlQ29ubmVjdG9yID0gX3NhblN0b3JlLmNvbm5lY3QuY3JlYXRlQ29ubmVjdG9yOwoKdmFyIE5ld1N0b3JlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfU3RvcmUpIHsKICAoMCwgX2luaGVyaXRzMi5kZWZhdWx0KShOZXdTdG9yZSwgX1N0b3JlKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihOZXdTdG9yZSk7CgogIGZ1bmN0aW9uIE5ld1N0b3JlKG9wdGlvbnMpIHsKICAgICgwLCBfY2xhc3NDYWxsQ2hlY2syLmRlZmF1bHQpKHRoaXMsIE5ld1N0b3JlKTsKICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBvcHRpb25zKTsKICB9CiAgLyoqCiAgICog5Yid5aeL5YyW5pWw5o2uCiAgICogQHBhcmFtIHtPYmplY3R9IGRhdGEg5Yid5aeL5YyW5pWw5o2uCiAgICovCgoKICAoMCwgX2NyZWF0ZUNsYXNzMi5kZWZhdWx0KShOZXdTdG9yZSwgW3sKICAgIGtleTogImluaXREYXRhIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBpbml0RGF0YShkYXRhKSB7CiAgICAgIC8vIOi/memHjOaciemjjumZqe+8jOWmguaenCBzdG9yZSDnsbvnmoTlrp7njrDlj5jkuoblkI3np7DvvIzkvJrlvbHlk40KICAgICAgLy8g5Y2H57qn5rOo5oSP77yBCiAgICAgIGlmICgoMCwgX3R5cGVvZjIuZGVmYXVsdCkoZGF0YSkgPT09ICdvYmplY3QnKSB7CiAgICAgICAgdmFyIHJhdyA9IHRoaXMucmF3OwogICAgICAgIE9iamVjdC5rZXlzKGRhdGEpLmZvckVhY2goZnVuY3Rpb24gKG5hbWUpIHsKICAgICAgICAgIGlmIChyYXdbbmFtZV0pIHsKICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTdG9yZS5pbml0RGF0YTogJyArIG5hbWUgKyAnIGV4aXN0cyEnKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKG5hbWUpCiAgICAgICAgICAgIHJhd1tuYW1lXSA9IGRhdGFbbmFtZV07CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzOwogICAgfQogICAgLyoqCiAgICAgKiDmibnph4/mt7vliqBhY3Rpb24KICAgICAqIEBwYXJhbSAge09iamVjdH0gYWN0aW9ucyDmt7vliqDnmoRhY3Rpb27mlbDmja7vvIxrZXnvvJpmdW5jdGlvbgogICAgICovCgogIH0sIHsKICAgIGtleTogImFkZEFjdGlvbnMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGFkZEFjdGlvbnMoYWN0aW9ucykgewogICAgICB2YXIgYWRkQWN0aW9uID0gdGhpcy5hZGRBY3Rpb24uYmluZCh0aGlzKTsKCiAgICAgIGlmICgoMCwgX3R5cGVvZjIuZGVmYXVsdCkoYWN0aW9ucykgPT09ICdvYmplY3QnKSB7CiAgICAgICAgT2JqZWN0LmtleXMoYWN0aW9ucykuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkgewogICAgICAgICAgYWRkQWN0aW9uKG5hbWUsIGFjdGlvbnNbbmFtZV0pOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHRocm93IG5ldyBFcnJvcignU3RvcmUuYWRkQWN0aW9uczogYWN0aW9ucyB0eXBlIHNob3VsZCBiZSBhbiBvYmplY3QnKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CiAgfV0pOwogIHJldHVybiBOZXdTdG9yZTsKfShfc2FuU3RvcmUuU3RvcmUpOwovKioKICog6buY6K6k55qE5YWo5bGAIFN0b3JlIOWunuS+iwogKiDpgJrluLjmiJHku6zorqTkuLrlnKjkuIDkuKrlupTnlKjlupTor6XlhbfmnInkuIDkuKrlhajlsYDllK/kuIDnmoQgc3RvcmXvvIznrqHnkIbmlbTkuKrlupTnlKjnirbmgIEKICoKICogQHR5cGUge1N0b3JlfQogKi8KCgp2YXIgc3RvcmUgPSBuZXcgTmV3U3RvcmUoewogIG5hbWU6ICdfX2RlZmF1bHRfXycKfSk7CmV4cG9ydHMuc3RvcmUgPSBzdG9yZTsKdmFyIGNvbm5lY3QgPSB7CiAgc2FuOiBjcmVhdGVDb25uZWN0b3Ioc3RvcmUpLAogIGNyZWF0ZUNvbm5lY3RvcjogY3JlYXRlQ29ubmVjdG9yCn07CmV4cG9ydHMuY29ubmVjdCA9IGNvbm5lY3Q7"},{"version":3,"sources":["/Users/a2012/Desktop/list/src/lib/Store.js"],"names":["createConnector","sanConnect","NewStore","options","data","raw","Object","keys","forEach","name","Error","actions","addAction","bind","Store","store","connect","san"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;;;;;AACA,IAAMA,eAAe,GAAGC,kBAAWD,eAAnC;;IAEME,Q;;;;;AACF,oBAAYC,OAAZ,EAAqB;AAAA;AAAA,6BACXA,OADW;AAEpB;AAED;AACJ;AACA;AACA;;;;;6BACaC,I,EAAM;AACX;AACA;AACA,UAAI,sBAAOA,IAAP,MAAgB,QAApB,EAA8B;AAC1B,YAAMC,GAAG,GAAG,KAAKA,GAAjB;AAEAC,QAAAA,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,OAAlB,CAA0B,UAAAC,IAAI,EAAI;AAC9B,cAAIJ,GAAG,CAACI,IAAD,CAAP,EAAe;AACX,kBAAM,IAAIC,KAAJ,CAAU,qBAAqBD,IAArB,GAA4B,UAAtC,CAAN;AACH,WAFD,MAGK;AACD;AACAJ,YAAAA,GAAG,CAACI,IAAD,CAAH,GAAYL,IAAI,CAACK,IAAD,CAAhB;AACH;AACJ,SARD;AASH;;AACD,aAAO,IAAP;AACH;AAED;AACJ;AACA;AACA;;;;+BACeE,O,EAAS;AAChB,UAAMC,SAAS,GAAG,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAlB;;AACA,UAAI,sBAAOF,OAAP,MAAmB,QAAvB,EAAiC;AAC7BL,QAAAA,MAAM,CAACC,IAAP,CAAYI,OAAZ,EAAqBH,OAArB,CAA6B,UAAAC,IAAI,EAAI;AACjCG,UAAAA,SAAS,CAACH,IAAD,EAAOE,OAAO,CAACF,IAAD,CAAd,CAAT;AACH,SAFD;AAGH,OAJD,MAKK;AACD,cAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;AACH;;AACD,aAAO,IAAP;AACH;;;EA3CkBI,e;AA8CvB;AACA;AACA;AACA;AACA;AACA;;;AACO,IAAIC,KAAK,GAAG,IAAIb,QAAJ,CAAa;AAACO,EAAAA,IAAI,EAAE;AAAP,CAAb,CAAZ;;AAKA,IAAIO,OAAO,GAAG;AACjBC,EAAAA,GAAG,EAAEjB,eAAe,CAACe,KAAD,CADH;AAEjBf,EAAAA,eAAe,EAAfA;AAFiB,CAAd","sourcesContent":["/**\n * @file san store 类的基本封装\n * store 没有初始化数据，会导致多写一写代码。。\n */\n\nimport {Store, connect as sanConnect} from 'san-store';\nconst createConnector = sanConnect.createConnector;\n\nclass NewStore extends Store {\n    constructor(options) {\n        super(options);\n    }\n\n    /**\n     * 初始化数据\n     * @param {Object} data 初始化数据\n     */\n    initData(data) {\n        // 这里有风险，如果 store 类的实现变了名称，会影响\n        // 升级注意！\n        if (typeof data === 'object') {\n            const raw = this.raw;\n\n            Object.keys(data).forEach(name => {\n                if (raw[name]) {\n                    throw new Error('Store.initData: ' + name + ' exists!');\n                }\n                else {\n                    // console.log(name)\n                    raw[name] = data[name];\n                }\n            });\n        }\n        return this;\n    }\n\n    /**\n     * 批量添加action\n     * @param  {Object} actions 添加的action数据，key：function\n     */\n    addActions(actions) {\n        const addAction = this.addAction.bind(this);\n        if (typeof actions === 'object') {\n            Object.keys(actions).forEach(name => {\n                addAction(name, actions[name]);\n            });\n        }\n        else {\n            throw new Error('Store.addActions: actions type should be an object');\n        }\n        return this;\n    }\n}\n\n/**\n * 默认的全局 Store 实例\n * 通常我们认为在一个应用应该具有一个全局唯一的 store，管理整个应用状态\n *\n * @type {Store}\n */\nexport let store = new NewStore({name: '__default__'});\n\n\nexport {Store};\n\nexport let connect = {\n    san: createConnector(store),\n    createConnector\n};\n"]}]}