{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/src/pages/news/components/actor-intro/index.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/src/pages/news/components/actor-intro/index.js","mtime":1695633995754},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvVXNlcnMvbGlhb2h1YW55dS9wcm9qZWN0cy9iYWlkdS13b3JrL2JhaWR1L2ZlZWQzL211bHRpLXBhZ2VzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5yZWZsZWN0LmNvbnN0cnVjdCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmciKTsKCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwOwoKcmVxdWlyZSgicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIik7Cgp2YXIgX2FzeW5jVG9HZW5lcmF0b3IyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIvVXNlcnMvbGlhb2h1YW55dS9wcm9qZWN0cy9iYWlkdS13b3JrL2JhaWR1L2ZlZWQzL211bHRpLXBhZ2VzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FzeW5jVG9HZW5lcmF0b3IiKSk7Cgp2YXIgX2NsYXNzQ2FsbENoZWNrMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiL1VzZXJzL2xpYW9odWFueXUvcHJvamVjdHMvYmFpZHUtd29yay9iYWlkdS9mZWVkMy9tdWx0aS1wYWdlcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpKTsKCnZhciBfY3JlYXRlQ2xhc3MyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIvVXNlcnMvbGlhb2h1YW55dS9wcm9qZWN0cy9iYWlkdS13b3JrL2JhaWR1L2ZlZWQzL211bHRpLXBhZ2VzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIikpOwoKdmFyIF9pbmhlcml0czIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi9Vc2Vycy9saWFvaHVhbnl1L3Byb2plY3RzL2JhaWR1LXdvcmsvYmFpZHUvZmVlZDMvbXVsdGktcGFnZXMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMiKSk7Cgp2YXIgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIvVXNlcnMvbGlhb2h1YW55dS9wcm9qZWN0cy9iYWlkdS13b3JrL2JhaWR1L2ZlZWQzL211bHRpLXBhZ2VzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iKSk7Cgp2YXIgX2dldFByb3RvdHlwZU9mMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiL1VzZXJzL2xpYW9odWFueXUvcHJvamVjdHMvYmFpZHUtd29yay9iYWlkdS9mZWVkMy9tdWx0aS1wYWdlcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXRQcm90b3R5cGVPZiIpKTsKCnZhciBfZGVmaW5lUHJvcGVydHkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIvVXNlcnMvbGlhb2h1YW55dS9wcm9qZWN0cy9iYWlkdS13b3JrL2JhaWR1L2ZlZWQzL211bHRpLXBhZ2VzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5IikpOwoKcmVxdWlyZSgiLi9pbmRleC5sZXNzIik7Cgp2YXIgX3NhbiA9IHJlcXVpcmUoInNhbiIpOwoKcmVxdWlyZSgiLi4vLi4vYXNzZXRzL3N3aXBlci5jc3MiKTsKCnZhciBfaW5kZXgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL2luZGV4Lmh0bWwiKSk7Cgp2YXIgX3N3aXBlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkAvbGliL3V0aWxzL3N3aXBlciIpKTsKCnZhciBfdWJjUmVwb3J0U2RrID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJAYmFpZHUvdWJjLXJlcG9ydC1zZGsiKSk7CgpmdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkgeyB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTsgcmV0dXJuIGZ1bmN0aW9uIF9jcmVhdGVTdXBlckludGVybmFsKCkgeyB2YXIgU3VwZXIgPSAoMCwgX2dldFByb3RvdHlwZU9mMi5kZWZhdWx0KShEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gKDAsIF9nZXRQcm90b3R5cGVPZjIuZGVmYXVsdCkodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuICgwLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjIuZGVmYXVsdCkodGhpcywgcmVzdWx0KTsgfTsgfQoKZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSAidW5kZWZpbmVkIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gImZ1bmN0aW9uIikgcmV0dXJuIHRydWU7IHRyeSB7IERhdGUucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoRGF0ZSwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9Cgp2YXIgQWN0b3IgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Db21wb25lbnQpIHsKICAoMCwgX2luaGVyaXRzMi5kZWZhdWx0KShBY3RvciwgX0NvbXBvbmVudCk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoQWN0b3IpOwoKICBmdW5jdGlvbiBBY3RvcigpIHsKICAgICgwLCBfY2xhc3NDYWxsQ2hlY2syLmRlZmF1bHQpKHRoaXMsIEFjdG9yKTsKICAgIHJldHVybiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9CgogICgwLCBfY3JlYXRlQ2xhc3MyLmRlZmF1bHQpKEFjdG9yLCBbewogICAga2V5OiAiYXR0YWNoZWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9hdHRhY2hlZCA9ICgwLCBfYXN5bmNUb0dlbmVyYXRvcjIuZGVmYXVsdCkoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIG5ldyBfc3dpcGVyMi5kZWZhdWx0KHRoaXMuZWwsIHsKICAgICAgICAgICAgICAgICAgZnJlZU1vZGU6IHRydWUsCiAgICAgICAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6ICdhdXRvJywKICAgICAgICAgICAgICAgICAgc2V0V3JhcHBlclNpemU6IHRydWUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgKDAsIF91YmNSZXBvcnRTZGsuZGVmYXVsdCkoJ2NhcmRMb2cuZXZlbnQnLCB7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICdwZW9wbGVTaG93JywKICAgICAgICAgICAgICAgICAgdmFsdWU6ICdwZW9wbGUnCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGF0dGFjaGVkKCkgewogICAgICAgIHJldHVybiBfYXR0YWNoZWQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGF0dGFjaGVkOwogICAgfSgpCiAgfSwgewogICAga2V5OiAiZm9sbG93Q2xpY2siLAogICAgdmFsdWU6IGZ1bmN0aW9uIGZvbGxvd0NsaWNrKGluZGV4KSB7CiAgICAgIHRoaXMuZmlyZSgnZm9sbG93Q2xpY2snLCB7CiAgICAgICAgaW5kZXg6IGluZGV4LAogICAgICAgIGRhdGFJbmRleDogdGhpcy5kYXRhLmdldCgnaW5kZXgnKQogICAgICB9KTsKICAgICAgKDAsIF91YmNSZXBvcnRTZGsuZGVmYXVsdCkoJ2NhcmRMb2cuZXZlbnQnLCB7CiAgICAgICAgdHlwZTogJ3Blb3BsZUZvbGxvdycsCiAgICAgICAgdmFsdWU6ICdwZW9wbGUnLAogICAgICAgIGV4dDogewogICAgICAgICAgaW5kZXg6IGluZGV4CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJhdXRob3JDbGljayIsCiAgICB2YWx1ZTogZnVuY3Rpb24gYXV0aG9yQ2xpY2soaW5kZXgpIHsKICAgICAgdGhpcy5maXJlKCdhdXRob3JDbGljaycsIHsKICAgICAgICBpbmRleDogaW5kZXgsCiAgICAgICAgZGF0YUluZGV4OiB0aGlzLmRhdGEuZ2V0KCdpbmRleCcpCiAgICAgIH0pOwogICAgICAoMCwgX3ViY1JlcG9ydFNkay5kZWZhdWx0KSgnY2FyZExvZy5ldmVudCcsIHsKICAgICAgICB0eXBlOiAncGVvcGxlQ2xpY2snLAogICAgICAgIHZhbHVlOiAncGVvcGxlJwogICAgICB9KTsKICAgIH0KICB9XSk7CiAgcmV0dXJuIEFjdG9yOwp9KF9zYW4uQ29tcG9uZW50KTsKCmV4cG9ydHMuZGVmYXVsdCA9IEFjdG9yOwooMCwgX2RlZmluZVByb3BlcnR5Mi5kZWZhdWx0KShBY3RvciwgInRlbXBsYXRlIiwgX2luZGV4Mi5kZWZhdWx0KTsKCmlmIChtb2R1bGUuaG90KSB7CiAgdmFyIF9fSE9UX0FQSV9fID0gcmVxdWlyZSgnL1VzZXJzL2xpYW9odWFueXUvcHJvamVjdHMvYmFpZHUtd29yay9iYWlkdS9mZWVkMy9tdWx0aS1wYWdlcy9ub2RlX21vZHVsZXMvc2FuLWhvdC1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50LWNsaWVudC1hcGkuanMnKTsKCiAgdmFyIF9fSE9UX1VUSUxTX18gPSByZXF1aXJlKCcvVXNlcnMvbGlhb2h1YW55dS9wcm9qZWN0cy9iYWlkdS13b3JrL2JhaWR1L2ZlZWQzL211bHRpLXBhZ2VzL25vZGVfbW9kdWxlcy9zYW4taG90LWxvYWRlci9saWIvcnVudGltZS91dGlscy5qcycpOwoKICB2YXIgX19TQU5fQ09NUE9ORU5UX18gPSBfX0hPVF9VVElMU19fLmdldEV4cG9ydHMobW9kdWxlKTsKCiAgaWYgKF9fU0FOX0NPTVBPTkVOVF9fLnRlbXBsYXRlIHx8IF9fU0FOX0NPTVBPTkVOVF9fLnByb3RvdHlwZS50ZW1wbGF0ZSkgewogICAgbW9kdWxlLmhvdC5hY2NlcHQoKTsKCiAgICBfX0hPVF9BUElfXy5pbnN0YWxsKHJlcXVpcmUoJ3NhbicpKTsKCiAgICB2YXIgX19ITVJfSURfXyA9ICc0MjI0YWJmNic7CgogICAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHsKICAgICAgX19IT1RfQVBJX18uY3JlYXRlUmVjb3JkKF9fSE1SX0lEX18sIF9fU0FOX0NPTVBPTkVOVF9fKTsKICAgIH0gZWxzZSB7CiAgICAgIF9fSE9UX0FQSV9fLmhvdFJlbG9hZChfX0hNUl9JRF9fLCBfX1NBTl9DT01QT05FTlRfXyk7CiAgICB9CiAgfQp9"},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/src/pages/news/components/actor-intro/index.js"],"names":["Actor","Swiper","el","freeMode","slidesPerView","setWrapperSize","type","value","index","fire","dataIndex","data","get","ext","Component","template","module","hot","__HOT_API__","require","__HOT_UTILS__","__SAN_COMPONENT__","getExports","prototype","accept","install","__HMR_ID__","createRecord","hotReload"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;IACqBA,K;;;;;;;;;;;;;;;;;;AAIb,oBAAIC,gBAAJ,CAAW,KAAKC,EAAhB,EAAoB;AAChBC,kBAAAA,QAAQ,EAAE,IADM;AAEhBC,kBAAAA,aAAa,EAAE,MAFC;AAGhBC,kBAAAA,cAAc,EAAE;AAHA,iBAApB;AAKA,2CAAI,eAAJ,EAAqB;AACjBC,kBAAAA,IAAI,EAAE,YADW;AAEjBC,kBAAAA,KAAK,EAAE;AAFU,iBAArB;;;;;;;;;;;;;;;;;;gCAKQC,K,EAAO;AACf,WAAKC,IAAL,CAAU,aAAV,EAAyB;AAACD,QAAAA,KAAK,EAALA,KAAD;AAAQE,QAAAA,SAAS,EAAE,KAAKC,IAAL,CAAUC,GAAV,CAAc,OAAd;AAAnB,OAAzB;AACA,iCAAI,eAAJ,EAAqB;AACjBN,QAAAA,IAAI,EAAE,cADW;AAEjBC,QAAAA,KAAK,EAAE,QAFU;AAGjBM,QAAAA,GAAG,EAAE;AACDL,UAAAA,KAAK,EAALA;AADC;AAHY,OAArB;AAOH;;;gCACWA,K,EAAO;AACf,WAAKC,IAAL,CAAU,aAAV,EAAyB;AAACD,QAAAA,KAAK,EAALA,KAAD;AAAQE,QAAAA,SAAS,EAAE,KAAKC,IAAL,CAAUC,GAAV,CAAc,OAAd;AAAnB,OAAzB;AACA,iCAAI,eAAJ,EAAqB;AACjBN,QAAAA,IAAI,EAAE,aADW;AAEjBC,QAAAA,KAAK,EAAE;AAFU,OAArB;AAIH;;;EA9B8BO,c;;;8BAAdd,K,cACCe,e;;AANlB,IAAIC,MAAM,CAACC,GAAX,EAAgB;AACZ,MAAIC,WAAW,GAAGC,OAAO,CAAC,+HAAD,CAAzB;;AACA,MAAIC,aAAa,GAAGD,OAAO,CAAC,gHAAD,CAA3B;;AAEA,MAAIE,iBAAiB,GAAGD,aAAa,CAACE,UAAd,CAAyBN,MAAzB,CAAxB;;AACA,MAAIK,iBAAiB,CAACN,QAAlB,IAA8BM,iBAAiB,CAACE,SAAlB,CAA4BR,QAA9D,EAAwE;AACpEC,IAAAA,MAAM,CAACC,GAAP,CAAWO,MAAX;;AACAN,IAAAA,WAAW,CAACO,OAAZ,CAAoBN,OAAO,CAAC,KAAD,CAA3B;;AAEA,QAAIO,UAAU,GAAG,UAAjB;;AACA,QAAI,CAACV,MAAM,CAACC,GAAP,CAAWN,IAAhB,EAAsB;AAClBO,MAAAA,WAAW,CAACS,YAAZ,CAAyBD,UAAzB,EAAqCL,iBAArC;AACH,KAFD,MAGK;AACDH,MAAAA,WAAW,CAACU,SAAZ,CAAsBF,UAAtB,EAAkCL,iBAAlC;AACH;AACJ;AACJ","sourcesContent":["import './index.less';\nimport {Component} from 'san';\nimport '../../assets/swiper.css';\nimport template from './index.html';\nimport Swiper from '@/lib/utils/swiper';\nimport ubc from '@baidu/ubc-report-sdk';\nexport default class Actor extends Component {\n    static template = template;\n\n    async attached() {\n        new Swiper(this.el, {\n            freeMode: true,\n            slidesPerView: 'auto',\n            setWrapperSize: true,\n        });\n        ubc('cardLog.event', {\n            type: 'peopleShow',\n            value: 'people'\n        });\n    }\n    followClick(index) {\n        this.fire('followClick', {index, dataIndex: this.data.get('index')});\n        ubc('cardLog.event', {\n            type: 'peopleFollow',\n            value: 'people',\n            ext: {\n                index\n            }\n        });\n    }\n    authorClick(index) {\n        this.fire('authorClick', {index, dataIndex: this.data.get('index')});\n        ubc('cardLog.event', {\n            type: 'peopleClick',\n            value: 'people'\n        });\n    }\n}"]}]}