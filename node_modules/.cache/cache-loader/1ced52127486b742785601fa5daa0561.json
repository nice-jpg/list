{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/src/pages/kangyi/components/lineChart/index.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/src/pages/kangyi/components/lineChart/index.js","mtime":1695633995744},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/src/pages/kangyi/components/lineChart/index.js"],"names":["nightLineColor","color","color_night","LineChart","feedItems","data","get","set","length","drawEcharts","watch","newItems","setTimeout","theme","val","window","addEventListener","resizeChat","bind","index","monthItems","nextDrawOption","slice","newChartsWidth","document","documentElement","clientWidth","resizeTimer","clearTimeout","chartsArr","forEach","chart","resize","eachNewItems","showTip","myChart","echarts","getInstanceByDom","getElementById","init","push","clear","on","dispatchAction","type","dataIndex","xAxisData","seriesIndex","position","off","legendData","series","option","getBaseOptions","changeEchartsStyle","setOption","setTheme","xAxis","axisLabel","yAxis","splitLine","lineStyle","title","textStyle","tooltip","backgroundColor","emphasis","itemStyle","legendStr","legend","join","e","event","stopPropagation","page","value","ext","pos","interval","size","body","offsetWidth","labelNum","dataLength","multi","Math","ceil","baseOption","animationDuration","text","fontSize","fontWeight","textAlign","right","show","trigger","confine","axisPointer","borderWidth","padding","borderColor","lineHeight","formatter","params","html","lineNames","sortedParams","sort","prev","next","len","indexOf","seriesName","name","i","item","str","valueIsEmpty","undefined","isNaN","format","getTooltipMarker","icon","itemHeight","itemWidth","itemGap","borderRadius","orient","left","selectedMode","boundaryGap","axisTick","inside","axisLine","silent","nameTextStyle","align","nameGap","splitNumber","grid","top","bottom","width","containLabel","rotate","styles","feed","chartsHeight","tabChoosedIndex","myChartEle","groupOption","groupSelectIndex","Component","chartTitle","province","items","key","buttons","map","buttonName","notInForeign","chartsWidth","module","hot","__HOT_API__","require","__HOT_UTILS__","__SAN_COMPONENT__","getExports","template","prototype","accept","install","__HMR_ID__","createRecord","hotReload"],"mappings":"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","sourcesContent":["/**\n * @file 折线图组件\n * @author liuyuxin06@baidu.com\n */\n/* eslint-disable fecs-camelcase */\nimport {Component} from 'san';\nimport styles from './lineChart.module.less';\nimport * as echarts from 'echarts/lib/echarts';\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/grid';\n\nimport ubc from '@baidu/ubc-report-sdk';\nconst nightLineColor = {\n    '新增确诊': {\n        color: ['#FF6A57'],\n        color_night: ['#7F342B']\n    },\n    '确诊治愈死亡': {\n        color: ['#E83132', '#10AEB5', '#4D5054'],\n        color_night: ['#79251F', '#07565A', '#3C4045']\n    },\n    '死亡治愈': {\n        color: ['#10AEB5', '#4D5054'],\n        color_night: ['#07565A', '#3C4045']\n    },\n    '新增本土': {\n        color: ['#FF6A57'],\n        color_night: ['#7F342B']\n    },\n    '新增无症状': {\n        color: ['#E86D48'],\n        color_night: ['#E86D48']\n    }\n};\nexport default class LineChart extends Component {\n    /* eslint-disable max-len */\n    static template = `\n        <div class=\"{{styles['lineChart']}}\">\n            <div class=\"{{styles['lineChart-title']}}\">{{chartTitle}}</div>\n            <div class=\"{{styles['lineChart-title-extra']}}\">趋势图数据更新至前一日</div>\n            <div style=\"position: relative;height: {{chartsHeight}}px; margin-top: .625rem; overflow: hidden;\">\n                <div s-for=\"item, index in feed.items\"\n                    class=\"{{styles['lineChart-items']}}\"\n                    style=\"{{tabChoosedIndex === index ? '' : 'visibility: hidden;'}}\">\n                    <div style=\"width: {{chartsWidth}}px;height: {{chartsHeight}}px;\"\n                        id=\"{{'lineChart-container-' + index}}\"\n                        class=\"{{styles['lineChart-container']}}\"></div>\n                </div>\n            </div>\n            <div s-if=\"{{notInForeign && tabChoosedIndex === 0}}\"\n                class=\"{{styles['lineChart-group']}}\"\n            >\n                <div s-for=\"item,index in groupOption\"\n                    class=\"{{index === groupSelectIndex ?  styles['lineChart-group-active'] : styles['lineChart-group-unactive']}}\"\n                    on-click=\"groupClick(index)\"\n                >{{item}}</div>\n            </div>\n            <div s-if=\"{{buttons.length > 1}}\"\n                class=\"{{styles['lineChart-bottom']}}\">\n                <div s-for=\"button, index in buttons\"\n                    style=\"{{index < buttons.length - 1 ? 'margin-right: .25rem;' : ''}}\"\n                    class=\"{{tabChoosedIndex === index ?\n                        styles['lineChart-bottom-active'] : styles['lineChart-bottom-button']}}\"\n                    on-click=\"buttonClick($event,index)\">\n                    <span>{{button[0]}}</span>\n                    <span style=\"{{button[0] ? 'margin-top: .25rem;': ''}}\">{{button[1]}}</span>\n                </div>\n            </div>\n            <div s-else\n                class=\"{{styles['lineChart-bottom-remark']}}\">*趋势图每周更新一次</div>\n        </div>\n    `;\n    /* eslint-enable max-len */\n    static components = {\n    };\n\n    static computed = {\n        feedItems() {\n            return this.data.get('feed.items');\n        },\n        chartTitle() {\n            const feed = this.data.get('feed');\n            const province = this.data.get('province');\n            const tabChoosedIndex = this.data.get('tabChoosedIndex');\n            if (tabChoosedIndex > feed.items.length - 1 || feed.key === 'allForeignTrend') {\n                return feed.items[0].title || '';\n            }\n            return `${province ? province : '本地'}` + feed.items[tabChoosedIndex].title;\n        },\n        buttons() {\n            const feedItems = this.data.get('feedItems');\n            return feedItems.map((item, index) => {\n                return item.buttonName;\n            });\n        },\n        notInForeign() {\n            // 判断曲线图是否在国外疫情tab下，国外疫情tab的折线图不展示『按日、按月』\n            const feed = this.data.get('feed');\n            return feed.key && feed.key !== 'allForeignTrend';\n        },\n        chartsWidth() {\n            return this.data.get('underTalosTab')\n                ? document.documentElement.clientWidth - 26\n                : document.documentElement.clientWidth - 52;\n        }\n    };\n\n    attached() {\n        const feedItems = this.data.get('feedItems');\n        this.data.set('itemsLen', feedItems.length);\n        this.drawEcharts(feedItems);\n        this.watch('feed.items', newItems => {\n            setTimeout(() => {\n                const theme = this.data.get('theme');\n                this.drawEcharts(newItems, theme);\n                this.data.set('tabChoosedIndex', 0);\n                this.data.set('groupSelectIndex', 0);\n            }, 0);\n        });\n        this.watch('theme', val => {\n            const feedItems = this.data.get('feedItems');\n            this.drawEcharts(feedItems, val);\n        });\n        window.addEventListener('resize', this.resizeChat.bind(this));\n    }\n    groupClick(index) {\n        const feedItems = this.data.get('feedItems');\n        const theme = this.data.get('theme');\n        const monthItems = this.data.get('feed.monthItems');\n        this.data.set('groupSelectIndex', index);\n        const nextDrawOption = index === 0 ? feedItems.slice(0, 2) : monthItems;\n        this.drawEcharts(nextDrawOption, theme);\n    }\n    resizeChat() {\n        let newChartsWidth = this.data.get('underTalosTab')\n            ? document.documentElement.clientWidth - 26\n            : document.documentElement.clientWidth - 52;\n        if (this.data.get('chartsWidth') === newChartsWidth) {\n            return;\n        }\n        if (this.resizeTimer) {\n            clearTimeout(this.resizeTimer);\n        }\n        this.data.set('chartsWidth', newChartsWidth);\n        this.resizeTimer = setTimeout(() => {\n            this.resizeTimer = null;\n            const chartsArr = this.data.get('chartsArr');\n            chartsArr.forEach(chart => {\n                chart && chart.resize();\n            });\n        }, 300);\n\n    }\n    // 重绘echarts\n    drawEcharts(newItems, theme = '') {\n        let chartsArr = [];\n        for (let index = 0; index < newItems.length; index++) {\n            let eachNewItems = newItems[index];\n            let showTip = false;\n            let myChart = echarts.getInstanceByDom(document.getElementById(`lineChart-container-${index}`));\n            if (myChart == null) { // 如果不存在，就进行初始化。\n                myChart = echarts.init(document.getElementById(`lineChart-container-${index}`));\n            }\n            chartsArr.push(myChart);\n            myChart && myChart.clear();\n            // 监听finished事件，echarts渲染完成后展示最近一天的焦点和浮层\n            myChart && myChart.on('finished', () => {\n                if (!showTip) {\n                    this.data.get('chartsArr')[index].dispatchAction({\n                        type: 'showTip',\n                        dataIndex: eachNewItems.xAxisData.length - 1, // 显示哪个横坐标\n                        seriesIndex: 0,\n                        position: ['50%', '30%']\n                    });\n                    showTip = true;\n                    this.data.get('chartsArr')[index].off('finished');\n                }\n            });\n            if (eachNewItems) {\n                let {legendData, xAxisData, series} = eachNewItems;\n                let option = this.getBaseOptions(legendData, xAxisData, series);\n                option = this.changeEchartsStyle(option, theme);\n                myChart.setOption(option);\n            }\n        }\n        this.data.set('chartsArr', chartsArr);\n    }\n    // 改变曲线图样式\n    changeEchartsStyle(option, setTheme = '') {\n        let theme = setTheme ? setTheme : this.data.get('theme');\n        if (theme === 'kangyi-night') {\n            option.xAxis.axisLabel.color = '#444';\n            option.yAxis.axisLabel.color = '#444';\n            option.yAxis.splitLine.lineStyle.color = '#303030';\n            option.title.textStyle.color = '#444';\n            option.tooltip.backgroundColor = '#121212';\n            option.tooltip.textStyle.color = '#666';\n            option.emphasis.itemStyle.color = '#191919';\n            let legendStr = option.legend.data.join('');\n            option.color = nightLineColor[legendStr].color_night;\n        } else if (theme === 'kangyi-dark') {\n            option.xAxis.axisLabel.color = 'rgba(255,255,255,0.5)';\n            option.yAxis.axisLabel.color = 'rgba(255,255,255,0.5)';\n            option.yAxis.splitLine.lineStyle.color = '#222';\n            option.title.textStyle.color = 'rgba(255,255,255,0.5)';\n            option.tooltip.backgroundColor = '#1e1f24';\n            option.tooltip.textStyle.color = 'rgba(255,255,255,0.8)';\n            option.emphasis.itemStyle.color = '#080808';\n            let legendStr = option.legend.data.join('');\n            option.color = nightLineColor[legendStr].color;\n        } else {\n            option.xAxis.axisLabel.color = '#848691';\n            option.yAxis.axisLabel.color = '#848691';\n            option.yAxis.splitLine.lineStyle.color = '#F8F8F8';\n            option.title.textStyle.color = '#848691';\n            option.tooltip.backgroundColor = '#fff';\n            option.tooltip.textStyle.color = '#333';\n            option.emphasis.itemStyle.color = '#fff';\n            let legendStr = option.legend.data.join('');\n            option.color = nightLineColor[legendStr].color;\n        }\n        return option;\n    }\n    buttonClick(e, index) {\n        e.event && e.event.stopPropagation();\n        this.data.set('tabChoosedIndex', index);\n        ubc('event', {\n            page: 'local',\n            type: 'clk',\n            value: 'trend',\n            ext: {\n                pos: index\n            }\n        });\n    }\n    getBaseOptions(legend, xAxis, series) {\n        // 设置x轴展示内容\n        let interval = 0;\n        // 小屏最多展示 14 天，大屏最多展示 20 天\n        const size = document.body.offsetWidth >= 375 ? 20 : 14;\n        let labelNum = series[0].data.length;\n        let dataLength = xAxis.length;\n        if (dataLength > size) {\n            const multi = Math.ceil(dataLength / size);\n            labelNum = Math.ceil(dataLength / multi);\n            interval = multi - 1;\n        }\n        const baseOption = {\n            animationDuration: 0,\n            title: {\n                text: '单位: 例',\n                textStyle: {\n                    color: '#848691',\n                    fontSize: 12,\n                    fontWeight: 'normal'\n                },\n                textAlign: 'left',\n                right: '2'\n            },\n            tooltip: {\n                show: true,\n                trigger: 'axis',\n                confine: true,\n                backgroundColor: '#fff',\n                axisPointer: {\n                    lineStyle: {\n                        type: 'dotted',\n                        color: 'rgba(77, 80, 84, .4)'\n                    }\n                },\n                // axisPointer: {\n                //     type: 'none'\n                // },\n                borderWidth: 0,\n                padding: [5, 8, 5, 8],\n                borderColor: '#E83132',\n                // extraCssText: 'text-align: left;box-shadow: 0 5px 15px 0 rgba(0, 0, 0, 0.1);border-radius: 5px;',\n                textStyle: {\n                    color: '#333333',\n                    fontSize: 12,\n                    lineHeight: 18\n                },\n                formatter(params) {\n                    let html = [];\n                    let lineNames = [''];\n                    // 按seriesName的字数多少进行排序,从多到少\n                    const sortedParams = params.sort((prev, next) => {\n                        const len = lineNames.length;\n                        return (len - lineNames.indexOf(next.seriesName)) - (len - lineNames.indexOf(prev.seriesName));\n                    });\n\n                    // 提示框中加入日期\n                    html.push(\n                        `<span style=\"margin-left: 5px;\">${sortedParams[0].name}</span>`\n                    );\n\n                    for (let i = 0; i < sortedParams.length; i++) {\n                        let item = sortedParams[i];\n                        let value = item.value;\n                        let str = '';\n                        let valueIsEmpty = item.value === undefined || item.value === null || item.value === '';\n                        if (!valueIsEmpty && !isNaN(item.value)) {\n                            str = `<span style=\"display: inline-block;transform: scale(0.7);margin-left: -3px;\">\n                                    ${echarts.format.getTooltipMarker({color: item.color})}\n                                </span>`\n                                + `<span>${item.seriesName}: ${value}</span>`;\n                        }\n                        if (str !== '') {\n                            html.push(str);\n                        }\n                    }\n                    if (html.join('') === '') {\n                        return;\n                    } else {\n                        return html.join('<br>');\n                    }\n                }\n            },\n            legend: {\n                icon: 'circle',\n                color: ['#10AEB5'],\n                itemHeight: 6,\n                itemWidth: 6,\n                itemGap: 15,\n                padding: [5, 9, 5, 9],\n                borderRadius: 5,\n                orient: 'horizontal',\n                left: -7,\n                textStyle: {\n                    color: '#848691',\n                    padding: [2, 0, 0, 0]\n                },\n                selectedMode: false, // 设置图例不可点击\n                data: legend\n            },\n            xAxis: {\n                type: 'category',\n                boundaryGap: [0, 1],\n                axisLabel: {\n                    fontSize: 10,\n                    color: '#848691',\n                    interval(index, value) {\n                        if (interval === 0) {\n                            return true;\n                        }\n                        else {\n                            return (dataLength - index) % (interval + 1) === 1;\n                        }\n                    }\n                },\n                axisTick: {\n                    show: false,\n                    inside: true\n                },\n                axisLine: {\n                    show: false\n                },\n                silent: true,\n                data: xAxis\n            },\n            yAxis: {\n                type: 'value',\n                nameTextStyle: {\n                    align: 'left'\n                },\n                nameGap: 20,\n                splitNumber: 5, // 坐标轴的分割段数，只是个预估值，会根据实际情况自动调整\n                silent: true, // 坐标轴是否是静态无法交互\n                axisTick: {\n                    show: false,\n                    inside: true\n                },\n                axisLine: {\n                    show: false\n                },\n                axisLabel: {\n                    fontSize: 10,\n                    color: '#848691'\n                },\n                splitLine: {\n                    lineStyle: {\n                        color: '#F8F8F8'\n                    }\n                }\n            },\n            emphasis: {\n                itemStyle: {\n                    // 高亮时点的颜色。\n                    borderWidth: 1,\n                    color: '#fff'\n                }\n            },\n            series,\n            grid: {\n                top: 31,\n                left: 2,\n                right: '1%',\n                bottom: '3%',\n                width: '98%',\n                containLabel: true\n            }\n        };\n        if (labelNum > 10) {\n            baseOption.xAxis.axisLabel.rotate = 45;\n        }\n        return baseOption;\n    }\n\n    initData() {\n        return {\n            styles,\n            feed: {},\n            chartsHeight: 244,\n            tabChoosedIndex: 0,\n            myChartEle: [],\n            groupOption: ['按日', '按月'],\n            groupSelectIndex: 0\n        };\n    }\n}\n\n"]}]}