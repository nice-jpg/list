{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/decode-uri-component.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/decode-uri-component.js","mtime":1696919504571},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvVXNlcnMvbGlhb2h1YW55dS9wcm9qZWN0cy9iYWlkdS13b3JrL2JhaWR1L2ZlZWQzL211bHRpLXBhZ2VzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuY29uc3RydWN0b3IiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmciKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2giKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSIpOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7Cgp2YXIgX3R5cGVFcnJvciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi90eXBlLWVycm9yIikpOwoKLyoqCiAqIEBmaWxlIGRlY29kZSB1cmkg5aSE55CG54m55q6K5a2X56ymCiAqIEBhdXRob3Igd2FuZ3lvbmdxaW5nIDx3YW5neW9uZ3FpbmcwMUBiYWlkdS5jb20+CiAqIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL1NhbVZlcnNjaHVlcmVuL2RlY29kZS11cmktY29tcG9uZW50L2Jsb2IvbWFzdGVyL2luZGV4LmpzCiAqLwp2YXIgb0RlY29kZVVSSUNvbXBvbmVudCA9IGRlY29kZVVSSUNvbXBvbmVudDsKdmFyIHRva2VuID0gJyVbYS1mMC05XXsyfSc7CnZhciBzaW5nbGVNYXRjaGVyID0gbmV3IFJlZ0V4cCh0b2tlbiwgJ2dpJyk7CnZhciBtdWx0aU1hdGNoZXIgPSBuZXcgUmVnRXhwKCcoJyArIHRva2VuICsgJykrJywgJ2dpJyk7CgpmdW5jdGlvbiBkZWNvZGVDb21wb25lbnRzKGNvbXBvbmVudHMsIHNwbGl0KSB7CiAgdHJ5IHsKICAgIC8vIFRyeSB0byBkZWNvZGUgdGhlIGVudGlyZSBzdHJpbmcgZmlyc3QKICAgIHJldHVybiBvRGVjb2RlVVJJQ29tcG9uZW50KGNvbXBvbmVudHMuam9pbignJykpOwogIH0gY2F0Y2ggKGVycikgey8vIERvIG5vdGhpbmcKICB9CgogIGlmIChjb21wb25lbnRzLmxlbmd0aCA9PT0gMSkgewogICAgcmV0dXJuIGNvbXBvbmVudHM7CiAgfQoKICBzcGxpdCA9IHNwbGl0IHx8IDE7IC8vIFNwbGl0IHRoZSBhcnJheSBpbiAyIHBhcnRzCgogIHZhciBsZWZ0ID0gY29tcG9uZW50cy5zbGljZSgwLCBzcGxpdCk7CiAgdmFyIHJpZ2h0ID0gY29tcG9uZW50cy5zbGljZShzcGxpdCk7CiAgcmV0dXJuIEFycmF5LnByb3RvdHlwZS5jb25jYXQuY2FsbChbXSwgZGVjb2RlQ29tcG9uZW50cyhsZWZ0KSwgZGVjb2RlQ29tcG9uZW50cyhyaWdodCkpOwp9CgpmdW5jdGlvbiBkZWNvZGUoaW5wdXQpIHsKICB0cnkgewogICAgcmV0dXJuIG9EZWNvZGVVUklDb21wb25lbnQoaW5wdXQpOwogIH0gY2F0Y2ggKGVycikgewogICAgdmFyIHRva2VucyA9IGlucHV0Lm1hdGNoKHNpbmdsZU1hdGNoZXIpOwoKICAgIGZvciAodmFyIGkgPSAxOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7CiAgICAgIGlucHV0ID0gZGVjb2RlQ29tcG9uZW50cyh0b2tlbnMsIGkpLmpvaW4oJycpOwogICAgICB0b2tlbnMgPSBpbnB1dC5tYXRjaChzaW5nbGVNYXRjaGVyKTsKICAgIH0KCiAgICByZXR1cm4gaW5wdXQ7CiAgfQp9CgpmdW5jdGlvbiBjdXN0b21EZWNvZGVVUklDb21wb25lbnQoaW5wdXQpIHsKICAvLyBLZWVwIHRyYWNrIG9mIGFsbCB0aGUgcmVwbGFjZW1lbnRzIGFuZCBwcmVmaWxsIHRoZSBtYXAgd2l0aCB0aGUgYEJPTWAKICB2YXIgcmVwbGFjZU1hcCA9IHsKICAgICclRkUlRkYnOiAiXHVGRkZEXHVGRkZEIiwKICAgICclRkYlRkUnOiAiXHVGRkZEXHVGRkZEIgogIH07CiAgdmFyIG1hdGNoID0gbXVsdGlNYXRjaGVyLmV4ZWMoaW5wdXQpOwoKICB3aGlsZSAobWF0Y2gpIHsKICAgIHRyeSB7CiAgICAgIC8vIERlY29kZSBhcyBiaWcgY2h1bmtzIGFzIHBvc3NpYmxlCiAgICAgIHJlcGxhY2VNYXBbbWF0Y2hbMF1dID0gb0RlY29kZVVSSUNvbXBvbmVudChtYXRjaFswXSk7CiAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgdmFyIHJlc3VsdCA9IGRlY29kZShtYXRjaFswXSk7CgogICAgICBpZiAocmVzdWx0ICE9PSBtYXRjaFswXSkgewogICAgICAgIHJlcGxhY2VNYXBbbWF0Y2hbMF1dID0gcmVzdWx0OwogICAgICB9CiAgICB9CgogICAgbWF0Y2ggPSBtdWx0aU1hdGNoZXIuZXhlYyhpbnB1dCk7CiAgfSAvLyBBZGQgYCVDMmAgYXQgdGhlIGVuZCBvZiB0aGUgbWFwIHRvIG1ha2Ugc3VyZSBpdCBkb2VzIG5vdCByZXBsYWNlIHRoZSBjb21iaW5hdG9yIGJlZm9yZSBldmVyeXRoaW5nIGVsc2UKCgogIHJlcGxhY2VNYXBbJyVDMiddID0gIlx1RkZGRCI7CiAgdmFyIGVudHJpZXMgPSBPYmplY3Qua2V5cyhyZXBsYWNlTWFwKTsKCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbnRyaWVzLmxlbmd0aDsgaSsrKSB7CiAgICAvLyBSZXBsYWNlIGFsbCBkZWNvZGVkIGNvbXBvbmVudHMKICAgIHZhciBrZXkgPSBlbnRyaWVzW2ldOwogICAgaW5wdXQgPSBpbnB1dC5yZXBsYWNlKG5ldyBSZWdFeHAoa2V5LCAnZycpLCByZXBsYWNlTWFwW2tleV0pOwogIH0KCiAgcmV0dXJuIGlucHV0Owp9Cgp2YXIgX2RlZmF1bHQgPSBmdW5jdGlvbiBfZGVmYXVsdChlbmNvZGVkVVJJKSB7CiAgaWYgKHR5cGVvZiBlbmNvZGVkVVJJICE9PSAnc3RyaW5nJykgewogICAgdGhyb3cgKDAsIF90eXBlRXJyb3IuZGVmYXVsdCkoJ2VuY29kZWRVUkknLCAnc3RyaW5nJywgZW5jb2RlZFVSSSk7CiAgfQoKICB0cnkgewogICAgZW5jb2RlZFVSSSA9IGVuY29kZWRVUkkucmVwbGFjZSgvXCsvZywgJyAnKTsgLy8gVHJ5IHRoZSBidWlsdCBpbiBkZWNvZGVyIGZpcnN0CgogICAgcmV0dXJuIG9EZWNvZGVVUklDb21wb25lbnQoZW5jb2RlZFVSSSk7CiAgfSBjYXRjaCAoZXJyKSB7CiAgICAvLyBGYWxsYmFjayB0byBhIG1vcmUgYWR2YW5jZWQgZGVjb2RlcgogICAgcmV0dXJuIGN1c3RvbURlY29kZVVSSUNvbXBvbmVudChlbmNvZGVkVVJJKTsKICB9Cn07CgpleHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDs="},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/decode-uri-component.js"],"names":["oDecodeURIComponent","decodeURIComponent","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","join","err","length","left","slice","right","Array","prototype","concat","call","decode","input","tokens","match","i","customDecodeURIComponent","replaceMap","exec","result","entries","Object","keys","key","replace","encodedURI"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;AALA;AACA;AACA;AACA;AACA;AAEA,IAAMA,mBAAmB,GAAGC,kBAA5B;AAEA,IAAMC,KAAK,GAAG,cAAd;AACA,IAAMC,aAAa,GAAG,IAAIC,MAAJ,CAAWF,KAAX,EAAkB,IAAlB,CAAtB;AACA,IAAMG,YAAY,GAAG,IAAID,MAAJ,CAAW,MAAMF,KAAN,GAAc,IAAzB,EAA+B,IAA/B,CAArB;;AACA,SAASI,gBAAT,CAA0BC,UAA1B,EAAsCC,KAAtC,EAA6C;AACzC,MAAI;AACA;AACA,WAAOR,mBAAmB,CAACO,UAAU,CAACE,IAAX,CAAgB,EAAhB,CAAD,CAA1B;AACH,GAHD,CAIA,OAAOC,GAAP,EAAY,CACR;AACH;;AAED,MAAIH,UAAU,CAACI,MAAX,KAAsB,CAA1B,EAA6B;AACzB,WAAOJ,UAAP;AACH;;AAEDC,EAAAA,KAAK,GAAGA,KAAK,IAAI,CAAjB,CAbyC,CAezC;;AACA,MAAMI,IAAI,GAAGL,UAAU,CAACM,KAAX,CAAiB,CAAjB,EAAoBL,KAApB,CAAb;AACA,MAAMM,KAAK,GAAGP,UAAU,CAACM,KAAX,CAAiBL,KAAjB,CAAd;AAEA,SAAOO,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuBC,IAAvB,CAA4B,EAA5B,EAAgCZ,gBAAgB,CAACM,IAAD,CAAhD,EAAwDN,gBAAgB,CAACQ,KAAD,CAAxE,CAAP;AACH;;AAED,SAASK,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,MAAI;AACA,WAAOpB,mBAAmB,CAACoB,KAAD,CAA1B;AACH,GAFD,CAGA,OAAOV,GAAP,EAAY;AACR,QAAIW,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAYnB,aAAZ,CAAb;;AAEA,SAAK,IAAIoB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACV,MAA3B,EAAmCY,CAAC,EAApC,EAAwC;AACpCH,MAAAA,KAAK,GAAGd,gBAAgB,CAACe,MAAD,EAASE,CAAT,CAAhB,CAA4Bd,IAA5B,CAAiC,EAAjC,CAAR;AAEAY,MAAAA,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAYnB,aAAZ,CAAT;AACH;;AAED,WAAOiB,KAAP;AACH;AACJ;;AAED,SAASI,wBAAT,CAAkCJ,KAAlC,EAAyC;AACrC;AACA,MAAMK,UAAU,GAAG;AACf,cAAU,cADK;AAEf,cAAU;AAFK,GAAnB;AAKA,MAAIH,KAAK,GAAGjB,YAAY,CAACqB,IAAb,CAAkBN,KAAlB,CAAZ;;AACA,SAAOE,KAAP,EAAc;AACV,QAAI;AACA;AACAG,MAAAA,UAAU,CAACH,KAAK,CAAC,CAAD,CAAN,CAAV,GAAuBtB,mBAAmB,CAACsB,KAAK,CAAC,CAAD,CAAN,CAA1C;AACH,KAHD,CAIA,OAAOZ,GAAP,EAAY;AACR,UAAMiB,MAAM,GAAGR,MAAM,CAACG,KAAK,CAAC,CAAD,CAAN,CAArB;;AAEA,UAAIK,MAAM,KAAKL,KAAK,CAAC,CAAD,CAApB,EAAyB;AACrBG,QAAAA,UAAU,CAACH,KAAK,CAAC,CAAD,CAAN,CAAV,GAAuBK,MAAvB;AACH;AAEJ;;AAEDL,IAAAA,KAAK,GAAGjB,YAAY,CAACqB,IAAb,CAAkBN,KAAlB,CAAR;AACH,GAvBoC,CAyBrC;;;AACAK,EAAAA,UAAU,CAAC,KAAD,CAAV,GAAoB,QAApB;AAEA,MAAMG,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYL,UAAZ,CAAhB;;AAEA,OAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,OAAO,CAACjB,MAA5B,EAAoCY,CAAC,EAArC,EAAyC;AACrC;AACA,QAAIQ,GAAG,GAAGH,OAAO,CAACL,CAAD,CAAjB;AACAH,IAAAA,KAAK,GAAGA,KAAK,CAACY,OAAN,CAAc,IAAI5B,MAAJ,CAAW2B,GAAX,EAAgB,GAAhB,CAAd,EAAoCN,UAAU,CAACM,GAAD,CAA9C,CAAR;AACH;;AAED,SAAOX,KAAP;AACH;;eAEc,kBAAAa,UAAU,EAAI;AACzB,MAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;AAChC,UAAM,wBAAU,YAAV,EAAwB,QAAxB,EAAkCA,UAAlC,CAAN;AACH;;AAED,MAAI;AACAA,IAAAA,UAAU,GAAGA,UAAU,CAACD,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,CAAb,CADA,CAGA;;AACA,WAAOhC,mBAAmB,CAACiC,UAAD,CAA1B;AACH,GALD,CAMA,OAAOvB,GAAP,EAAY;AACR;AACA,WAAOc,wBAAwB,CAACS,UAAD,CAA/B;AACH;AACJ,C","sourcesContent":["/**\n * @file decode uri 处理特殊字符\n * @author wangyongqing <wangyongqing01@baidu.com>\n * from https://github.com/SamVerschueren/decode-uri-component/blob/master/index.js\n */\nimport typeError from './type-error';\nconst oDecodeURIComponent = decodeURIComponent;\n\nconst token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp(token, 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\nfunction decodeComponents(components, split) {\n    try {\n        // Try to decode the entire string first\n        return oDecodeURIComponent(components.join(''));\n    }\n    catch (err) {\n        // Do nothing\n    }\n\n    if (components.length === 1) {\n        return components;\n    }\n\n    split = split || 1;\n\n    // Split the array in 2 parts\n    const left = components.slice(0, split);\n    const right = components.slice(split);\n\n    return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n    try {\n        return oDecodeURIComponent(input);\n    }\n    catch (err) {\n        let tokens = input.match(singleMatcher);\n\n        for (let i = 1; i < tokens.length; i++) {\n            input = decodeComponents(tokens, i).join('');\n\n            tokens = input.match(singleMatcher);\n        }\n\n        return input;\n    }\n}\n\nfunction customDecodeURIComponent(input) {\n    // Keep track of all the replacements and prefill the map with the `BOM`\n    const replaceMap = {\n        '%FE%FF': '\\uFFFD\\uFFFD',\n        '%FF%FE': '\\uFFFD\\uFFFD'\n    };\n\n    let match = multiMatcher.exec(input);\n    while (match) {\n        try {\n            // Decode as big chunks as possible\n            replaceMap[match[0]] = oDecodeURIComponent(match[0]);\n        }\n        catch (err) {\n            const result = decode(match[0]);\n\n            if (result !== match[0]) {\n                replaceMap[match[0]] = result;\n            }\n\n        }\n\n        match = multiMatcher.exec(input);\n    }\n\n    // Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n    replaceMap['%C2'] = '\\uFFFD';\n\n    const entries = Object.keys(replaceMap);\n\n    for (let i = 0; i < entries.length; i++) {\n        // Replace all decoded components\n        let key = entries[i];\n        input = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n    }\n\n    return input;\n}\n\nexport default encodedURI => {\n    if (typeof encodedURI !== 'string') {\n        throw typeError('encodedURI', 'string', encodedURI);\n    }\n\n    try {\n        encodedURI = encodedURI.replace(/\\+/g, ' ');\n\n        // Try the built in decoder first\n        return oDecodeURIComponent(encodedURI);\n    }\n    catch (err) {\n        // Fallback to a more advanced decoder\n        return customDecodeURIComponent(encodedURI);\n    }\n};\n"]}]}