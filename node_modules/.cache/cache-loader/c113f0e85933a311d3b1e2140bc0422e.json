{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/monitor/monitor.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/monitor/monitor.js","mtime":1696919504571},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvVXNlcnMvbGlhb2h1YW55dS9wcm9qZWN0cy9iYWlkdS13b3JrL2JhaWR1L2ZlZWQzL211bHRpLXBhZ2VzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmFzc2lnbiIpOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7Cgp2YXIgX2NsYXNzQ2FsbENoZWNrMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiL1VzZXJzL2xpYW9odWFueXUvcHJvamVjdHMvYmFpZHUtd29yay9iYWlkdS9mZWVkMy9tdWx0aS1wYWdlcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpKTsKCnZhciBfY3JlYXRlQ2xhc3MyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIvVXNlcnMvbGlhb2h1YW55dS9wcm9qZWN0cy9iYWlkdS13b3JrL2JhaWR1L2ZlZWQzL211bHRpLXBhZ2VzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIikpOwoKdmFyIF9pcyA9IHJlcXVpcmUoIi4uL2lzIik7Cgp2YXIgX2d1aWQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4uL2d1aWQiKSk7Cgp2YXIgX2pzb24ycXVlcnkgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4uL2pzb24ycXVlcnkiKSk7Cgp2YXIgX3BhcnNlVXJsID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuLi9wYXJzZS11cmwiKSk7Cgp2YXIgX3R5cGVFcnJvciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi4vdHlwZS1lcnJvciIpKTsKCnZhciBfZXh0ZW5kID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuLi9leHRlbmQiKSk7CgovKioKICogQGZpbGUg57uf6K6h44CB55uR5o6n57G755So5Yiw55qE5Z+657G7CiAqIEBhdXRob3Igd2FuZ3lvbmdxaW5nIDx3YW5neW9uZ3FpbmcwMUBiYWlkdS5jb20+CiAqLwoKLyoqCiAqIE1vbml0b3Ig5pel5b+X55uR5o6n57G777yM5Y+v5Lul55u05o6l55So77yM5oiW6ICF57un5om/5LuW5omp5bGV5LuW77yBCiAqIEBjbGFzcyBNb25pdG9yCiAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgLSDmjqXlj5fmiZPngrnnmoQgdXJsIOWcsOWdgAogKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyAtIOmFjee9ru+8jOWMheaLrCBiZWZvcmXlpITnkIblh73mlbAg5ZKMIOWFqOWxgOmAmueUqOaVsOaNru+8mmdsb2JhbERhdGEKICogQGV4YW1wbGUKICogY29uc3QgbW9uaXRvciA9IG5ldyBNb25pdG9yKCdodHRwOi8vYmFpZHUuY29tL2d0LmdpZicsIHsKICogICAgICBiZWZvcmU6KGRhdGEpPT57CiAqICAgICAgcmV0dXJuIGRhdGE7CiAqIH0sCiAqIGdsb2JhbERhdGE6ewogKiAgICAgICAgICBhOjEKICogICAgICB9CiAqIH0pOwogKiBtb25pdG9yLm1hcmsoe2I6MX0pLm1hcmsoe2NkOjF9KS5zZW5kKCk7CiAqIG1vbml0b3IucmVwb3J0KHtjOjF9KTsKICovCnZhciBNb25pdG9yID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBNb25pdG9yKHVybCkgewogICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9OwogICAgKDAsIF9jbGFzc0NhbGxDaGVjazIuZGVmYXVsdCkodGhpcywgTW9uaXRvcik7CiAgICB2YXIgdXJsT2JqID0gKDAsIF9wYXJzZVVybC5kZWZhdWx0KSh1cmwpOwogICAgdXJsID0gdXJsT2JqLnVybDsKCiAgICBpZiAodXJsLmluZGV4T2YoJy8vJykgPT09IDApIHsKICAgICAgLy8g6YCa55So5Y2P6K6u77yM6L+Z6YeM6ZyA6KaB5aSE55CG77yM6Kej5YazIGh5YnJpZCDkvb/nlKggZmlsZSDljY/orq7nmoTmg4XlhrUKICAgICAgdmFyIHByb3RvY29sID0gbG9jYXRpb24ucHJvdG9jb2w7CgogICAgICBpZiAocHJvdG9jb2wgIT09ICdodHRwOicpIHsKICAgICAgICBwcm90b2NvbCA9ICdodHRwczonOwogICAgICB9CgogICAgICB1cmwgPSBwcm90b2NvbCArIHVybDsKICAgIH0KCiAgICB0aGlzLnVybCA9IHVybDsKICAgIHZhciBnbG9iYWxEYXRhID0gb3B0aW9ucy5nbG9iYWxEYXRhIHx8IHt9OwogICAgdGhpcy5fZGVmYXVsdCA9IE9iamVjdC5hc3NpZ24odXJsT2JqLnF1ZXJ5IHx8IHt9LCBnbG9iYWxEYXRhKTsKICAgIHRoaXMuX2RhdGEgPSB7fTsKICAgIHRoaXMuX2JlZm9yZSA9IG9wdGlvbnMuYmVmb3JlOwogIH0KICAvKioKICAgKiDorr7nva7lhajlsYDmlbDmja4KICAgKiBAcGFyYW0ge09iamVjdH0gZGF0YSAtIOmcgOimgSBzZXQg55qE5pWw5o2u5a+56LGhCiAgICovCgoKICAoMCwgX2NyZWF0ZUNsYXNzMi5kZWZhdWx0KShNb25pdG9yLCBbewogICAga2V5OiAic2V0R2xvYmFsRGF0YSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0R2xvYmFsRGF0YShkYXRhKSB7CiAgICAgIGlmICgoMCwgX2lzLmlzUGxhaW5PYmplY3QpKGRhdGEpKSB7CiAgICAgICAgKDAsIF9leHRlbmQuZGVmYXVsdCkodGhpcy5fZGVmYXVsdCwgZGF0YSk7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzOwogICAgfQogICAgLyoqCiAgICAgKiDnlKjkuo7lpJrmrKHorrDlvZXmlbDmja7vvIzmlbDmja7kvJrntK/orqHvvIzlj6rmnInosIPnlKjov4fkuIDmrKEgc2VuZCDmlrnms5XmiY3kvJrmuIXnqboKICAgICAqICoq5rOo5oSPKirvvJrlkI7pnaLkvKDlhaXlkIzlkI3nmoTlrZfmrrXkvJropobnm5bmjonkuYvliY3kvKDlhaXnmoQKICAgICAqICoq5rOo5oSPKirvvJptYXJrIOeahOaVsOaNruWPquiDvemAmui/h+aJi+WKqOiwg+eUqCBzZW5kIOaJjeWPkemAgQogICAgICog5pyf6Ze0IHJlcG9ydCDmlrnms5XnmoTmlbDmja7mmK/ljZXni6zlj5HpgIHnmoQKICAgICAqIOeUqOS6juaVsOaNrumHh+mbhuaJk+eCue+8jOavlOWmgumAn+W6pue7n+iuoe+8jOS4gOS4quaXtumXtOeCueS4gOS4quaJk+eCue+8jOacgOWQjuaxh+aAu+WPkemAgQogICAgICogQHBhcmFtIHtPYmplY3R9IGRhdGEgLSDnlKjkuo7mt7vliqDnmoTmlbDmja4KICAgICAqIEByZXR1cm4ge01vbml0b3J9CiAgICAgKi8KCiAgfSwgewogICAga2V5OiAibWFyayIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbWFyaygpIHsKICAgICAgdmFyIGRhdGEgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9OwoKICAgICAgaWYgKCEoMCwgX2lzLmlzUGxhaW5PYmplY3QpKGRhdGEpKSB7CiAgICAgICAgdGhyb3cgKDAsIF90eXBlRXJyb3IuZGVmYXVsdCkoJ2RhdGEnLCAnb2JqZWN0JywgZGF0YSk7CiAgICAgIH0gLy8g5aKe5YqgCgoKICAgICAgaWYgKCgwLCBfaXMuaXNQbGFpbk9iamVjdCkoZGF0YSkpIHsKICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMuX21kYXRhLCBkYXRhKTsKICAgICAgfSAvLyDlhbbku5bnsbvlnovmlbDmja7miZTmjonvvIzlj6rmlLYgb2JqZWN0fHN0cmluZwoKCiAgICAgIHJldHVybiB0aGlzOwogICAgfQogIH0sIHsKICAgIGtleTogIl9zZW5kIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfc2VuZChkYXRhKSB7CiAgICAgIHZhciBmb3JjZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZmFsc2U7CgogICAgICBpZiAoISgwLCBfaXMuaXNQbGFpbk9iamVjdCkoZGF0YSkpIHsKICAgICAgICB0aHJvdyAoMCwgX3R5cGVFcnJvci5kZWZhdWx0KSgnZGF0YScsICdvYmplY3QnLCBkYXRhKTsKICAgICAgfQoKICAgICAgdmFyIGltZyA9IG5ldyBJbWFnZSgxLCAxKTsKICAgICAgdmFyIGltZ05hbWUgPSAiX3hib3hfbXRfIi5jb25jYXQoKDAsIF9ndWlkLmRlZmF1bHQpKCkpOwogICAgICB3aW5kb3dbaW1nTmFtZV0gPSBpbWc7CgogICAgICBpbWcub25sb2FkID0gaW1nLm9uZXJyb3IgPSBpbWcub25hYm9ydCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICBpbWcub25sb2FkID0gaW1nLm9uZXJyb3IgPSBpbWcub25hYm9ydCA9IG51bGw7CiAgICAgICAgd2luZG93W2ltZ05hbWVdID0gaW1nID0gbnVsbDsKICAgICAgfTsgLy8g5aKe5YqgIOm7mOiupOaVsOaNrgoKCiAgICAgIGRhdGEgPSAoMCwgX2V4dGVuZC5kZWZhdWx0KSh7fSwgdGhpcy5fZGVmYXVsdCwgZGF0YSk7CiAgICAgIHZhciBiZWZvcmUgPSB0aGlzLl9iZWZvcmU7CgogICAgICBpZiAoIWZvcmNlICYmICgwLCBfaXMuaXNGdW5jdGlvbikoYmVmb3JlKSkgewogICAgICAgIHZhciByZXN1bHQgPSBiZWZvcmUoZGF0YSk7IC8vIOWmguaenOi/lOWbnuaYryBmYWxzZSDliJnkuI3lj5HpgIEKCiAgICAgICAgaWYgKHJlc3VsdCA9PT0gZmFsc2UpIHsKICAgICAgICAgIHJldHVybiB0aGlzOwogICAgICAgIH0gZWxzZSBpZiAoKDAsIF9pcy5pc1VuZGVmaW5lZCkocmVzdWx0KSkgey8vIOWmguaenOaYryB1bmRlZmluZWTvvIwg5YiZ57un57ut5L2/55SoIGRhdGEKICAgICAgICB9IGVsc2UgaWYgKCgwLCBfaXMuaXNQbGFpbk9iamVjdCkocmVzdWx0KSB8fCAoMCwgX2lzLmlzU3RyaW5nKShyZXN1bHQpKSB7CiAgICAgICAgICAvLyDlpoLmnpzmmK/lr7nosaHmiJbogIXlrZfnrKbkuLLvvIzliJnmm7/mjaIgZGF0Ye+8mwogICAgICAgICAgZGF0YSA9IHJlc3VsdDsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHZhciB1cmwgPSAiIi5jb25jYXQodGhpcy51cmwsICI/IikuY29uY2F0KCgwLCBfaXMuaXNTdHJpbmcpKGRhdGEpID8gZGF0YSA6ICgwLCBfanNvbjJxdWVyeS5kZWZhdWx0KShkYXRhLCB0cnVlKSk7CiAgICAgIGltZy5zcmMgPSB1cmwgKyAnJl9ybmQ9JyArICgwLCBfZ3VpZC5kZWZhdWx0KSgpOwogICAgICByZXR1cm4gdGhpczsKICAgIH0KICAgIC8qKgogICAgICog6LefIG1hcmsg6YWN5ZCI5L2/55So77yM5Y+R6YCBIG1hcmsg6K6w5b2V55qE5pWw5o2uCiAgICAgKiBAcGFyYW0ge0Jvb2xlYW59IGZvcmNlIC0g5piv5ZCm6Lez6L+HIGJlZm9yZSDlh73mlbDlpITnkIbnm7TmjqXlj5Hor7fmsYIKICAgICAqIEByZXR1cm4ge01vbml0b3J9CiAgICAgKi8KCiAgfSwgewogICAga2V5OiAic2VuZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2VuZChmb3JjZSkgewogICAgICB0aGlzLl9zZW5kKHRoaXMuX2RhdGEsIGZvcmNlKTsgLy8g5Y+R6YCB6L+H5LiA5qyh5LmL5ZCO5bCx5riF56m6CgoKICAgICAgZGVsZXRlIHRoaXMuX21kYXRhOwogICAgICB0aGlzLl9tZGF0YSA9IHt9OwogICAgICByZXR1cm4gdGhpczsKICAgIH0KICAgIC8qKgogICAgICogQHBhcmFtIHtPYmplY3R9IGRhdGEgLSDlj5HpgIHnmoTmlbDmja4KICAgICAqIEBwYXJhbSB7Qm9vbGVhbn0gZm9yY2UgLSDmmK/lkKbot7Pov4cgYmVmb3JlIOWHveaVsOWkhOeQhuebtOaOpeWPkeivt+axggogICAgICogQHJldHVybiB7TW9uaXRvcn0KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJyZXBvcnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlcG9ydCgpIHsKICAgICAgdmFyIGRhdGEgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9OwogICAgICB2YXIgZm9yY2UgPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZDsKCiAgICAgIGlmICghKDAsIF9pcy5pc1BsYWluT2JqZWN0KShkYXRhKSkgewogICAgICAgIHRocm93ICgwLCBfdHlwZUVycm9yLmRlZmF1bHQpKCdkYXRhJywgJ29iamVjdCcsIGRhdGEpOwogICAgICB9CgogICAgICByZXR1cm4gdGhpcy5fc2VuZChkYXRhLCBmb3JjZSk7CiAgICB9CiAgfV0pOwogIHJldHVybiBNb25pdG9yOwp9KCk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBKUzYzMAoKCnZhciBfZGVmYXVsdCA9IE1vbml0b3I7CmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0Ow=="},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/monitor/monitor.js"],"names":["Monitor","url","options","urlObj","indexOf","protocol","location","globalData","_default","Object","assign","query","_data","_before","before","data","_mdata","force","img","Image","imgName","window","onload","onerror","onabort","result","src","_send"],"mappings":"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","sourcesContent":["/**\n * @file 统计、监控类用到的基类\n * @author wangyongqing <wangyongqing01@baidu.com>\n */\nimport {isPlainObject, isFunction, isString, isUndefined} from '../is';\nimport guid from '../guid';\nimport json2query from '../json2query';\nimport parseUrl from '../parse-url';\nimport typeError from '../type-error';\nimport extend from '../extend';\n\n/**\n * Monitor 日志监控类，可以直接用，或者继承他扩展他！\n * @class Monitor\n * @param {String} url - 接受打点的 url 地址\n * @param {Object} options - 配置，包括 before处理函数 和 全局通用数据：globalData\n * @example\n * const monitor = new Monitor('http://baidu.com/gt.gif', {\n *      before:(data)=>{\n *      return data;\n * },\n * globalData:{\n *          a:1\n *      }\n * });\n * monitor.mark({b:1}).mark({cd:1}).send();\n * monitor.report({c:1});\n */\nclass Monitor {\n    constructor(url, options = {}) {\n        const urlObj = parseUrl(url);\n        url = urlObj.url;\n        if (url.indexOf('//') === 0) {\n            // 通用协议，这里需要处理，解决 hybrid 使用 file 协议的情况\n            let protocol = location.protocol;\n            if (protocol !== 'http:') {\n                protocol = 'https:';\n            }\n\n            url = protocol + url;\n        }\n\n        this.url = url;\n        const globalData = options.globalData || {};\n        this._default = Object.assign(urlObj.query || {}, globalData);\n        this._data = {};\n        this._before = options.before;\n    }\n    /**\n     * 设置全局数据\n     * @param {Object} data - 需要 set 的数据对象\n     */\n    setGlobalData(data) {\n        if (isPlainObject(data)) {\n            extend(this._default, data);\n        }\n        return this;\n    }\n\n    /**\n     * 用于多次记录数据，数据会累计，只有调用过一次 send 方法才会清空\n     * **注意**：后面传入同名的字段会覆盖掉之前传入的\n     * **注意**：mark 的数据只能通过手动调用 send 才发送\n     * 期间 report 方法的数据是单独发送的\n     * 用于数据采集打点，比如速度统计，一个时间点一个打点，最后汇总发送\n     * @param {Object} data - 用于添加的数据\n     * @return {Monitor}\n     */\n    mark(data = {}) {\n        if (!isPlainObject(data)) {\n            throw typeError('data', 'object', data);\n        }\n        // 增加\n        if (isPlainObject(data)) {\n            Object.assign(this._mdata, data);\n        }\n\n        // 其他类型数据扔掉，只收 object|string\n        return this;\n    }\n    _send(data, force = false) {\n        if (!isPlainObject(data)) {\n            throw typeError('data', 'object', data);\n        }\n\n        let img = new Image(1, 1);\n        const imgName = `_xbox_mt_${guid()}`;\n        window[imgName] = img;\n\n        img.onload = img.onerror = img.onabort = () => {\n            img.onload = img.onerror = img.onabort = null;\n            window[imgName] = img = null;\n        };\n        // 增加 默认数据\n        data = extend({}, this._default, data);\n\n        const before = this._before;\n        if (!force && isFunction(before)) {\n            const result = before(data);\n            // 如果返回是 false 则不发送\n            if (result === false) {\n                return this;\n            } else if (isUndefined(result)) {\n                // 如果是 undefined， 则继续使用 data\n            } else if (isPlainObject(result) || isString(result)) {\n                // 如果是对象或者字符串，则替换 data；\n                data = result;\n            }\n        }\n\n        const url = `${this.url}?${isString(data) ? data : json2query(data, true)}`;\n        img.src = url + '&_rnd=' + guid();\n        return this;\n    }\n\n    /**\n     * 跟 mark 配合使用，发送 mark 记录的数据\n     * @param {Boolean} force - 是否跳过 before 函数处理直接发请求\n     * @return {Monitor}\n     */\n    send(force) {\n        this._send(this._data, force);\n        // 发送过一次之后就清空\n        delete this._mdata;\n        this._mdata = {};\n\n        return this;\n    }\n\n    /**\n     * @param {Object} data - 发送的数据\n     * @param {Boolean} force - 是否跳过 before 函数处理直接发请求\n     * @return {Monitor}\n     */\n    report(data = {}, force) {\n        if (!isPlainObject(data)) {\n            throw typeError('data', 'object', data);\n        }\n\n        return this._send(data, force);\n    }\n}\n// eslint-disable-next-line JS630\nexport default Monitor;\n"]}]}