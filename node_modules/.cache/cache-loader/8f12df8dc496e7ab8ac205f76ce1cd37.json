{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox-emoticon/index.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox-emoticon/index.js","mtime":1696919509678},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox-emoticon/index.js"],"names":["config","packages","imgpath","emoticonsList","emoticons","blacklistDefault","blacklist","version","MATCH_PATTERN","MOD_LIST","CLASS_NAME","IMG_STYLE","replace","str","reg","result","text","icon","getIconByText","getImgTag","query","test","random","Date","item","i","length","fuzzyReplace","options","opt","mod","indexOf","cdn","pattern","RegExp","classname","styletext","concat","prod","referrer","document","ext","generateNode","node","logParam","generateLogParam","encodeURIComponent","tcHost","params","service","action","ctv","cen","data","cateid","appid","dataid","actiontype","actionid","actiondata","ref","gmv","source","boxVersion","boxPlatform","type","id","content","from","page","value"],"mappings":"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","sourcesContent":["/**\n * @file 表情处理\n * @author jiangxiaoli\n * @rewrite jiaowenhua <jiaowenhua@baidu.com>\n */\nimport {isIOS, dateFormat, json2query} from '@baidu/xbox';\nimport {config} from './emoticon/config';\n\nconst {packages: [packages], imgpath} = config;\nconst {emoticons: emoticonsList, blacklist: blacklistDefault, version} = packages;\n// 匹配表情文本的正则表达式\n// 规则是以字符长度为准，涵盖了从最短到最长的所有情况，方括号中的字符长度为1~7，加上两侧的方括号，所以总长度为3~9\n// length为9的有：[MicDrop]\n// length为8的有：[nonono] [Salute]\n// length为7的有：[打call] [前面的别走] [n95口罩] [点亮平安灯] [给你小心心]\n// ...\n// length为1的有：[啊] [哟] [汗] [哼] [囧] [色] [晕] [衰] [嘘] [呆] [吐] [浪] [福] [⚡] [酸] [喜] [钟] [顶] [困] [来] [弱] [心] [耶] [呕] [额]\nconst MATCH_PATTERN = /\\[([^\\[\\]]){1,7}\\]/g;\n// 替换模式：'1'表示以图片为主，'2'表示以文本为主\nconst MOD_LIST = ['1', '2'];\n// 默认的class类名，被加在img标签上\nconst CLASS_NAME = 'xbox-emoticon';\n// 表情图片的默认样式，区分了ios和android\nconst IMG_STYLE = isIOS()\n    ? 'width:1.15em;height:1.15em;display:inline-block;margin:0 0.06em -0.205em 0.06em;'\n    : 'width:1.12em;height:1.12em;display:inline-block;margin:0 0.03em -0.205em 0.03em;';\n\n/**\n * 表情替换，例如输入text为'[疑问]'， 返回为<img>标签\n * @function replace\n * @param {String} str  - 处理如'[疑问]'\n * @return {String} img标签\n */\nexport const replace = str => {\n    const reg = /\\[.+?\\]/ig;\n    const result = str.replace(reg, text => {\n        // text 格式如 '[疑问]'\n        const icon = getIconByText(text);\n        if (!icon) {\n            return text;\n        }\n        // 替换成 <img> 标签\n        return getImgTag(text, icon);\n    });\n    return result;\n};\n\n/**\n * 判断输入文本是否可以转为表情，返回true or false\n * @function query\n * @param {String} text  - 处理如'[疑问]'\n * @return {Boolean}\n */\nexport const query = text => {\n    const reg = /^\\[.+?\\]$/;\n    if (!reg.test(text)) {\n        // 不符合 '[微笑]' 这种格式\n        return false;\n    }\n    const icon = replace(text);\n    if (icon === text) {\n        // 未替换成功\n        return false;\n    }\n    return true;\n};\n\n/**\n * 将文本转换为img标签\n * @function getImgTag\n * @param {String} text  - 处理如'[疑问]'\n * @param {String} icon  - 图片名字，如'face_01.png'\n * @return {String} 图片对应的标签\n */\nexport const getImgTag = (text, icon) => {\n    // 注意要加随机数定期清理缓存\n    const random = dateFormat(new Date(), 'yyyyMMddhh');\n    return `<img data-text=\"${text}\" src=\"${imgpath}${icon}?r=${random}\" style=\"${IMG_STYLE}\"/>`;\n};\n\n/**\n * 通过文本获取config中的表情名，例如输入text为'[微笑]' ，返回'face_01.png'\n * @function getIconByText\n * @param {String} text  - 处理如'[微笑]'\n * @return {String} 返回config中对应的icon，如'face_01.png'\n */\nexport const getIconByText = text => {\n    let icon = '';\n    let item;\n    for (let i = 0; i < emoticonsList.length; i++) {\n        item = emoticonsList[i];\n        if (item.text === text) {\n            icon = item.icon;\n            break;\n        }\n    }\n    return icon;\n};\n\n/**\n * 模糊替换字符串中的表情文本，比如“[微笑]”等\n * @param {String} str 初始文本\n * @param {Object} options 【可选】配置表\n * @param {String} options.mod 【可选】替换模式，'1'表示以图片为主，'2'表示以文本为主。默认值'1'\n * @param {String} options.cdn 【可选】图片的cdn域名。默认值'https://baidubox-emoji.cdn.bcebos.com/imgs/'\n * @param {RegExp} options.pattern 【可选】匹配的表情的正则表达式。默认值/\\[([^\\[\\]]){1,7}\\]/g\n * @param {String} options.classname 【可选】img标签额外增加的样式类名。默认会有“xbox-emoticon”\n * @param {String} options.styletext 【可选】img标签额外增加的内联样式。默认会有 IOS:'width:1.15em;height:1.15em;display:inline-block;margin:0 0.06em -0.205em 0.06em;'，Android:'width:1.12em;height:1.12em;display:inline-block;margin:0 0.03em -0.205em 0.03em;'\n * @param {Array} options.blacklist 【可选】忽略不替换、保留原样的表情格式，比如“['[微笑笑]','[笑哭哭]']”\n * @param {String} options.prod 【可选】产品线，用于统计，接入之前请找@PM、@FE同学申请新值\n * @param {String} options.referrer 【可选】当前页面的referrer。默认值document.referrer\n * @param {Object} options.ext 【可选】其他信息，用于统计\n * @returns 替换完表情后的文本\n */\nexport const fuzzyReplace = (str, options = {}) => {\n    // 空值检查\n    if (!str) {\n        return '';\n    }\n\n    // 配置表\n    const opt = {\n        mod: MOD_LIST.indexOf('' + options.mod) > -1 ? ('' + options.mod) : '1',\n        cdn: options.cdn || imgpath,\n        pattern: options.pattern instanceof RegExp ? options.pattern : MATCH_PATTERN,\n        classname: options.classname ? `${CLASS_NAME} ${options.classname}` : CLASS_NAME,\n        styletext: options.styletext || IMG_STYLE,\n        blacklist: options.blacklist ? blacklistDefault.concat(options.blacklist) : blacklistDefault,\n        prod: options.prod || 'others',\n        referrer: options.referrer || (typeof document !== 'undefined' && document.referrer) || 'NA',\n        ext: options.ext || {}\n    };\n\n    const result = str.replace(opt.pattern, text => {\n        // 黑名单中的表情不替换\n        if (opt.blacklist.indexOf(text) > -1) {\n            return text;\n        }\n        return generateNode(text, opt);\n    });\n    return result;\n};\n\n/**\n * 生成目标节点\n * @param {String} text 表情文本\n * @param {Object} opt 配置表\n * @returns 目标节点字符串\n */\nfunction generateNode(text, opt) {\n    let node = '';\n    const {mod, classname, styletext, cdn} = opt;\n    const random = dateFormat(new Date(), 'yyyyMMddhh');\n    const logParam = generateLogParam(text, opt);\n\n    if (mod === '2') {\n        // 以文字为主\n        node = `<span>${text}<img class=\"${classname}\" style=\"${styletext};display:none;\" title=\"${text}\" alt=\"${text}\" src=\"${cdn}${encodeURIComponent(text)}.png?r=${random}\" onload=\"this.parentNode.removeChild(this.parentNode.childNodes[0]);this.style.display='inline-block';\" onerror=\"var i=new Image();i.src='${logParam}';\"></span>`;\n    } else {\n        // 以图片为主\n        node = `<img class=\"${classname}\" style=\"${styletext}\" title=\"${text}\" alt=\"${text}\" src=\"${cdn}${encodeURIComponent(text)}.png?r=${random}\" onerror=\"var i=new Image();i.src='${logParam}';this.outerHTML='${text}'\">`;\n    }\n    return node;\n}\n\n/**\n * 生成日志参数\n * 这里只有一个点位serverId: 13476\n * http://feedlog.amis.baidu.com/zt/project_detail?id=3950&skipid=3950#zhuce\n * 我们所有上报的信息统一放在data.actiondata.content.ext中\n * @param {String} text 表情文本\n * @param {Object} opt 配置表\n * @returns 参数串\n */\nfunction generateLogParam(text, opt) {\n    const {mod, prod, referrer, ext}= opt;\n    const tcHost = 'https://mbd.baidu.com/tcbox';\n    const params = {\n        service: 'bdbox',\n        action: 'pblog',\n        // 表明参数协议第二个版本\n        ctv: '2',\n        // 表明参数加密\n        cen: 'uid_ua_ut',\n        data: {\n            cateid: 99,\n            // 手百为1\n            appid: '1',\n            // 客户端：1、JS：2、SERVER：3\n            dataid: '2',\n            // 区分主动/被动行为，主动：1、被动：0\n            actiontype: '1',\n            // 写死, actionid：2=事件统计，1=pv统计\n            actionid: '2',\n            // 核心数据\n            actiondata: {\n                ref: '',\n                gmv: '',\n                source: '',\n                boxVersion: '',\n                boxPlatform: isIOS() ? 'ios' : 'android',\n                // UBC打点类型：0为事件式、1为流式\n                type: '0',\n                // 数据收集标识id\n                id: '13476',\n                // 打点数据\n                content: {\n                    // 当前这个点位属于评论业务\n                    from: prod,\n                    type: mod,\n                    page: referrer,\n                    source: version,\n                    value: text,\n                    ext\n                }\n            }\n        }\n    };\n\n    return `${tcHost}?${json2query(params, true)}`;\n}\n\nexport {config};\nexport default {\n    fuzzyReplace,\n    replace,\n    query,\n    getImgTag,\n    getIconByText,\n    config\n};\n"]}]}