{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/src/pages/kangyi/components/epidTable/index.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/src/pages/kangyi/components/epidTable/index.js","mtime":1695633995743},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/src/pages/kangyi/components/epidTable/index.js"],"names":["voiceUrl","EpidTable","area","invokeUrl","schemeHead","couponUrl","encodeURIComponent","page","type","value","ext","isMore","clickedPlace","place","index","firstItems","data","get","notCaseOutsideList","pos","caseList","caseOutsideList","item","isDanger","showArea","lastStatus","set","nextTick","height","document","getElementById","scrollHeight","window","ReactNativeWebView","postMessage","s","tBodyClickIndex","showMark","imgIcon","require","Component","DangerousArea","headItems","feed","title","key","moreTitle","dangerousAreas","subList","length","bodyItems","tableData","items","map","showAreaCityIndex","findIndex","module","hot","__HOT_API__","__HOT_UTILS__","__SAN_COMPONENT__","getExports","template","prototype","accept","install","__HMR_ID__","createRecord","hotReload"],"mappings":"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","sourcesContent":["/**\n * @file 疫情卡组件\n * @author liuyuxin06@baidu.com\n */\n/* eslint-disable fecs-camelcase */\nimport {Component} from 'san';\nimport s from './epidTable.module.less';\nimport ubc from '@baidu/ubc-report-sdk';\nimport invokeScheme from '../../utils/invokeScheme';\nimport DangerousArea from '../dangerousArea';\n\nconst voiceUrl = 'https://voice.baidu.com/act/newpneumonia/newpneumonia';\nexport default class EpidTable extends Component {\n    /* eslint-disable max-len */\n    static template = `\n        <div class=\"{{s['epidTable']}}\">\n            <div class=\"{{s['epidTable-totalInfo']}}\"\n                style=\"{{feed.key !== 'caseOutsideList' ? '' : 'margin-bottom: 1.25rem;'}}\">\n                <div class=\"{{s['epidTable-totalInfo-title']}}\">{{title}}</div>\n                <div class=\"{{s['epidTable-totalInfo-more']}}\" on-click=\"moreClick\">\n                    <span>{{moreTitle}}</span>\n                    <span class=\"{{s['epidTable-totalInfo-moreImg']}}\"></span>\n                </div>\n            </div>\n            <div id=\"epidemicTable\">\n                <table class=\"{{s['epidTable-table']}}\"\n                    border=\"0\" cellspacing=\"0\" cellpadding=\"0\"\n                    style=\"{{feed.key !== 'caseOutsideList' ? 'border-spacing: 0 .5625rem': ''}}\">\n                    <thead class=\"{{s['epidTable-table-theadGray']}}\">\n                        <tr style=\"{{feed.key !== 'caseOutsideList' ? 'height: 3rem;' : 'height: 2.0625rem;'}}\">\n                            <th s-for=\"headItem, index in headItems\">\n                                <span class=\"{{s['epidTable-table-theadGray-text']}}\">{{headItem}}</span>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody class=\"{{s['epidTable-table-tbody']}}\">\n                        <tr s-if=\"firstItems\"\n                            class=\"{{s['epidTable-table-tbody-firstTr']}}\">\n                            <td \n                                on-click=\"handleFirstRowItem(firstItems.area)\">\n                                <div style=\"display: flex;-webkit-box-align: center;align-items: center;\">\n                                    <span style=\"width: .5rem;height:.375rem;display: inline-block;vertical-align: middle;\"></span>\n                                    <span>{{firstItems.area || ''}}</span>\n                                </div>\n                            </td>\n                            <td>\n                                {{firstItems.confirmedRelative || '-'}}</td>\n                            <td>\n                                {{(notCaseOutsideList ? firstItems.asymptomaticRelative : firstItems.confirmed ) || '-'}}</td>\n                            <td>{{(notCaseOutsideList ? firstItems.confirmed : firstItems.crued) || '-'}}</td>\n                            <td s-if=\"notCaseOutsideList\">{{firstItems.isDanger ? firstItems.dangerousAreas.totalNum : 0}}</td>\n                            <td s-else>{{firstItems.died || '-'}}</td>\n                        </tr>\n                        <tr>\n                            <td colSpan='5'>\n                                <table class=\"{{s['epidTable-subtable']}}\">\n                                    <tbody>\n                                        <fragment s-for=\"bodyRow, index in bodyItems\">\n                                        <tr\n                                            class=\"{{s['epidTable-subtable-row']}} {{showArea[index] ? '' : s['epidTable-subtable-hasBorder']}}\">\n                                            <td class=\"{{s['epidTable-subtable-firstRowItem']}}\"\n                                                on-click=\"handleClick(bodyRow.area || bodyRow.city, index)\">\n                                                <div class=\"{{s['epidTable-subtable-citybox']}}\">\n                                                    <span class=\"{{s['epidTable-subtable-city']}}\"\n                                                        >{{bodyRow.area || bodyRow.city}}</span>\n                                                    <span s-if=\"{{bodyRow.city !== '境外输入'}}\" class=\"{{s['epidTable-subtable-arrow']}}\"></span>  \n                                                </div>\n                                            </td>\n                                            <td>{{bodyRow.confirmedRelative || '-'}}</td>\n                                            <td>\n                                                {{(notCaseOutsideList ? bodyRow.asymptomaticRelative : bodyRow.confirmed ) || '-'}}</td>\n                                            <td>{{(notCaseOutsideList ? bodyRow.confirmed : bodyRow.crued) || '-'}}</td>\n                                            <td s-if=\"notCaseOutsideList\"\n                                                class=\"{{s['reportTable-tbody-bodyRowItem']}}\"\n                                                style=\"position: relative;\"\n                                                on-click=\"areaClick(bodyRow, index)\"\n                                                >\n                                                <span>{{bodyRow.isDanger ? bodyRow.dangerousAreas.totalNum : 0}}</span>\n                                                <div s-if=\"{{bodyRow.isDanger}}\"\n                                                    class=\"{{s['epidTable-subtable-triangle']}} {{showArea[index] ? s['rotate'] : ''}}\"\n                                                ></div>\n                                            </td>\n                                            <td s-else>{{bodyRow.died || '-'}}</td>\n                                        </tr>\n                                        <tr s-if=\"{{bodyRow.isDanger && showArea[index]}}\">\n                                            <td style=\"padding: 0;\" colSpan=\"{{5}}\">\n                                                <dangerous-area areaData=\"{{bodyRow.dangerousAreas}}\"/>\n                                            </td>\n                                        </tr>\n                                        </fragment>\n                                    </tbody>\n                                </table>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <div class=\"{{s['epidTable-remark']}}\">\n                    * 7:00-10:00为更新高峰，数据若滞后敬请谅解\n                </div>\n            </div>\n        </div>\n    `;\n    /* eslint-enable max-len */\n    static components = {\n        'dangerous-area': DangerousArea\n    }\n\n    static computed = {\n        headItems() {\n            const feed = this.data.get('feed');\n            return feed && feed.headItems || [];\n        },\n        // firstBodyItem() {\n        //     const feed = this.data.get('feed');\n        //     const firstBodyItem = feed && feed.firstItem || {};\n        //     return firstBodyItem;\n        // },\n        title() {\n            const feed = this.data.get('feed');\n            let title = '';\n            switch (feed.key) {\n                case 'caseList':\n                    title = '地区分布';\n                    break;\n                case 'caseOutsideList':\n                    title = '国外疫情';\n                    break;\n                default:\n                    break;\n            }\n            return title;\n        },\n        moreTitle() {\n            const feed = this.data.get('feed');\n            let moreTitle = '';\n            switch (feed.key) {\n                case 'caseList':\n                    moreTitle = '更多地区';\n                    break;\n                case 'caseOutsideList':\n                    moreTitle = '更多国家';\n                    break;\n                default:\n                    break;\n            }\n            return moreTitle;\n        },\n        firstItems() {\n            const feed = this.data.get('feed');\n            const firstItems = feed && feed.firstItems;\n            if (!firstItems) {\n                return false;\n            }\n            firstItems.isDanger = firstItems.dangerousAreas\n                && firstItems.dangerousAreas.subList\n                && firstItems.dangerousAreas.subList.length > 0;\n            return firstItems;\n        },\n        bodyItems() {\n            const feed = this.data.get('feed');\n            const tableData = feed && feed.items;\n            return (tableData || []).map(item => {\n                item.isDanger = item.dangerousAreas\n                    && item.dangerousAreas.subList\n                    && item.dangerousAreas.subList.length > 0;\n                return item;\n            });\n        },\n        notCaseOutsideList() {\n            // 判断表格是否展示国外疫情tab下，国外疫情tab下不展示curConfirm字段\n            const feed = this.data.get('feed');\n            return feed.key && feed.key !== 'caseOutsideList';\n        },\n        showArea() {\n            const bodyItems = this.data.get('bodyItems');\n            const showAreaCityIndex = bodyItems.findIndex(item => !!item.isDanger);\n            if (showAreaCityIndex < 0) {\n                return {};\n            }\n            return {\n                [showAreaCityIndex]: true\n            }\n        },\n    };\n    handleFirstRowItem(area) {\n        if (!area) {\n            return;\n        }\n        let invokeUrl = `${voiceUrl}?city=${area}-${area}`;\n        let schemeHead = 'baiduboxapp://v1/browser/open?url=';\n        let couponUrl = schemeHead + encodeURIComponent(invokeUrl);\n        invokeScheme(couponUrl);\n        ubc('event', {\n            page: 'local',\n            type: 'clk',\n            value: 'distribution',\n            ext: {\n                isMore: false,\n                clickedPlace: area\n            }\n        });\n    }\n    handleClick(place, index) {\n        const firstItems = this.data.get('firstItems');\n        let invokeUrl = '';\n        if (firstItems && firstItems.area) {\n            // 有firstItems 跳转链接格式为省份-城市\n            invokeUrl = `${voiceUrl}?city=${firstItems.area}-${place}`;\n        } else {\n            invokeUrl = `${voiceUrl}?city=${place}-${place}`;\n        }\n        let schemeHead = 'baiduboxapp://v1/browser/open?url=';\n        let couponUrl = schemeHead + encodeURIComponent(invokeUrl);\n        invokeScheme(couponUrl);\n\n        const notCaseOutsideList = this.data.get('notCaseOutsideList');\n        let page = notCaseOutsideList ? 'local' : 'overseas';\n        let value = notCaseOutsideList ? 'distribution' : 'foreignEpid';\n        let ext = {\n            isMore: false,\n            pos: index\n        };\n        notCaseOutsideList ? (ext.caseList = place) : (ext.caseOutsideList = place);\n        ubc('event', {\n            page,\n            type: 'clk',\n            value,\n            ext\n        });\n    }\n    moreClick() {\n        const notCaseOutsideList = this.data.get('notCaseOutsideList');\n        let page = notCaseOutsideList ? 'local' : 'overseas';\n        let value = notCaseOutsideList ? 'distribution' : 'foreignEpid';\n        const firstItems = this.data.get('firstItems');\n        let invokeUrl = '';\n        if (page === 'local') {\n            invokeUrl = `${voiceUrl}?city=${firstItems.area}-${firstItems.area}`;\n        } else {\n            invokeUrl = `${voiceUrl}/#tab4`;\n        }\n        let schemeHead = 'baiduboxapp://v1/browser/open?url=';\n        let couponUrl = schemeHead + encodeURIComponent(invokeUrl);\n        invokeScheme(couponUrl);\n        ubc('event', {\n            page,\n            type: 'clk',\n            value,\n            ext: {\n                isMore: true\n            }\n        });\n    }\n    areaClick(item, index) {\n        if (!item.isDanger) {\n            return;\n        }\n        const showArea = this.data.get('showArea');\n        const lastStatus = showArea[index];\n        this.data.set('showArea', {\n            ...showArea,\n            [index]: !lastStatus\n        });\n\n        this.nextTick(() => {\n            let height = document.getElementById('appContain').scrollHeight;\n            window.ReactNativeWebView && window.ReactNativeWebView.postMessage(height);\n        });\n    }\n\n    initData() {\n        return {\n            s,\n            tBodyClickIndex: 0,\n            showMark: false,\n            imgIcon: require('../../assets/more.png')\n        };\n    }\n}\n\n"]}]}