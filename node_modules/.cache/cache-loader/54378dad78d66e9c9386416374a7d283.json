{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/emitter.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/emitter.js","mtime":1696919504571},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvVXNlcnMvbGlhb2h1YW55dS9wcm9qZWN0cy9iYWlkdS13b3JrL2JhaWR1L2ZlZWQzL211bHRpLXBhZ2VzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlIik7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuZGVmYXVsdCA9IGV4cG9ydHMuRXZlbnRFbWl0dGVyID0gdm9pZCAwOwoKdmFyIF9jbGFzc0NhbGxDaGVjazIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi9Vc2Vycy9saWFvaHVhbnl1L3Byb2plY3RzL2JhaWR1LXdvcmsvYmFpZHUvZmVlZDMvbXVsdGktcGFnZXMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKSk7Cgp2YXIgX2NyZWF0ZUNsYXNzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiL1VzZXJzL2xpYW9odWFueXUvcHJvamVjdHMvYmFpZHUtd29yay9iYWlkdS9mZWVkMy9tdWx0aS1wYWdlcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpKTsKCnZhciBfaXMgPSByZXF1aXJlKCIuL2lzIik7Cgp2YXIgX3R5cGVFcnJvciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi90eXBlLWVycm9yIikpOwoKLyoqCiAqIEBmaWxlIEV2ZW50RW1pdHRlciDlrp7njrAKICogQGF1dGhvciB3YW5neW9uZ3FpbmcgPHdhbmd5b25ncWluZzAxQGJhaWR1LmNvbT4KICovCgovKioKICog5LqL5Lu25Y+R5bCE5Zmo57G7CiAqIEBjbGFzcyBFdmVudEVtaXR0ZXIKICovCnZhciBFdmVudEVtaXR0ZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIEV2ZW50RW1pdHRlcigpIHsKICAgICgwLCBfY2xhc3NDYWxsQ2hlY2syLmRlZmF1bHQpKHRoaXMsIEV2ZW50RW1pdHRlcik7CiAgICB0aGlzLl9ldmVudHMgPSB7fTsKICB9CiAgLyoqCiAgICog57uR5a6a5LqL5Lu2CiAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSDkuovku7blkI3np7AKICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFjayAtIOebkeWQrOWHveaVsAogICAqIEBwYXJhbSB7b2JqZWN0fSBbY3R4XSAtIOWPr+mAie+8jOS4iuS4i+aWhwogICAqLwoKCiAgKDAsIF9jcmVhdGVDbGFzczIuZGVmYXVsdCkoRXZlbnRFbWl0dGVyLCBbewogICAga2V5OiAib24iLAogICAgdmFsdWU6IGZ1bmN0aW9uIG9uKG5hbWUsIGNhbGxiYWNrLCBjdHgpIHsKICAgICAgaWYgKCEoMCwgX2lzLmlzU3RyaW5nKShuYW1lKSkgewogICAgICAgIHRocm93ICgwLCBfdHlwZUVycm9yLmRlZmF1bHQpKCduYW1lJywgJ3N0cmluZycsIG5hbWUpOwogICAgICB9CgogICAgICBpZiAoISgwLCBfaXMuaXNGdW5jdGlvbikoY2FsbGJhY2spKSB7CiAgICAgICAgdGhyb3cgKDAsIF90eXBlRXJyb3IuZGVmYXVsdCkoJ2NhbGxiYWNrJywgJ2Z1bmN0aW9uJywgY2FsbGJhY2spOwogICAgICB9CgogICAgICB2YXIgZXZlbnRzID0gdGhpcy5fZXZlbnRzOwogICAgICAoZXZlbnRzW25hbWVdIHx8IChldmVudHNbbmFtZV0gPSBbXSkpLnB1c2goewogICAgICAgIGZuOiBjYWxsYmFjaywKICAgICAgICBjdHg6IGN0eAogICAgICB9KTsKICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CiAgICAvKioKICAgICAqIOS4gOasoee7keWumuS6i+S7tgogICAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSDkuovku7blkI3np7AKICAgICAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrIC0g55uR5ZCs5Ye95pWwCiAgICAgKiBAcGFyYW0ge29iamVjdH0gW2N0eF0gLSDlj6/pgInvvIzkuIrkuIvmlocKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJvbmNlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBvbmNlKG5hbWUsIGNhbGxiYWNrLCBjdHgpIHsKICAgICAgdmFyIHNlbGYgPSB0aGlzOwoKICAgICAgZnVuY3Rpb24gbGlzdGVuZXIoKSB7CiAgICAgICAgc2VsZi5vZmYobmFtZSwgbGlzdGVuZXIpOwoKICAgICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHsKICAgICAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07CiAgICAgICAgfQoKICAgICAgICBjYWxsYmFjay5hcHBseShjdHgsIGFyZ3MpOwogICAgICB9CgogICAgICBsaXN0ZW5lci5fID0gY2FsbGJhY2s7CiAgICAgIHJldHVybiB0aGlzLm9uKG5hbWUsIGxpc3RlbmVyLCBjdHgpOwogICAgfQogICAgLyoqCiAgICAgKiDkuovku7blj5HpgIEKICAgICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0g5LqL5Lu25ZCN56ewCiAgICAgKiBAcGFyYW0gIHsuLi5hbnl9IGRhdGEgLSDlj5HpgIHnmoTmlbDmja4KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJlbWl0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBlbWl0KG5hbWUpIHsKICAgICAgaWYgKCEoMCwgX2lzLmlzU3RyaW5nKShuYW1lKSkgewogICAgICAgIHRocm93ICgwLCBfdHlwZUVycm9yLmRlZmF1bHQpKCduYW1lJywgJ3N0cmluZycsIG5hbWUpOwogICAgICB9CgogICAgICB2YXIgZXZ0cyA9ICh0aGlzLl9ldmVudHNbbmFtZV0gfHwgW10pLnNsaWNlKCk7CgogICAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGRhdGEgPSBuZXcgQXJyYXkoX2xlbjIgPiAxID8gX2xlbjIgLSAxIDogMCksIF9rZXkyID0gMTsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykgewogICAgICAgIGRhdGFbX2tleTIgLSAxXSA9IGFyZ3VtZW50c1tfa2V5Ml07CiAgICAgIH0KCiAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBldnRzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgdmFyIF9ldnRzJGkgPSBldnRzW2ldLAogICAgICAgICAgICBmbiA9IF9ldnRzJGkuZm4sCiAgICAgICAgICAgIF9ldnRzJGkkY3R4ID0gX2V2dHMkaS5jdHgsCiAgICAgICAgICAgIGN0eCA9IF9ldnRzJGkkY3R4ID09PSB2b2lkIDAgPyBudWxsIDogX2V2dHMkaSRjdHg7CiAgICAgICAgZm4uYXBwbHkoY3R4LCBkYXRhKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CiAgICAvKioKICAgICAqIOenu+mZpOS6i+S7tgogICAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSDkuovku7blkI3np7AKICAgICAqIEBwYXJhbSB7IGZ1bmN0aW9ufSBjYWxsYmFjayAtIOebkeWQrOWHveaVsO+8jOS4jeS8oOWcqOenu+mZpCBuYW1lIOS4i+eahOaJgOacieS6i+S7tgogICAgICovCgogIH0sIHsKICAgIGtleTogIm9mZiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gb2ZmKG5hbWUsIGNhbGxiYWNrKSB7CiAgICAgIHZhciBldmVudHMgPSB0aGlzLl9ldmVudHM7CiAgICAgIHZhciBldnRzID0gZXZlbnRzW25hbWVdOwoKICAgICAgaWYgKGV2dHMgJiYgZXZ0cy5sZW5ndGgpIHsKICAgICAgICBpZiAoKDAsIF9pcy5pc1VuZGVmaW5lZCkoY2FsbGJhY2spKSB7CiAgICAgICAgICAvLyDmuIXnkIYgbmFtZSDnmoTlm57osIPmlbDnu4QKICAgICAgICAgIC8vIOino+mZpOaJgOaciSBuYW1lIOeahOS6i+S7tuebkeWQrAogICAgICAgICAgZGVsZXRlIGV2ZW50c1tuYW1lXTsKICAgICAgICB9IGVsc2UgaWYgKCgwLCBfaXMuaXNGdW5jdGlvbikoY2FsbGJhY2spKSB7CiAgICAgICAgICB2YXIgbGl2ZUV2ZW50cyA9IFtdOwoKICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBldnRzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgICAgIHZhciBmbiA9IGV2dHNbaV0uZm47CgogICAgICAgICAgICBpZiAoZm4gIT09IGNhbGxiYWNrICYmIGZuLl8gIT09IGNhbGxiYWNrKSB7CiAgICAgICAgICAgICAgbGl2ZUV2ZW50cy5wdXNoKGV2dHNbaV0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKGxpdmVFdmVudHMubGVuZ3RoKSB7CiAgICAgICAgICAgIGV2ZW50c1tuYW1lXSA9IGxpdmVFdmVudHM7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBkZWxldGUgZXZlbnRzW25hbWVdOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CiAgfV0pOwogIHJldHVybiBFdmVudEVtaXR0ZXI7Cn0oKTsKCmV4cG9ydHMuRXZlbnRFbWl0dGVyID0gRXZlbnRFbWl0dGVyOwoKdmFyIF9kZWZhdWx0ID0gZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgcmV0dXJuIG5ldyBFdmVudEVtaXR0ZXIoKTsKfTsKCmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0Ow=="},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/emitter.js"],"names":["EventEmitter","_events","name","callback","ctx","events","push","fn","self","listener","off","args","apply","_","on","evts","slice","data","i","len","length","liveEvents"],"mappings":";;;;;;;;;;;;;;;AAIA;;AAKA;;AATA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;IACaA,Y;AACT,0BAAc;AAAA;AACV,SAAKC,OAAL,GAAe,EAAf;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;;uBACOC,I,EAAMC,Q,EAAUC,G,EAAK;AACpB,UAAI,CAAC,kBAASF,IAAT,CAAL,EAAqB;AACjB,cAAM,wBAAU,MAAV,EAAkB,QAAlB,EAA4BA,IAA5B,CAAN;AACH;;AAED,UAAI,CAAC,oBAAWC,QAAX,CAAL,EAA2B;AACvB,cAAM,wBAAU,UAAV,EAAsB,UAAtB,EAAkCA,QAAlC,CAAN;AACH;;AAED,UAAME,MAAM,GAAG,KAAKJ,OAApB;AACA,OAACI,MAAM,CAACH,IAAD,CAAN,KAAiBG,MAAM,CAACH,IAAD,CAAN,GAAe,EAAhC,CAAD,EAAsCI,IAAtC,CAA2C;AACvCC,QAAAA,EAAE,EAAEJ,QADmC;AAEvCC,QAAAA,GAAG,EAAEA;AAFkC,OAA3C;AAIA,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;yBACSF,I,EAAMC,Q,EAAUC,G,EAAK;AACtB,UAAMI,IAAI,GAAG,IAAb;;AACA,eAASC,QAAT,GAA2B;AACvBD,QAAAA,IAAI,CAACE,GAAL,CAASR,IAAT,EAAeO,QAAf;;AADuB,0CAANE,IAAM;AAANA,UAAAA,IAAM;AAAA;;AAEvBR,QAAAA,QAAQ,CAACS,KAAT,CAAeR,GAAf,EAAoBO,IAApB;AACH;;AAEDF,MAAAA,QAAQ,CAACI,CAAT,GAAaV,QAAb;AACA,aAAO,KAAKW,EAAL,CAAQZ,IAAR,EAAcO,QAAd,EAAwBL,GAAxB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;yBACSF,I,EAAe;AAChB,UAAI,CAAC,kBAASA,IAAT,CAAL,EAAqB;AACjB,cAAM,wBAAU,MAAV,EAAkB,QAAlB,EAA4BA,IAA5B,CAAN;AACH;;AAED,UAAMa,IAAI,GAAG,CAAC,KAAKd,OAAL,CAAaC,IAAb,KAAsB,EAAvB,EAA2Bc,KAA3B,EAAb;;AALgB,yCAANC,IAAM;AAANA,QAAAA,IAAM;AAAA;;AAOhB,WAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGJ,IAAI,CAACK,MAA3B,EAAmCF,CAAC,GAAGC,GAAvC,EAA4CD,CAAC,EAA7C,EAAiD;AAAA,sBACpBH,IAAI,CAACG,CAAD,CADgB;AAAA,YACtCX,EADsC,WACtCA,EADsC;AAAA,kCAClCH,GADkC;AAAA,YAClCA,GADkC,4BAC5B,IAD4B;AAE7CG,QAAAA,EAAE,CAACK,KAAH,CAASR,GAAT,EAAca,IAAd;AACH;;AAED,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;wBACQf,I,EAAMC,Q,EAAU;AAChB,UAAME,MAAM,GAAG,KAAKJ,OAApB;AAEA,UAAMc,IAAI,GAAGV,MAAM,CAACH,IAAD,CAAnB;;AACA,UAAIa,IAAI,IAAIA,IAAI,CAACK,MAAjB,EAAyB;AACrB,YAAI,qBAAYjB,QAAZ,CAAJ,EAA2B;AACvB;AACA;AACA,iBAAOE,MAAM,CAACH,IAAD,CAAb;AACH,SAJD,MAKK,IAAI,oBAAWC,QAAX,CAAJ,EAA0B;AAC3B,cAAIkB,UAAU,GAAG,EAAjB;;AAEA,eAAK,IAAIH,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGJ,IAAI,CAACK,MAA3B,EAAmCF,CAAC,GAAGC,GAAvC,EAA4CD,CAAC,EAA7C,EAAiD;AAC7C,gBAAMX,EAAE,GAAGQ,IAAI,CAACG,CAAD,CAAJ,CAAQX,EAAnB;;AACA,gBAAIA,EAAE,KAAKJ,QAAP,IAAmBI,EAAE,CAACM,CAAH,KAASV,QAAhC,EAA0C;AACtCkB,cAAAA,UAAU,CAACf,IAAX,CAAgBS,IAAI,CAACG,CAAD,CAApB;AACH;AACJ;;AACD,cAAIG,UAAU,CAACD,MAAf,EAAuB;AACnBf,YAAAA,MAAM,CAACH,IAAD,CAAN,GAAemB,UAAf;AACH,WAFD,MAGK;AACD,mBAAOhB,MAAM,CAACH,IAAD,CAAb;AACH;AACJ;AACJ;;AAED,aAAO,IAAP;AACH;;;;;;;eAGU;AAAA,SAAM,IAAIF,YAAJ,EAAN;AAAA,C","sourcesContent":["/**\n * @file EventEmitter 实现\n * @author wangyongqing <wangyongqing01@baidu.com>\n */\nimport {\n    isString,\n    isFunction,\n    isUndefined\n} from './is';\nimport typeError from './type-error';\n/**\n * 事件发射器类\n * @class EventEmitter\n */\nexport class EventEmitter {\n    constructor() {\n        this._events = {};\n    }\n    /**\n     * 绑定事件\n     * @param {string} name - 事件名称\n     * @param {function} callback - 监听函数\n     * @param {object} [ctx] - 可选，上下文\n     */\n    on(name, callback, ctx) {\n        if (!isString(name)) {\n            throw typeError('name', 'string', name);\n        }\n\n        if (!isFunction(callback)) {\n            throw typeError('callback', 'function', callback);\n        }\n\n        const events = this._events;\n        (events[name] || (events[name] = [])).push({\n            fn: callback,\n            ctx: ctx\n        });\n        return this;\n    }\n    /**\n     * 一次绑定事件\n     * @param {string} name - 事件名称\n     * @param {function} callback - 监听函数\n     * @param {object} [ctx] - 可选，上下文\n     */\n    once(name, callback, ctx) {\n        const self = this;\n        function listener(...args) {\n            self.off(name, listener);\n            callback.apply(ctx, args);\n        }\n\n        listener._ = callback;\n        return this.on(name, listener, ctx);\n    }\n    /**\n     * 事件发送\n     * @param {string} name - 事件名称\n     * @param  {...any} data - 发送的数据\n     */\n    emit(name, ...data) {\n        if (!isString(name)) {\n            throw typeError('name', 'string', name);\n        }\n\n        const evts = (this._events[name] || []).slice();\n\n        for (let i = 0, len = evts.length; i < len; i++) {\n            const {fn, ctx = null} = evts[i];\n            fn.apply(ctx, data);\n        }\n\n        return this;\n    }\n    /**\n     * 移除事件\n     * @param {string} name - 事件名称\n     * @param { function} callback - 监听函数，不传在移除 name 下的所有事件\n     */\n    off(name, callback) {\n        const events = this._events;\n\n        const evts = events[name];\n        if (evts && evts.length) {\n            if (isUndefined(callback)) {\n                // 清理 name 的回调数组\n                // 解除所有 name 的事件监听\n                delete events[name];\n            }\n            else if (isFunction(callback)) {\n                let liveEvents = [];\n\n                for (let i = 0, len = evts.length; i < len; i++) {\n                    const fn = evts[i].fn;\n                    if (fn !== callback && fn._ !== callback) {\n                        liveEvents.push(evts[i]);\n                    }\n                }\n                if (liveEvents.length) {\n                    events[name] = liveEvents;\n                }\n                else {\n                    delete events[name];\n                }\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default () => new EventEmitter();\n"]}]}