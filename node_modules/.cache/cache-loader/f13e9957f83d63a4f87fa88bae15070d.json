{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/nano/es/slider/index.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/nano/es/slider/index.js","mtime":1696919503876},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/nano/es/slider/index.js"],"names":["prefixCls","clamp","value","min","max","valueToPercent","Slider","disabled","lead","marks","showbar","step","tail","vertical","that","$slider","el","$button","ref","handelTouch","handleEvent","event","handler","type","preventDefault","reset","startX","startY","deltaX","deltaY","offsetX","offsetY","touchstart","touches","clientX","clientY","startValue","data","get","events","forEach","addEventListener","touchmove","touch","Math","abs","rect","getBoundingClientRect","delta","total","height","width","diff","range","updateValue","touchend","removeEventListener","round","stopPropagation","top","left","newValue","format","oldValue","set","fire","Component","DataTypes","bool","string","number","array","wrapClass","filter","c","getStyle","ret","val","offset","Object","assign","module","hot","__HOT_API__","require","__HOT_UTILS__","__SAN_COMPONENT__","getExports","template","prototype","accept","install","__HMR_ID__","createRecord","hotReload"],"mappings":"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","sourcesContent":["/**\n * @file 组件 slider 滑块\n * @author baozhixin <baozhixin@baidu.com>\n */\n\nimport './style/index.less';\nimport {Component, DataTypes} from 'san';\n\nconst prefixCls = 's-slider';\n\nfunction clamp(value, min, max) {\n    if (value < min) {\n        return min;\n    }\n    if (value > max) {\n        return max;\n    }\n    return value;\n}\n\nfunction valueToPercent(value, min, max) {\n    return (value - min) * 100 / (max - min);\n}\n\nexport default class Slider extends Component {\n    // eslint-disable-next-line\n    static template = /*html*/ `\n        <div class=\"{{wrapClass}}\" on-click=\"handleClick\">\n            <slot name=\"lead\">\n                <div s-if=\"lead\" class=\"${prefixCls}-lead\">{{lead}}</div>\n            </slot>\n            <div class=\"${prefixCls}\">\n                <div class=\"${prefixCls}-foo\" style=\"{{value | getStyle('foo')}}\">\n                    <div\n                        class=\"${prefixCls}-bar\"\n                        style=\"{{value | getStyle('bar')}}\"\n                    />\n                </div>\n                <div\n                    s-for=\"mark in marks\"\n                    class=\"${prefixCls}-mark\"\n                    style=\"{{mark.value | getStyle('mark')}}\"\n                >\n                    <div class=\"${prefixCls}-mark-label {{mark.value === value ? 'active' : ''}}\">{{mark.label}}</div>\n                    <div class=\"${prefixCls}-mark-value\"></div>\n                </div>\n                <div\n                    s-ref=\"button\"\n                    class=\"${prefixCls}-button-wrap\"\n                    style=\"{{value | getStyle('btn')}}\"\n                >\n                    <slot name=\"button\"><div class=\"${prefixCls}-button\"/></slot>\n                </div>\n            </div>\n            <slot name=\"tail\">\n                <div s-if=\"tail\" class=\"${prefixCls}-tail\">{{tail}}</div>\n            </slot>\n        </div>\n    `;\n\n    static dataTypes = {\n        disabled: DataTypes.bool,\n        lead: DataTypes.string,\n        max: DataTypes.number,\n        min: DataTypes.number,\n        marks: DataTypes.array,\n        showbar: DataTypes.bool,\n        step: DataTypes.number,\n        tail: DataTypes.string,\n        value: DataTypes.number,\n        vertical: DataTypes.bool\n    };\n\n    static computed = {\n        wrapClass() {\n            const disabled = this.data.get('disabled');\n            const vertical = this.data.get('vertical');\n            return [\n                `${prefixCls}-wrap`,\n                disabled && `${prefixCls}-disabled`,\n                vertical && `${prefixCls}-vertical`\n            ].filter(c => c);\n        }\n    };\n\n    static filters = {\n        getStyle(value, type) {\n            let ret = {};\n            const {showbar, max, min, vertical} = this.data.get();\n            const val = clamp(value, min, max);\n            const offset = valueToPercent(val, min, max) + '%';\n            switch (type) {\n                case 'bar':\n                    Object.assign(ret, {\n                        [vertical ? 'height' : 'width']: offset,\n                        ['background-color']: !showbar && 'transparent'\n                    });\n                    break;\n                case 'btn':\n                case 'mark':\n                    Object.assign(ret, {\n                        [vertical ? 'top' : 'left']: offset\n                    });\n                    break;\n            }\n            return ret;\n        }\n    };\n\n    get disabled() {\n        return this.data.get('disabled');\n    }\n\n    get range() {\n        const {max, min} = this.data.get();\n        return max - min;\n    }\n\n    get vertical() {\n        return this.data.get('vertical');\n    }\n\n    initData() {\n        return {\n            disabled: false,\n            lead: '',\n            max: 100,\n            min: 0,\n            marks: [],\n            showbar: true,\n            step: 1,\n            tail: '',\n            value: 0,\n            vertical: false\n        };\n    }\n\n    attached() {\n        const that = this;\n        const $slider = this.el;\n        const $button = this.ref('button');\n        const handelTouch = {\n            handleEvent(event) {\n                if (that.disabled) {\n                    return;\n                }\n                let handler = event.type;\n                if (typeof this[handler] === 'function') {\n                    event.preventDefault();\n                    return this[handler](event);\n                }\n            },\n            reset() {\n                this.startX = 0;\n                this.startY = 0;\n                this.deltaX = 0;\n                this.deltaY = 0;\n                this.offsetX = 0;\n                this.offsetY = 0;\n            },\n            touchstart(event) {\n                this.reset();\n                this.startX = event.touches[0].clientX;\n                this.startY = event.touches[0].clientY;\n                this.startValue = that.data.get('value');\n                const events = ['touchmove', 'touchend'];\n                events.forEach(type => $button.addEventListener(type, this, false));\n            },\n            touchmove(event) {\n                const touch = event.touches[0];\n                this.deltaX = touch.clientX - this.startX;\n                this.deltaY = touch.clientY - this.startY;\n                this.offsetX = Math.abs(this.deltaX);\n                this.offsetY = Math.abs(this.deltaY);\n\n                const rect = $slider.getBoundingClientRect();\n                const delta = that.vertical ? this.deltaY : this.deltaX;\n                const total = that.vertical ? rect.height : rect.width;\n                const diff = (delta / total) * that.range;\n\n                that.updateValue(this.startValue + diff);\n            },\n            touchend() {\n                const events = ['touchmove', 'touchend'];\n                events.forEach(type => $button.removeEventListener(type, this));\n            }\n        };\n        if ($button) {\n            $button.addEventListener('touchstart', handelTouch, false);\n        }\n    }\n\n    format(value) {\n        const {max, min, step} = this.data.get();\n        return Math.round(Math.max(min, Math.min(value, max)) / step) * step;\n    }\n\n    handleClick(event) {\n        event.stopPropagation();\n        const {disabled, max, min, vertical} = this.data.get();\n\n        if (disabled) {\n            return;\n        }\n\n        const rect = this.el.getBoundingClientRect();\n        const delta = vertical ? event.clientY - rect.top : event.clientX - rect.left;\n        const total = vertical ? rect.height : rect.width;\n        const value = (delta / total) * (max - min) + min;\n\n        this.updateValue(value);\n    }\n\n    updateValue(value) {\n        const newValue = this.format(value);\n        const oldValue = this.data.get('value');\n        this.data.set('value', newValue);\n        if (newValue !== oldValue) {\n            this.fire('change', newValue);\n        }\n    }\n}\n"]}]}