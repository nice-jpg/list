{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/src/pages/examwallet/containers/app.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/src/pages/examwallet/containers/app.js","mtime":1695633995724},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/src/pages/examwallet/containers/app.js"],"names":["APIURL","App","opt","value","data","get","myAssets","my_assets","cmd","item","text","getData","bindScrollEvent","ref","removeEventListener","scrollEvent","that","page","pageSize","hasMore","set","fly","post","then","scrollResdata","errno","scrollList","list","prevList","has_more","concat","e","catch","message","endReached","addEventListener","resData","actions","setPageInit","length","boxx","call","type","isNonData","statusMap","Component","Flash","connect","san","pageInit","module","hot","__HOT_API__","require","__HOT_UTILS__","__SAN_COMPONENT__","getExports","template","prototype","accept","install","__HMR_ID__","createRecord","hotReload"],"mappings":"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","sourcesContent":["/**\n * @file 高考征文\n */\nimport './app.less';\nimport {Component} from 'san';\nimport {connect} from '@/lib/Store';\nimport {\n    Flash,\n    Toast as toast,\n} from '@baidu/nano';\nimport boxx from '@baidu/boxx';\nimport {scrollToBottom, debounce, invokeScheme} from '@/lib/utils/common';\nimport {sendShowLog, sendClickLog} from '../log';\nimport fly from 'flyio';\n\n// const APIURL = '/newspage/data/exampublish?action=wallet&_format=json&mock_uid=3905335350';\nconst APIURL = '/newspage/data/exampublish?action=wallet&_format=json';\n\nexport default class App extends Component {\n    constructor(opt) {\n        super(opt);\n    }\n    static template = /* html */ `\n        <div s-show=\"pageInit\" class=\"examwalletWrap\">\n            <div class=\"header\">\n                <div class=\"title\">{{resData.title}}</div>\n                <div class=\"total\">累计获得</div>\n                <div class=\"moneyWrap\">\n                    <div class=\"totalMoney\">\n                        <span class=\"{{+resData.total == 0 ? 'whiteColor' : ''}}\">{{resData.total}}</span>元\n                    </div>\n                    <div class=\"btnMoney\" on-click=\"jumptoAward\">查看奖励</div>\n                </div>\n            </div>\n            <div class=\"mainList {{isNonData ? 'listHeight' : ''}}\" s-ref=\"scrollList\">\n                <div s-if=\"isNonData\" class=\"nonDataWrap\">\n                    <img src=\"https://b.bdstatic.com/searchbox/image/gcp/20230609/605473195.png\">\n                    还没发布过视频哦\n                </div>\n                <div s-else class=\"listWrap\">\n                    <div class=\"list\" s-for=\"item, index in resData.list\" on-click=\"jumptoVideo(item)\">\n                        <div class=\"coverimg\" style=\"background: url({{item.image}}) no-repeat center/cover;\"></div>\n                        <div class=\"packStatus\">\n                            <div class=\"title\">{{item.title}}</div>\n                            <div class=\"status\">\n                                <template s-if=\"item.status == '1'\">\n                                    <div class=\"review\">\n                                        <img src=\"{{statusMap[item.status]}}\">\n                                        审核合格\n                                    </div>\n                                </template>\n                                <template s-else-if=\"item.status == '0'\">\n                                    <div class=\"review reviewGray\">\n                                        <img src=\"{{statusMap[item.status]}}\">\n                                        审核不合格\n                                    </div>\n                                </template>\n                                <template s-else>\n                                    <div class=\"review\">\n                                        <img src=\"{{statusMap[item.status]}}\">\n                                        审核中\n                                    </div>\n                                </template>\n                            </div>\n                        </div>\n                    </div>\n                    <div s-if=\"resData.list.length > 4\" class=\"load\">\n                        {{hasMore ? '正在加载...' : '没有更多了'}}\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    `;\n\n    static components = {\n        'nano-flash': Flash,\n    };\n\n    static computed = {};\n\n    jumptoAward() {\n        sendClickLog({value: 'tixian'});\n        const {my_assets: myAssets} = this.data.get('resData') || {};\n        if (myAssets?.cmd) {\n            invokeScheme(myAssets.cmd);\n        }\n    }\n\n    jumptoVideo(item) {\n        if (item?.cmd) {\n            invokeScheme(item.cmd);\n        } else {\n            toast({\n                text: '内容审核中',\n            });\n        }\n    }\n\n    attached() {\n        // 首页数据\n        this.getData();\n        // 绑定滚动事件\n        this.bindScrollEvent();\n        // 钱包页展现\n        sendShowLog({value: ''});\n    }\n\n    detached() {\n        this.ref('scrollList').removeEventListener('scroll', this.scrollEvent);\n    }\n\n    /**\n     * 滚动响应事件：上滑触底，加载更多\n     */\n    endReached() {\n        const that = this;\n        scrollToBottom(that.ref('scrollList'), () => {\n            let page = that.data.get('page');\n            const pageSize = that.data.get('pageSize');\n            const hasMore = that.data.get('hasMore');\n            // 没有更多结束\n            if (!hasMore) {\n                return;\n            }\n            that.data.set('page', page++);\n\n            // hasMore触底请求数据\n            fly.post(`${APIURL}&page=${page}&pageSize=${pageSize}`).then(({data}) => {\n                const scrollResdata = data?.data || {};\n                if (!data || +data.errno !== 0) {\n                    return;\n                }\n                // 累加分页索引\n                that.data.set('page', page++);\n\n                // 尝试处理数据\n                try {\n                    const scrollList = scrollResdata.list || [];\n                    const prevList = that.data.get('resData').list || [];\n                    // // 请求数据合并上一页&&更新hasmore\n                    that.data.set('hasMore', scrollResdata.has_more || 0);\n                    that.data.set('resData.list', prevList.concat(scrollList));\n                }\n                catch (e) {\n                    toast({\n                        text: '加载数据异常，请重试',\n                    });\n                }\n            }).catch(e => {\n                // 异常请求失败-展示没有更多\n                that.data.set('hasMore', 0);\n                toast({\n                    text: e.message || '请求失败',\n                });\n            });\n        });\n    }\n\n    /**\n     * 绑定滚动事件\n     */\n    bindScrollEvent() {\n        this.scrollEvent = debounce(() => {\n            this.endReached();\n        }, 150);\n\n        if (this.ref('scrollList')) {\n            this.ref('scrollList').addEventListener('scroll', this.scrollEvent, true);\n        }\n    }\n\n    /**\n     * 初始化第一刷数据\n     * @param {*} page 1\n     * @param {*} pageSize 15\n     * @returns response\n     */\n    getData(page = 1, pageSize = 10) {\n        return fly.post(`${APIURL}&page=${page}&pageSize=${pageSize}`).then(({data}) => {\n            const resData = data?.data || {};\n            if (!resData || +data.errno !== 0) {\n                return;\n            }\n\n            // 尝试处理首页数据\n            try {\n                this.actions.setPageInit(true);\n                this.data.set('resData', resData);\n                if (resData.list && resData.list.length > 0) {\n                    this.data.set('isNonData', 0);\n                };\n                this.data.set('hasMore', resData.has_more);\n            }\n            catch (e) {\n                // 页面初始化失败\n                this.actions.setPageInit(false);\n                boxx.call('commonUI.showToast', {\n                    type: '1',\n                    message: '数据异常，请稍后重试'\n                });\n            }\n        });\n    }\n\n    initData() {\n        return {\n            resData: {},\n            isNonData: 1,\n            hasMore: 1,\n            page: 1,\n            pageSize: 10,\n            statusMap: {\n                '': 'https://b.bdstatic.com/searchbox/image/gcp/20230609/498062262.png',\n                '2': 'https://b.bdstatic.com/searchbox/image/gcp/20230609/498062262.png',\n                '0': 'https://b.bdstatic.com/searchbox/image/gcp/20230609/2762800098.png',\n                '1': 'https://b.bdstatic.com/searchbox/image/gcp/20230609/3907327819.png',\n            }\n        };\n    }\n}\n\nconnect.san(\n    {\n        pageInit: 'pageInit',\n    },\n    {\n        setPageInit: 'setPageInit',\n    }\n)(App);\n"]}]}