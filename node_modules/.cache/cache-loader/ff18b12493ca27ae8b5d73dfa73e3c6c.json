{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/clone.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/clone.js","mtime":1696919504571},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmciKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIik7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuY2xvbmUgPSBjbG9uZTsKdmFyIHRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZzsKCmZ1bmN0aW9uIG1hcChvYmosIGNhbGxiYWNrLCBtZXJnZSkgewogIHZhciBpbmRleCA9IDA7CgogIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgIGlmIChvYmouaGFzT3duUHJvcGVydHkoa2V5KSkgewogICAgICBpZiAobWVyZ2UpIHsKICAgICAgICBjYWxsYmFja1trZXldID0gb2JqW2tleV07CiAgICAgIH0gZWxzZSBpZiAoY2FsbGJhY2soa2V5LCBvYmpba2V5XSwgaW5kZXgrKykpIHsKICAgICAgICBicmVhazsKICAgICAgfQogICAgfQogIH0KfQoKZnVuY3Rpb24gY2xvbmUoc291cmNlKSB7CiAgdmFyIHJldDsKCiAgc3dpdGNoICh0b1N0cmluZy5jYWxsKHNvdXJjZSkpIHsKICAgIGNhc2UgJ1tvYmplY3QgT2JqZWN0XSc6CiAgICAgIHJldCA9IHt9OwogICAgICBtYXAoc291cmNlLCBmdW5jdGlvbiAoaywgdikgewogICAgICAgIHJldFtrXSA9IGNsb25lKHYpOwogICAgICB9KTsKICAgICAgYnJlYWs7CgogICAgY2FzZSAnW29iamVjdCBBcnJheV0nOgogICAgICByZXQgPSBbXTsKICAgICAgc291cmNlLmZvckVhY2goZnVuY3Rpb24gKGVsZSkgewogICAgICAgIHJldC5wdXNoKGNsb25lKGVsZSkpOwogICAgICB9KTsKICAgICAgYnJlYWs7CgogICAgZGVmYXVsdDoKICAgICAgcmV0ID0gc291cmNlOwogIH0KCiAgcmV0dXJuIHJldDsKfQ=="},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/clone.js"],"names":["toString","Object","prototype","map","obj","callback","merge","index","key","hasOwnProperty","clone","source","ret","call","k","v","forEach","ele","push"],"mappings":";;;;;;;;;;;;;;AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,SAAP,CAAiBF,QAAhC;;AAEA,SAASG,GAAT,CAAaC,GAAb,EAAkBC,QAAlB,EAA4BC,KAA5B,EAAmC;AAC/B,MAAIC,KAAK,GAAG,CAAZ;;AACA,OAAK,IAAIC,GAAT,IAAgBJ,GAAhB,EAAqB;AACjB,QAAIA,GAAG,CAACK,cAAJ,CAAmBD,GAAnB,CAAJ,EAA6B;AACzB,UAAIF,KAAJ,EAAW;AACPD,QAAAA,QAAQ,CAACG,GAAD,CAAR,GAAgBJ,GAAG,CAACI,GAAD,CAAnB;AACH,OAFD,MAEO,IAAIH,QAAQ,CAACG,GAAD,EAAMJ,GAAG,CAACI,GAAD,CAAT,EAAgBD,KAAK,EAArB,CAAZ,EAAsC;AACzC;AACH;AACJ;AACJ;AACJ;;AAEM,SAASG,KAAT,CAAeC,MAAf,EAAuB;AAC1B,MAAIC,GAAJ;;AACA,UAAQZ,QAAQ,CAACa,IAAT,CAAcF,MAAd,CAAR;AACI,SAAK,iBAAL;AACIC,MAAAA,GAAG,GAAG,EAAN;AACAT,MAAAA,GAAG,CAACQ,MAAD,EAAS,UAAUG,CAAV,EAAaC,CAAb,EAAgB;AACxBH,QAAAA,GAAG,CAACE,CAAD,CAAH,GAASJ,KAAK,CAACK,CAAD,CAAd;AACH,OAFE,CAAH;AAGA;;AACJ,SAAK,gBAAL;AACIH,MAAAA,GAAG,GAAG,EAAN;AACAD,MAAAA,MAAM,CAACK,OAAP,CAAe,UAAUC,GAAV,EAAe;AAC1BL,QAAAA,GAAG,CAACM,IAAJ,CAASR,KAAK,CAACO,GAAD,CAAd;AACH,OAFD;AAGA;;AACJ;AACIL,MAAAA,GAAG,GAAGD,MAAN;AAdR;;AAgBA,SAAOC,GAAP;AACH","sourcesContent":["let toString = Object.prototype.toString;\n\nfunction map(obj, callback, merge) {\n    let index = 0;\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            if (merge) {\n                callback[key] = obj[key];\n            } else if (callback(key, obj[key], index++)) {\n                break;\n            }\n        }\n    }\n}\n\nexport function clone(source) {\n    let ret;\n    switch (toString.call(source)) {\n        case '[object Object]':\n            ret = {};\n            map(source, function (k, v) {\n                ret[k] = clone(v);\n            });\n            break;\n        case '[object Array]':\n            ret = [];\n            source.forEach(function (ele) {\n                ret.push(clone(ele));\n            });\n            break;\n        default:\n            ret = source;\n    }\n    return ret;\n}\n"]}]}