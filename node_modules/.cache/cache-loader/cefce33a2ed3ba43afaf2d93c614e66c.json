{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/json2query.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/json2query.js","mtime":1696919504571},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvVXNlcnMvbGlhb2h1YW55dS9wcm9qZWN0cy9iYWlkdS13b3JrL2JhaWR1L2ZlZWQzL211bHRpLXBhZ2VzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCIpOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSBqc29uMnF1ZXJ5OwoKdmFyIF9pcyA9IHJlcXVpcmUoIi4vaXMiKTsKCnZhciBfdHlwZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi90eXBlIikpOwoKdmFyIF9nZXRHbG9iYWxGdW5jID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL2dldC1nbG9iYWwtZnVuYyIpKTsKCnZhciBfc3RyaWN0VXJpRW5jb2RlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL3N0cmljdC11cmktZW5jb2RlIikpOwoKLyoqCiAqIEBmaWxlIOWwhuWvueixoei9rOaIkHVybO+8jOS9huaYr+ayoeaciea3u+WKoOWvueaVsOe7hOaUr+aMgQogKiBAYXV0aG9yIHdhbmd5b25ncWluZyA8d2FuZ3lvbmdxaW5nMDFAYmFpZHUuY29tPgogKi8KCi8qKgogKiDlsIblr7nosaHovazmiJB1cmzvvIzkvYbmmK/msqHmnInmt7vliqDlr7nmlbDnu4TjgIHlr7nosaHmlK/mjIHvvIznm7TmjqUgSlNPTi5zdHJpbmdpZnkg6L6T5Ye6CiAqIEBmdW5jdGlvbiBqc29uMnF1ZXJ5CiAqIEBwYXJhbSAge29iamVjdH0ganNvbiAtIOW+heWkhOeQhueahGpzb27lr7nosaEKICogQHBhcmFtICB7Ym9vbGVhbn0gW2VuY29kZSA9IGZhbHNlXSAtIOaYr+WQpiBlbmNvZGVVUkkg5a+56LGhL+aVsOe7hOWtl+espuS4sgogKiBAcmV0dXJuIHtzdHJpbmd9ICBzdHIgIC0g5aSE55CG5LmL5ZCO55qEc3RyaW5n5a2X56ym5LiyCiAqIEBleGFtcGxlCiAqIGpzb24ycXVlcnkoewogKiAgICAgICBhOiAxLAogKiAgICAgICBiOiAnc3RyaW5nJwogKiAgfSk7CiAqIC8vJ2E9MSZiPXN0cmluZycKICoganNvbjJxdWVyeSh7CiAqICAgICAgIGE6IDEsCiAqICAgICAgIGI6ICdzdHJpbmcnLAogKiAgICAgICBjOiBbMSwgMiwgM10KICogICB9KTsKICogLy8nYT0xJmI9c3RyaW5nJmM9WzEsMiwzXScKICoganNvbjJxdWVyeSh7CiAqICAgICAgIGE6IDEsCiAqICAgICAgIGI6ICdzdHJpbmcnLAogKiAgICAgICBjOiBbMSwgMiwgM10KICogICB9LCB0cnVlKTsKICogLy8nYT0xJmI9c3RyaW5nJmM9JTVCMSUyQzIlMkMzJTVEJwogKi8KZnVuY3Rpb24ganNvbjJxdWVyeShqc29uKSB7CiAgdmFyIGVuY29kZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZmFsc2U7CgogIGlmICgoMCwgX2lzLmlzU3RyaW5nKShqc29uKSkgewogICAgcmV0dXJuIGpzb247CiAgfQoKICB2YXIgYXJyID0gW107CgogIGZvciAodmFyIGkgaW4ganNvbikgewogICAgdmFyIGogPSBqc29uW2ldOwoKICAgIGlmICgoMCwgX2lzLmlzQXJyYXkpKGopKSB7CiAgICAgIGogPSBKU09OLnN0cmluZ2lmeShtYXBBcnJheShqKSk7CiAgICB9IGVsc2UgaWYgKCgwLCBfaXMuaXNOaWwpKGopKSB7CiAgICAgIGogPSAnJzsKICAgIH0gZWxzZSBpZiAoKDAsIF9pcy5pc1BsYWluT2JqZWN0KShqKSkgewogICAgICAvLyDov5nph4zkuI3lho3pgY3ljoblpITnkIbvvIzlr7nkuo7mt7HlsYLnmoQgY2FsbGJhY2sg6ZyA6KaB5rOo5oSP5LqGCiAgICAgIGogPSBKU09OLnN0cmluZ2lmeShqKTsKICAgIH0gZWxzZSBpZiAoKDAsIF9pcy5pc0Z1bmN0aW9uKShqKSkgewogICAgICBqID0gKDAsIF9nZXRHbG9iYWxGdW5jLmRlZmF1bHQpKGopOwogICAgfSAvLyBzdHJpbmcvbnVtYmVyL2Jvb2xlYW4g5LiN5aSE55CGCgoKICAgIGFyci5wdXNoKCIiLmNvbmNhdChpLCAiPSIpLmNvbmNhdChlbmNvZGUgPyAoMCwgX3N0cmljdFVyaUVuY29kZS5kZWZhdWx0KShqKSA6IGopKTsKICB9CgogIHJldHVybiBhcnIuam9pbignJicpOwp9CgpmdW5jdGlvbiBtYXBBcnJheShhcmdzKSB7CiAgcmV0dXJuIGFyZ3MubWFwKGZ1bmN0aW9uIChhcmcpIHsKICAgIHN3aXRjaCAoKDAsIF90eXBlLmRlZmF1bHQpKGFyZykpIHsKICAgICAgY2FzZSAnc3RyaW5nJzoKICAgICAgICByZXR1cm4gYXJnOwoKICAgICAgY2FzZSAnZnVuY3Rpb24nOgogICAgICAgIHJldHVybiAoMCwgX2dldEdsb2JhbEZ1bmMuZGVmYXVsdCkoYXJnKTsKCiAgICAgIGRlZmF1bHQ6CiAgICAgICAgcmV0dXJuIGFyZzsKICAgIH0KICB9KTsKfQ=="},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/json2query.js"],"names":["json2query","json","encode","arr","i","j","JSON","stringify","mapArray","push","join","args","map","arg"],"mappings":";;;;;;;;;;;;;AAKA;;AACA;;AACA;;AACA;;AARA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,UAAT,CAAoBC,IAApB,EAA0C;AAAA,MAAhBC,MAAgB,uEAAP,KAAO;;AACrD,MAAI,kBAASD,IAAT,CAAJ,EAAoB;AAChB,WAAOA,IAAP;AACH;;AAED,MAAME,GAAG,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAT,IAAcH,IAAd,EAAoB;AAChB,QAAII,CAAC,GAAGJ,IAAI,CAACG,CAAD,CAAZ;;AAEA,QAAI,iBAAQC,CAAR,CAAJ,EAAgB;AACZA,MAAAA,CAAC,GAAGC,IAAI,CAACC,SAAL,CAAeC,QAAQ,CAACH,CAAD,CAAvB,CAAJ;AACH,KAFD,MAEO,IAAI,eAAMA,CAAN,CAAJ,EAAc;AACjBA,MAAAA,CAAC,GAAG,EAAJ;AACH,KAFM,MAEA,IAAI,uBAAcA,CAAd,CAAJ,EAAsB;AACzB;AACAA,MAAAA,CAAC,GAAGC,IAAI,CAACC,SAAL,CAAeF,CAAf,CAAJ;AACH,KAHM,MAGA,IAAI,oBAAWA,CAAX,CAAJ,EAAmB;AACtBA,MAAAA,CAAC,GAAG,4BAAcA,CAAd,CAAJ;AACH,KAZe,CAchB;;;AACAF,IAAAA,GAAG,CAACM,IAAJ,WAAYL,CAAZ,cAAiBF,MAAM,GAAG,8BAAUG,CAAV,CAAH,GAAkBA,CAAzC;AACH;;AAED,SAAOF,GAAG,CAACO,IAAJ,CAAS,GAAT,CAAP;AACH;;AACD,SAASF,QAAT,CAAkBG,IAAlB,EAAwB;AACpB,SAAOA,IAAI,CAACC,GAAL,CAAS,UAAAC,GAAG,EAAI;AACnB,YAAQ,mBAAKA,GAAL,CAAR;AACI,WAAK,QAAL;AACI,eAAOA,GAAP;;AACJ,WAAK,UAAL;AACI,eAAO,4BAAcA,GAAd,CAAP;;AACJ;AACI,eAAOA,GAAP;AANR;AAQH,GATM,CAAP;AAUH","sourcesContent":["/**\n * @file 将对象转成url，但是没有添加对数组支持\n * @author wangyongqing <wangyongqing01@baidu.com>\n */\n\nimport {isString, isPlainObject, isArray, isNil, isFunction} from './is';\nimport type from './type';\nimport getGlobalFunc from './get-global-func';\nimport uriEncode from './strict-uri-encode';\n\n/**\n * 将对象转成url，但是没有添加对数组、对象支持，直接 JSON.stringify 输出\n * @function json2query\n * @param  {object} json - 待处理的json对象\n * @param  {boolean} [encode = false] - 是否 encodeURI 对象/数组字符串\n * @return {string}  str  - 处理之后的string字符串\n * @example\n * json2query({\n *       a: 1,\n *       b: 'string'\n *  });\n * //'a=1&b=string'\n * json2query({\n *       a: 1,\n *       b: 'string',\n *       c: [1, 2, 3]\n *   });\n * //'a=1&b=string&c=[1,2,3]'\n * json2query({\n *       a: 1,\n *       b: 'string',\n *       c: [1, 2, 3]\n *   }, true);\n * //'a=1&b=string&c=%5B1%2C2%2C3%5D'\n */\nexport default function json2query(json, encode = false) {\n    if (isString(json)) {\n        return json;\n    }\n\n    const arr = [];\n    for (let i in json) {\n        let j = json[i];\n\n        if (isArray(j)) {\n            j = JSON.stringify(mapArray(j));\n        } else if (isNil(j)) {\n            j = '';\n        } else if (isPlainObject(j)) {\n            // 这里不再遍历处理，对于深层的 callback 需要注意了\n            j = JSON.stringify(j);\n        } else if (isFunction(j)) {\n            j = getGlobalFunc(j);\n        }\n\n        // string/number/boolean 不处理\n        arr.push(`${i}=${encode ? uriEncode(j) : j}`);\n    }\n\n    return arr.join('&');\n}\nfunction mapArray(args) {\n    return args.map(arg => {\n        switch (type(arg)) {\n            case 'string':\n                return arg;\n            case 'function':\n                return getGlobalFunc(arg);\n            default:\n                return arg;\n        }\n    });\n}\n"]}]}