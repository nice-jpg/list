{"remainingRequest":"/Users/a2012/Desktop/list/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/a2012/Desktop/list/node_modules/split-on-first/index.js","dependencies":[{"path":"/Users/a2012/Desktop/list/node_modules/split-on-first/index.js","mtime":1696919509000},{"path":"/Users/a2012/Desktop/list/node_modules/san-hot-loader/index.js","mtime":1696919525000},{"path":"/Users/a2012/Desktop/list/node_modules/cache-loader/dist/cjs.js","mtime":1696919513000},{"path":"/Users/a2012/Desktop/list/node_modules/babel-loader/lib/index.js","mtime":1696919524000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiKTsKCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHN0cmluZywgc2VwYXJhdG9yKSB7CiAgaWYgKCEodHlwZW9mIHN0cmluZyA9PT0gJ3N0cmluZycgJiYgdHlwZW9mIHNlcGFyYXRvciA9PT0gJ3N0cmluZycpKSB7CiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCB0aGUgYXJndW1lbnRzIHRvIGJlIG9mIHR5cGUgYHN0cmluZ2AnKTsKICB9CgogIGlmIChzZXBhcmF0b3IgPT09ICcnKSB7CiAgICByZXR1cm4gW3N0cmluZ107CiAgfQoKICB2YXIgc2VwYXJhdG9ySW5kZXggPSBzdHJpbmcuaW5kZXhPZihzZXBhcmF0b3IpOwoKICBpZiAoc2VwYXJhdG9ySW5kZXggPT09IC0xKSB7CiAgICByZXR1cm4gW3N0cmluZ107CiAgfQoKICByZXR1cm4gW3N0cmluZy5zbGljZSgwLCBzZXBhcmF0b3JJbmRleCksIHN0cmluZy5zbGljZShzZXBhcmF0b3JJbmRleCArIHNlcGFyYXRvci5sZW5ndGgpXTsKfTs="},{"version":3,"sources":["/Users/a2012/Desktop/list/node_modules/split-on-first/index.js"],"names":["module","exports","string","separator","TypeError","separatorIndex","indexOf","slice","length"],"mappings":"AAAA;;;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAACC,MAAD,EAASC,SAAT,EAAuB;AACvC,MAAI,EAAE,OAAOD,MAAP,KAAkB,QAAlB,IAA8B,OAAOC,SAAP,KAAqB,QAArD,CAAJ,EAAoE;AACnE,UAAM,IAAIC,SAAJ,CAAc,+CAAd,CAAN;AACA;;AAED,MAAID,SAAS,KAAK,EAAlB,EAAsB;AACrB,WAAO,CAACD,MAAD,CAAP;AACA;;AAED,MAAMG,cAAc,GAAGH,MAAM,CAACI,OAAP,CAAeH,SAAf,CAAvB;;AAEA,MAAIE,cAAc,KAAK,CAAC,CAAxB,EAA2B;AAC1B,WAAO,CAACH,MAAD,CAAP;AACA;;AAED,SAAO,CACNA,MAAM,CAACK,KAAP,CAAa,CAAb,EAAgBF,cAAhB,CADM,EAENH,MAAM,CAACK,KAAP,CAAaF,cAAc,GAAGF,SAAS,CAACK,MAAxC,CAFM,CAAP;AAIA,CAnBD","sourcesContent":["'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n"]}]}