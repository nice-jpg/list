{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/clipboard/src/clipboard-action.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/clipboard/src/clipboard-action.js","mtime":1696575204304},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/clipboard/src/clipboard-action.js"],"names":["ClipboardAction","options","resolveOptions","initSelection","action","container","emitter","target","text","trigger","selectedText","selectFake","selectTarget","isRTL","document","documentElement","getAttribute","fakeElem","createElement","style","fontSize","border","padding","margin","position","yPosition","window","pageYOffset","scrollTop","top","setAttribute","value","createFakeElement","fakeHandlerCallback","removeFake","fakeHandler","addEventListener","appendChild","copyText","removeEventListener","removeChild","succeeded","execCommand","err","handleResult","emit","clearSelection","bind","focus","activeElement","blur","getSelection","removeAllRanges","_action","Error","undefined","nodeType","hasAttribute","_target"],"mappings":"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","sourcesContent":["import select from 'select';\n\n/**\n * Inner class which performs selection from either `text` or `target`\n * properties and then executes copy or cut operations.\n */\nclass ClipboardAction {\n  /**\n   * @param {Object} options\n   */\n  constructor(options) {\n    this.resolveOptions(options);\n    this.initSelection();\n  }\n\n  /**\n   * Defines base properties passed from constructor.\n   * @param {Object} options\n   */\n  resolveOptions(options = {}) {\n    this.action = options.action;\n    this.container = options.container;\n    this.emitter = options.emitter;\n    this.target = options.target;\n    this.text = options.text;\n    this.trigger = options.trigger;\n\n    this.selectedText = '';\n  }\n\n  /**\n   * Decides which selection strategy is going to be applied based\n   * on the existence of `text` and `target` properties.\n   */\n  initSelection() {\n    if (this.text) {\n      this.selectFake();\n    } else if (this.target) {\n      this.selectTarget();\n    }\n  }\n\n  /**\n   * Creates a fake textarea element, sets its value from `text` property,\n   */\n  createFakeElement() {\n    const isRTL = document.documentElement.getAttribute('dir') === 'rtl';\n\n    this.fakeElem = document.createElement('textarea');\n    // Prevent zooming on iOS\n    this.fakeElem.style.fontSize = '12pt';\n    // Reset box model\n    this.fakeElem.style.border = '0';\n    this.fakeElem.style.padding = '0';\n    this.fakeElem.style.margin = '0';\n    // Move element out of screen horizontally\n    this.fakeElem.style.position = 'absolute';\n    this.fakeElem.style[isRTL ? 'right' : 'left'] = '-9999px';\n    // Move element to the same position vertically\n    let yPosition = window.pageYOffset || document.documentElement.scrollTop;\n    this.fakeElem.style.top = `${yPosition}px`;\n\n    this.fakeElem.setAttribute('readonly', '');\n    this.fakeElem.value = this.text;\n\n    return this.fakeElem;\n  }\n\n  /**\n   * Get's the value of fakeElem,\n   * and makes a selection on it.\n   */\n  selectFake() {\n    const fakeElem = this.createFakeElement();\n\n    this.fakeHandlerCallback = () => this.removeFake();\n\n    this.fakeHandler =\n      this.container.addEventListener('click', this.fakeHandlerCallback) ||\n      true;\n\n    this.container.appendChild(fakeElem);\n\n    this.selectedText = select(fakeElem);\n\n    this.copyText();\n\n    this.removeFake();\n  }\n\n  /**\n   * Only removes the fake element after another click event, that way\n   * a user can hit `Ctrl+C` to copy because selection still exists.\n   */\n  removeFake() {\n    if (this.fakeHandler) {\n      this.container.removeEventListener('click', this.fakeHandlerCallback);\n      this.fakeHandler = null;\n      this.fakeHandlerCallback = null;\n    }\n\n    if (this.fakeElem) {\n      this.container.removeChild(this.fakeElem);\n      this.fakeElem = null;\n    }\n  }\n\n  /**\n   * Selects the content from element passed on `target` property.\n   */\n  selectTarget() {\n    this.selectedText = select(this.target);\n    this.copyText();\n  }\n\n  /**\n   * Executes the copy operation based on the current selection.\n   */\n  copyText() {\n    let succeeded;\n\n    try {\n      succeeded = document.execCommand(this.action);\n    } catch (err) {\n      succeeded = false;\n    }\n\n    this.handleResult(succeeded);\n  }\n\n  /**\n   * Fires an event based on the copy operation result.\n   * @param {Boolean} succeeded\n   */\n  handleResult(succeeded) {\n    this.emitter.emit(succeeded ? 'success' : 'error', {\n      action: this.action,\n      text: this.selectedText,\n      trigger: this.trigger,\n      clearSelection: this.clearSelection.bind(this),\n    });\n  }\n\n  /**\n   * Moves focus away from `target` and back to the trigger, removes current selection.\n   */\n  clearSelection() {\n    if (this.trigger) {\n      this.trigger.focus();\n    }\n    document.activeElement.blur();\n    window.getSelection().removeAllRanges();\n  }\n\n  /**\n   * Sets the `action` to be performed which can be either 'copy' or 'cut'.\n   * @param {String} action\n   */\n  set action(action = 'copy') {\n    this._action = action;\n\n    if (this._action !== 'copy' && this._action !== 'cut') {\n      throw new Error('Invalid \"action\" value, use either \"copy\" or \"cut\"');\n    }\n  }\n\n  /**\n   * Gets the `action` property.\n   * @return {String}\n   */\n  get action() {\n    return this._action;\n  }\n\n  /**\n   * Sets the `target` property using an element\n   * that will be have its content copied.\n   * @param {Element} target\n   */\n  set target(target) {\n    if (target !== undefined) {\n      if (target && typeof target === 'object' && target.nodeType === 1) {\n        if (this.action === 'copy' && target.hasAttribute('disabled')) {\n          throw new Error(\n            'Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute'\n          );\n        }\n\n        if (\n          this.action === 'cut' &&\n          (target.hasAttribute('readonly') || target.hasAttribute('disabled'))\n        ) {\n          throw new Error(\n            'Invalid \"target\" attribute. You can\\'t cut text from elements with \"readonly\" or \"disabled\" attributes'\n          );\n        }\n\n        this._target = target;\n      } else {\n        throw new Error('Invalid \"target\" value, use a valid Element');\n      }\n    }\n  }\n\n  /**\n   * Gets the `target` property.\n   * @return {String|HTMLElement}\n   */\n  get target() {\n    return this._target;\n  }\n\n  /**\n   * Destroy lifecycle.\n   */\n  destroy() {\n    this.removeFake();\n  }\n}\n\nexport default ClipboardAction;\n"]}]}