{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox-player-mini/Player.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox-player-mini/Player.js","mtime":1696919504666},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox-player-mini/Player.js"],"names":["XPlayer","config","Object","keys","length","id","Error","_defaultInit","customizedInit","options","autoplay","muted","loop","reset","_controller","_mode","mode","plugins","registryPlugins","_root","document","getElementById","video","_plugins","INNERPLUGINS","_inited","init","forEach","prop","pluginOptions","emit","key","indexOf","includes","Cls","_validate","_loadPlugin","registryPlugin","pluginName","PluginCls","api","PluginApi","pluginInstance","_defineProp","descriptor","get","bind","set","run","defineProperty","removeAllListeners","EventEmitter"],"mappings":"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","sourcesContent":["/**\n * @file Player主函数\n * @author zhangtingting12 <zhangtingting12@baidu.com>\n */\n\nimport EventEmitter from './EventEmitter';\nimport INNERPLUGINS from './plugins';\nimport PluginApi from './PluginApi';\nimport {type} from './utils';\n\nexport default class XPlayer extends EventEmitter {\n    constructor(config) {\n        if (!config \n            || type(config) !== 'object'\n            || Object.keys(config).length === 0\n            || !config.id) {\n            throw new Error('player config error');\n        }\n\n        super();\n        // 默认在创建对象时使用传入的plugin，依次执行new init create，此值为真时，代表用户需手动调用init和create函数\n        this._defaultInit = !config.customizedInit;\n\n        // 初始化默认参数\n        this.options = {\n            autoplay: false,\n            muted: false,\n            loop: false\n        };\n\n        this.reset(config);\n        this._controller = {};\n        /**\n         * player mode，默认h5方式，使用api.setMode可切换为na方式\n         * @type {string}\n         */\n        this._mode = config.mode || 'h5'; // h5 或 na\n\n        // 支持用户构造时传入插件\n        if (config.plugins) {\n            this.registryPlugins(config.plugins);\n        }\n        /**\n        * player的parent element\n        * @type {Element}\n        */\n        this._root = document.getElementById(config.id);\n\n        /**\n        * 播放器实例\n        * @type {Object}\n        */\n        this.video = null;\n\n        /**\n         * Plugin's dictionary.\n         * @type {Object}\n         */\n        this._plugins = INNERPLUGINS || {};\n\n        // 已经初始化\n        this._inited = false;\n\n        if (this._defaultInit) {\n            this.init();\n        }\n    }\n    /**\n    * 重置实例\n    */\n    reset(config) {\n        /**\n         * video options\n         * @type {boolean}\n         */\n        // 复制播放器的配置\n        Object.keys(config).forEach(prop => {\n            if (prop !== 'pluginOptions') {\n                this.options[prop] = config[prop];\n            }\n        });\n\n        // 保存用户plugin配置\n        this.pluginOptions = config.pluginOptions || this.pluginOptions || {};\n        // 初始化完成reset事件触发\n        this._inited && this.emit('reset', config);\n    }\n    /**\n    * 校验插件名称合法\n    * @private\n    * @param {string} key 插件关键字，作为播放器实例的api字典内的关键字\n    * @return {Boolean}\n    */\n    _validate(key) {\n        // 内部属性不可覆盖\n        if (key.indexOf('_') === 0) {\n            return false;\n        }\n        // 内部方法不可覆盖\n        if (['on', 'once', 'emit', 'off', 'init', 'destroy', 'reset',\n            'registryPlugin', 'registryPlugins', 'isSupportCode'].includes(key)) {\n            return this[key];\n        }\n        return true;\n    }\n    /**\n    * 注册一个插件，当实例创建时会被加载，可以覆盖默认插件\n    * @param {string} key 插件关键字，作为播放器实例的api字典内的关键字\n    * @param {Function} Cls 插件类\n    */\n    registryPlugin(key, Cls) {\n        if (!this._validate(key)) {\n            // console.log('请重新定义');\n            return;\n        }\n        if (this._inited) {\n            return this._loadPlugin(key, Cls);\n        }\n        if (!this._plugins) {\n            this._plugins = {};\n        }\n        this._plugins[key] = Cls;\n    }\n\n    /**\n    * 注册一组插件，当实例创建时会被加载，可以覆盖默认插件\n    * @param {object} plugins 插件组 {key1: Plugin1, key2: Plugin2}\n    */\n    registryPlugins(plugins = {}, mode = 'h5') {\n        this._mode = mode;\n        Object.keys(plugins).forEach(key => this.registryPlugin(key, plugins[key]));\n    }\n\n    /**\n    * 挂载播放器实例api\n    * @private\n    */\n    _loadPlugin(pluginName, PluginCls) {\n        // 插件挂载\n        let api = new PluginApi(pluginName, this);\n        let pluginInstance = new PluginCls(api, this.pluginOptions[pluginName]);\n        this._defineProp(pluginName, pluginInstance);\n    }\n    /**\n    * 定义播放器plugin对应的方法\n    * key是内部属性名称，pluginInstance是内部属性实现方法，在plugins目录下\n    * @private\n    */\n    _defineProp(key, pluginInstance) {\n        let descriptor = {};\n        if (type(pluginInstance.get) === 'function') {\n            descriptor.get = pluginInstance.get.bind(pluginInstance);\n            if (type(pluginInstance.set) === 'function') {\n                descriptor.set = pluginInstance.set.bind(pluginInstance);\n            }\n        }\n        else if (type(pluginInstance.run) === 'function') {\n            descriptor = {\n                get() {\n                    return pluginInstance.run.bind(pluginInstance);\n                }\n            };\n        }\n        Object.defineProperty(this, key, descriptor);\n    }\n\n    /**\n    * 播放器内部方法,插件不可覆盖此方法，当插件需要在实例化player时需要完成一些操作\n    * @inner\n    */\n    init() {\n        // 仅初始化一次\n        if (this._inited) {\n            return;\n        }\n        this._inited = true;\n        // 初始化插件\n        Object.keys(this._plugins).forEach(pluginName => {\n            const Cls = this._plugins[pluginName];\n            // 插件挂载\n            this._loadPlugin(pluginName, Cls);\n        });\n        // init finished\n        this.emit('init');\n    }\n    /**\n    * 销毁实例\n    */\n    destroy() {\n        if (!this._root) {\n            return;\n        }\n        this.emit('destroy'); // 触发destroy通知各个插件卸载事件等\n        // 移除所有事件\n        this.removeAllListeners();\n        this._root = null;\n    }\n}\n\n"]}]}