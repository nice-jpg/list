{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/substr.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/substr.js","mtime":1696919504571},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5jb25zdHJ1Y3RvciIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0Iik7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuZGVmYXVsdCA9IGV4cG9ydHMuc3RyMkFycmF5ID0gdm9pZCAwOwoKLyoqCiAqIEBmaWxlIOaIquWPluaMh+WumumVv+W6pueahOWtl+espuS4su+8jOWwhmVtb2pp5ZKM6Ieq5a6a5LmJ55qEdWJi6KGo5oOF6K+G5Yir5Li6MeS4quWtl+espgogKiBAYXV0aG9yIGppbnpoYW4gPGppbnpoYW5AYmFpZHUuY29tPgogKgogKiDlrZfnrKbkuLLnvJbnoIHnm7jlhbPmraPliJnooajovr7lvI/vvJpyZWZlcjogaHR0cHM6Ly9naXRodWIuY29tL3Fsb3Zlci9sb2Fkc2gvYmxvYi8zOWE3NWM0NTQwNDdjNTFjMzI4ZTYwODc1NmQ1MzU3OTFlNmNkZDg4L2xvYWRzaC00LjE3LjUvbG9hZHNoLTQuMTcuNS5qcwogKiAqKi8KdmFyIHJzQXN0cmFsUmFuZ2UgPSAiXFx1ZDgwMC1cXHVkZmZmIjsKdmFyIHJzWldKID0gIlxcdTIwMGQiOwp2YXIgcnNWYXJSYW5nZSA9ICJcXHVmZTBlXFx1ZmUwZiI7CnZhciByc0NvbWJvTWFya3NSYW5nZSA9ICJcXHUwMzAwLVxcdTAzNmYiOwp2YXIgcmVDb21ib0hhbGZNYXJrc1JhbmdlID0gIlxcdWZlMjAtXFx1ZmUyZiI7CnZhciByc0NvbWJvU3ltYm9sc1JhbmdlID0gIlxcdTIwZDAtXFx1MjBmZiI7CnZhciByc0NvbWJvUmFuZ2UgPSByc0NvbWJvTWFya3NSYW5nZSArIHJlQ29tYm9IYWxmTWFya3NSYW5nZSArIHJzQ29tYm9TeW1ib2xzUmFuZ2U7CnZhciByZUhhc1VuaWNvZGUgPSBuZXcgUmVnRXhwKCdbJyArIHJzWldKICsgcnNBc3RyYWxSYW5nZSArIHJzQ29tYm9SYW5nZSArIHJzVmFyUmFuZ2UgKyAnXScpOwp2YXIgcnNGaXR6ID0gIlxcdWQ4M2NbXFx1ZGZmYi1cXHVkZmZmXSI7CnZhciByc09wdFZhciA9ICdbJyArIHJzVmFyUmFuZ2UgKyAnXT8nOwp2YXIgcnNDb21ibyA9ICdbJyArIHJzQ29tYm9SYW5nZSArICddJzsKdmFyIHJzTW9kaWZpZXIgPSAnKD86JyArIHJzQ29tYm8gKyAnfCcgKyByc0ZpdHogKyAnKSc7CnZhciByZU9wdE1vZCA9IHJzTW9kaWZpZXIgKyAnPyc7CnZhciByc0FzdHJhbCA9ICdbJyArIHJzQXN0cmFsUmFuZ2UgKyAnXSc7CnZhciByc05vbkFzdHJhbCA9ICdbXicgKyByc0FzdHJhbFJhbmdlICsgJ10nOwp2YXIgcnNSZWdpb25hbCA9ICIoPzpcXHVkODNjW1xcdWRkZTYtXFx1ZGRmZl0pezJ9IjsKdmFyIHJzU3VyclBhaXIgPSAiW1xcdWQ4MDAtXFx1ZGJmZl1bXFx1ZGMwMC1cXHVkZmZmXSI7CnZhciByc09wdEpvaW4gPSAnKD86JyArIHJzWldKICsgJyg/OicgKyBbcnNOb25Bc3RyYWwsIHJzUmVnaW9uYWwsIHJzU3VyclBhaXJdLmpvaW4oJ3wnKSArICcpJyArIHJzT3B0VmFyICsgcmVPcHRNb2QgKyAnKSonOwp2YXIgcnNTZXEgPSByc09wdFZhciArIHJlT3B0TW9kICsgcnNPcHRKb2luOwp2YXIgcnNTeW1ib2wgPSAnKD86JyArIFtyc05vbkFzdHJhbCArIHJzQ29tYm8gKyAnPycsIHJzQ29tYm8sIHJzUmVnaW9uYWwsIHJzU3VyclBhaXIsIHJzQXN0cmFsXS5qb2luKCd8JykgKyAnKSc7CnZhciByc1VuaWNvZGUgPSByc0ZpdHogKyAnKD89JyArIHJzRml0eiArICcpfCcgKyByc1N5bWJvbCArIHJzU2VxOwp2YXIgcmVVbmljb2RlID0gbmV3IFJlZ0V4cChyc1VuaWNvZGUsICdnJyk7Cgp2YXIgaGFzVW5pY29kZSA9IGZ1bmN0aW9uIGhhc1VuaWNvZGUodmFsKSB7CiAgcmV0dXJuIHJlSGFzVW5pY29kZS50ZXN0KHZhbCk7Cn07Cgp2YXIgdW5pY29kZVRvQXJyYXkgPSBmdW5jdGlvbiB1bmljb2RlVG9BcnJheSh2YWwpIHsKICByZXR1cm4gdmFsLm1hdGNoKHJlVW5pY29kZSkgfHwgW107Cn07Cgp2YXIgYXNjaWlUb0FycmF5ID0gZnVuY3Rpb24gYXNjaWlUb0FycmF5KHZhbCkgewogIHJldHVybiB2YWwuc3BsaXQoJycpOwp9OwovKgoqIOWwhuWtl+espui9rOaNouS4uuaVsOe7hO+8jOaWueS+v+i/m+ihjOaIquWPlgoqCiogZW1vamnooajmg4VjYXNl56S65L6L77yaCiogWyJb5ruR56i9XSIsICJb5o2C6IS4XSIsICJb6LWe5ZCMXSIsICJb5aSn56yRXSIsICJb5bem5o2C6IS4XSIsIC4uLl0KKgoqIEBwYXJhbSB7c3RyaW5nfSAgIHZhbDog55uu5qCH5a2X56ym5LiyCiogQHBhcmFtIHtPYmplY3R9ICAgb3B0aW9uIOWPr+mAiemFjee9rumhuQoqIEBwYXJhbSB7Ym9vbGVhbn0gIG9wdGlvbi5oYXNFbW9qaSDmmK/lkKbljIXlkKtoYXNFbW9qae+8jOm7mOiupDpmYWxzZQoqIEBwYXJhbSB7bnVtYmVyfSAgIG9wdGlvbi5lbW9qaU1heExlbnRoIOWNleS4qmVtb2pp5paH5pys55qE5pyA5aSn6ZW/5bqm77yM6buY6K6k77yaOAoqIEBwYXJhbSB7QXJyYXl9ICAgIG9wdGlvbi5lbW9qaURhdGEgZW1vamnnmoTor6bnu4bkv6Hmga/vvIzlpoLmnpzlrZjlnKjvvIzliJnlv73nlaVlbW9qaU1heExlbnRoCiogKi8KCgp2YXIgc3RyMkFycmF5ID0gZnVuY3Rpb24gc3RyMkFycmF5KHZhbCkgewogIHZhciBvcHRpb24gPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHsKICAgIGhhc0Vtb2ppOiBmYWxzZSwKICAgIGVtb2ppTWF4TGVudGg6IDgsCiAgICBlbW9qaURhdGE6IFtdCiAgfTsKCiAgaWYgKCFvcHRpb24uaGFzRW1vamkpIHsKICAgIHJldHVybiBoYXNVbmljb2RlKHZhbCkgPyB1bmljb2RlVG9BcnJheSh2YWwpIDogYXNjaWlUb0FycmF5KHZhbCk7CiAgfQoKICB2YXIgcnNFbW9qaSA9IGZ1bmN0aW9uIChvcHRpb24pIHsKICAgIHJldHVybiBvcHRpb24uZW1vamlEYXRhICYmIG9wdGlvbi5lbW9qaURhdGEubGVuZ3RoID8gb3B0aW9uLmVtb2ppRGF0YS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgcmV0dXJuIGl0ZW0ucmVwbGFjZSgnWycsICdcXFsnKS5yZXBsYWNlKCddJywgJ1xcXScpOwogICAgfSkuam9pbignfCcpIDogJ1xcWy57MSwnICsgKG9wdGlvbi5lbW9qaU1heExlbnRoIC0gMikgKyAnfT9cXF0nOwogIH0ob3B0aW9uKTsKCiAgdmFyIHJlVWJiID0gbmV3IFJlZ0V4cChyc0Vtb2ppICsgJ3wnICsgcnNVbmljb2RlLCAnZycpOwogIHJldHVybiB2YWwubWF0Y2gocmVVYmIpIHx8IFtdOwp9OwovKioKICoKICog5a2X56ym5Liy6KOB5Ymq77yM5Li65LqG6IO95pu05pa55L6/5L2/55So77yM6YeH55So5omT5pWj6L+Q566X56ymCiAqCiAqIEBwYXJhbXMge3N0cmluZ30gc3RyIOebruagh+Wtl+espuS4sgogKiBAcGFyYW1zIHtudW1iZXJ9IHN0YXJ0IOassuaIquWPlueahOWtl+espuS4sgogKiBAcGFyYW1zIHtudW1iZXJ9IG9wdGlvbi5sZW5ndGgg5qyy5oiq5Y+W55qE5a2X56ym5Liy6ZW/5bqm77yM5Y+v6YCJCiAqIEBwYXJhbXMge09iamVjdH0gb3B0aW9uLm9wdCAgICDlj6/pgInnmoTphY3nva7pobkKICogKi8KCgpleHBvcnRzLnN0cjJBcnJheSA9IHN0cjJBcnJheTsKCnZhciBzdWJzdHIgPSBmdW5jdGlvbiBzdWJzdHIoc3RyLCBzdGFydCkgewogIHZhciBoYXNMZW5ndGggPSB0eXBlb2YgKGFyZ3VtZW50cy5sZW5ndGggPD0gMiA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1syXSkgPT09ICdudW1iZXInOwogIHZhciBkYXRhID0gaGFzTGVuZ3RoID8gc3RyMkFycmF5KHN0ciwgYXJndW1lbnRzLmxlbmd0aCA8PSAzID8gdW5kZWZpbmVkIDogYXJndW1lbnRzWzNdKSA6IHN0cjJBcnJheShzdHIsIGFyZ3VtZW50cy5sZW5ndGggPD0gMiA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1syXSk7CiAgdmFyIHJldCA9IGhhc0xlbmd0aCA/IGRhdGEuc3BsaWNlKHN0YXJ0LCBhcmd1bWVudHMubGVuZ3RoIDw9IDIgPyB1bmRlZmluZWQgOiBhcmd1bWVudHNbMl0pIDogZGF0YS5zcGxpY2Uoc3RhcnQpOwogIHJldHVybiByZXQuam9pbignJyk7Cn07Cgp2YXIgX2RlZmF1bHQgPSBzdWJzdHI7CmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0Ow=="},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox/substr.js"],"names":["rsAstralRange","rsZWJ","rsVarRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","reHasUnicode","RegExp","rsFitz","rsOptVar","rsCombo","rsModifier","reOptMod","rsAstral","rsNonAstral","rsRegional","rsSurrPair","rsOptJoin","join","rsSeq","rsSymbol","rsUnicode","reUnicode","hasUnicode","val","test","unicodeToArray","match","asciiToArray","split","str2Array","option","hasEmoji","emojiMaxLenth","emojiData","rsEmoji","length","map","item","replace","reUbb","substr","str","start","hasLength","data","ret","splice"],"mappings":"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","sourcesContent":["/**\n * @file 截取指定长度的字符串，将emoji和自定义的ubb表情识别为1个字符\n * @author jinzhan <jinzhan@baidu.com>\n *\n * 字符串编码相关正则表达式：refer: https://github.com/qlover/loadsh/blob/39a75c454047c51c328e608756d535791e6cdd88/loadsh-4.17.5/loadsh-4.17.5.js\n * **/\n\nconst rsAstralRange = '\\\\ud800-\\\\udfff';\nconst rsZWJ = '\\\\u200d';\nconst rsVarRange = '\\\\ufe0e\\\\ufe0f';\nconst rsComboMarksRange = '\\\\u0300-\\\\u036f';\nconst reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f';\nconst rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff';\nconst rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\nconst reHasUnicode = new RegExp('[' + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + ']');\nconst rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';\nconst rsOptVar = '[' + rsVarRange + ']?';\nconst rsCombo = '[' + rsComboRange + ']';\nconst rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';\nconst reOptMod = rsModifier + '?';\nconst rsAstral = '[' + rsAstralRange + ']';\nconst rsNonAstral = '[^' + rsAstralRange + ']';\nconst rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\nconst rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\nconst rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';\nconst rsSeq = rsOptVar + reOptMod + rsOptJoin;\nconst rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\nconst rsUnicode = rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq;\nconst reUnicode = new RegExp(rsUnicode, 'g');\nconst hasUnicode = val => reHasUnicode.test(val);\nconst unicodeToArray = val => val.match(reUnicode) || [];\nconst asciiToArray = val => val.split('');\n\n/*\n* 将字符转换为数组，方便进行截取\n*\n* emoji表情case示例：\n* [\"[滑稽]\", \"[捂脸]\", \"[赞同]\", \"[大笑]\", \"[左捂脸]\", ...]\n*\n* @param {string}   val: 目标字符串\n* @param {Object}   option 可选配置项\n* @param {boolean}  option.hasEmoji 是否包含hasEmoji，默认:false\n* @param {number}   option.emojiMaxLenth 单个emoji文本的最大长度，默认：8\n* @param {Array}    option.emojiData emoji的详细信息，如果存在，则忽略emojiMaxLenth\n* */\nexport const str2Array = (val, option = {hasEmoji: false, emojiMaxLenth: 8, emojiData: []}) => {\n    if (!option.hasEmoji) {\n        return hasUnicode(val) ? unicodeToArray(val) : asciiToArray(val);\n    }\n\n    const rsEmoji = (option => {\n        return option.emojiData && option.emojiData.length ? option.emojiData\n            .map(item => item.replace('[', '\\\\[').replace(']', '\\\\]'))\n            .join('|') : '\\\\[.{1,' + (option.emojiMaxLenth - 2 ) + '}?\\\\]';\n    })(option);\n\n    const reUbb = new RegExp(rsEmoji + '|' + rsUnicode, 'g');\n    return val.match(reUbb) || [];\n};\n\n/**\n *\n * 字符串裁剪，为了能更方便使用，采用打散运算符\n *\n * @params {string} str 目标字符串\n * @params {number} start 欲截取的字符串\n * @params {number} option.length 欲截取的字符串长度，可选\n * @params {Object} option.opt    可选的配置项\n * */\nconst substr = (str, start, ...option) => {\n    const hasLength = typeof option[0] === 'number';\n    const data = hasLength ? str2Array(str, option[1]) : str2Array(str, option[0]);\n    const ret = hasLength ? data.splice(start, option[0]) : data.splice(start);\n    return ret.join('');\n};\n\nexport default substr;"]}]}