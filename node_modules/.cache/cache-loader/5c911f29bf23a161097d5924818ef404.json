{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-san/es/wuji-smallapp-container/style/index.less","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-san/es/wuji-smallapp-container/style/index.less","mtime":1696919503878},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-san/es/style/index.less","mtime":1696919503878},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-san/es/style/variables.less","mtime":1696919503878},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-san/es/style/mixins.less","mtime":1696919503878},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/variables.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/color/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/dimension/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/font/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/line/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/mask/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/radius/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/shadow/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/spacing/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/text/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/plugin-less.js","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/variables.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/color/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/plugin-less.js","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/variables.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/dimension/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/plugin-less.js","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/variables.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/spacing/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/font/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/plugin-less.js","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/variables.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/color/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/radius/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/line/line.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/line/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/mask/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/plugin-less.js","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/variables.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/radius/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/plugin-less.js","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/variables.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/color/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/shadow/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/plugin-less.js","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/variables.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/spacing/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/variables.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/color/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/font/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/text/text.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/text/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/plugin-less.js","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/less-loader/dist/stringifyLoader.js","mtime":1696575121311},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/plugin-less.js","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/less-loader/dist/stringifyLoader.js","mtime":1696575121311},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/plugin-less.js","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/less-loader/dist/stringifyLoader.js","mtime":1696575121311},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/plugin-less.js","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/less-loader/dist/stringifyLoader.js","mtime":1696575121311},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/plugin-less.js","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/less-loader/dist/stringifyLoader.js","mtime":1696575121311},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/plugin-less.js","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/less-loader/dist/stringifyLoader.js","mtime":1696575121311},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/plugin-less.js","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/less-loader/dist/stringifyLoader.js","mtime":1696575121311},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-san/es/style/index.less","mtime":1696919503878},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-san/es/style/variables.less","mtime":1696919503878},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-san/es/style/mixins.less","mtime":1696919503878},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/variables.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/color/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/dimension/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/font/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/line/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/mask/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/radius/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/shadow/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/spacing/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/text/index.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/color/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/dimension/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/font/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/line/line.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/line/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/mask/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/radius/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/shadow/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/spacing/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/text/text.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/text/mixins.less","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-uikit/src/plugin-less.js","mtime":1696575203590},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/postcss.config.js","mtime":1695633995631},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/css-loader/dist/cjs.js","mtime":1696919524705},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/postcss-loader/src/index.js","mtime":1696919524980},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/less-loader/dist/cjs.js","mtime":1696575121311}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vLi4vY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIikodHJ1ZSk7Ci8vIE1vZHVsZQpleHBvcnRzLnB1c2goW21vZHVsZS5pZCwgIi8qKlxuICogQGZpbGUg57uE5Lu25qC35byPIOWwj+eoi+W6j1xuICogQGF1dGhvciByYW93ZW5qdWFuIDxyYW93ZW5qdWFuQGJhaWR1LmNvbT5cbiAqL1xuLnctc21hbGxhcHAtY29udGFpbmVyIHtcbiAgcGFkZGluZy10b3A6IDAuMTVyZW07XG4gIHBhZGRpbmctYm90dG9tOiAwLjE1cmVtO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5pbWctdHh0LXdyYXBwZXIge1xuICBwYWRkaW5nLWxlZnQ6IDAuMTNyZW07XG4gIHBhZGRpbmctcmlnaHQ6IDAuMTNyZW07XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogZmxleDtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAuaW1nLWxlZnQge1xuICBtYXJnaW4tcmlnaHQ6IDAuMDhyZW07XG4gIC13ZWJraXQtZmxleC1zaHJpbms6IDA7XG4gICAgICAgICAgZmxleC1zaHJpbms6IDA7XG4gIHdpZHRoOiAxLjIxMzMzcmVtO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC50eHQtcmlnaHQge1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtd2Via2l0LWZsZXgtZ3JvdzogMTtcbiAgICAgICAgICBmbGV4LWdyb3c6IDE7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLnctdGl0bGUge1xuICBtYXJnaW4tYm90dG9tOiAtMC4wNHJlbTtcbiAgbWFyZ2luLXRvcDogLTAuMDVyZW07XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLnctd2lkZ2V0IHtcbiAgbWFyZ2luLXRvcDogMC4wOXJlbTtcbiAgbWFyZ2luLWxlZnQ6IDAuMTNyZW07XG4gIG1hcmdpbi1yaWdodDogMC4xM3JlbTtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAudGFiQ29udGFpbmVyICsgLnctd2lkZ2V0IC53LXdpZGdldC1pdGVtcyB7XG4gIG1hcmdpbi10b3A6IC0wLjA2cmVtO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5kZXRhaWxDb250YWluZXIge1xuICAtd2Via2l0LWZsZXg6IDE7XG4gICAgICAgICAgZmxleDogMTtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAuZ3JpZENvbnRhaW5lciB7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5ncmlkQ29udGFpbmVyIC5saXN0MmQge1xuICAtd2Via2l0LWZsZXgtZ3JvdzogMTtcbiAgICAgICAgICBmbGV4LWdyb3c6IDE7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsMSxcbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWwyIHtcbiAgbWFyZ2luLXRvcDogMC4wOXJlbTtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWwxIC5vbmVMaW5lLFxuLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbDIgLm9uZUxpbmUsXG4udy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsMSAudHdvTGluZSxcbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWwyIC50d29MaW5lIHtcbiAgZm9udC1zaXplOiAwLjE0cmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMC4ycmVtO1xuICBtYXJnaW4tdG9wOiAtMC4wM3JlbTtcbiAgbWFyZ2luLWJvdHRvbTogLTAuMDNyZW07XG4gIGNvbG9yOiByZ2JhKDEzMywgMTMzLCAxMzMsIDEpO1xufVxuLmRhcmttb2RlIC53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWwxIC5vbmVMaW5lLFxuLmRhcmttb2RlIC53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWwyIC5vbmVMaW5lLFxuLmRhcmttb2RlIC53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWwxIC50d29MaW5lLFxuLmRhcmttb2RlIC53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWwyIC50d29MaW5lIHtcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWwzLFxuLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbDQge1xuICBtYXJnaW4tdG9wOiAwLjA5cmVtO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbDMgLm9uZUxpbmUsXG4udy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsNCAub25lTGluZSxcbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWwzIC50d29MaW5lLFxuLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbDQgLnR3b0xpbmUsXG4udy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsMyAudHJpTGluZSxcbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWw0IC50cmlMaW5lIHtcbiAgZm9udC1zaXplOiAwLjEycmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMC4xOHJlbTtcbiAgbWFyZ2luLXRvcDogLTAuMDNyZW07XG4gIG1hcmdpbi1ib3R0b206IC0wLjAzcmVtO1xuICBjb2xvcjogcmdiYSgxMzMsIDEzMywgMTMzLCAxKTtcbn1cbi5kYXJrbW9kZSAudy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsMyAub25lTGluZSxcbi5kYXJrbW9kZSAudy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsNCAub25lTGluZSxcbi5kYXJrbW9kZSAudy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsMyAudHdvTGluZSxcbi5kYXJrbW9kZSAudy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsNCAudHdvTGluZSxcbi5kYXJrbW9kZSAudy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsMyAudHJpTGluZSxcbi5kYXJrbW9kZSAudy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsNCAudHJpTGluZSB7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsMyB7XG4gIC13ZWJraXQtZmxleDogMTtcbiAgICAgICAgICBmbGV4OiAxO1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtd2Via2l0LWp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWwzIC5wcmljZVRleHQge1xuICBmb250LXNpemU6IDAuMTlyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAwLjIxcmVtO1xuICBtYXJnaW4tdG9wOiAtMC4wMXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogLTAuMDFyZW07XG4gIGNvbG9yOiByZ2JhKDI1NSwgMTAyLCAwLCAxKTtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWwzIC5vbmVMaW5lOmxhc3QtY2hpbGQsXG4udy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsMyAudHdvTGluZTpsYXN0LWNoaWxkIHtcbiAgLXdlYmtpdC1mbGV4OiAxO1xuICAgICAgICAgIGZsZXg6IDE7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsMyAudy1jb2wge1xuICAtd2Via2l0LWZsZXgtc2hyaW5rOiAwO1xuICAgICAgICAgIGZsZXgtc2hyaW5rOiAwO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5pbWdFeHRDb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5saW5lV3JhcCxcbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGluZUluTGlzdCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLmxpbmVJbkxpc3Qge1xuICBtYXJnaW4tdG9wOiAwLjA2cmVtO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5saW5lSW5MaXN0OmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAuaW1nSWNvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDAuMTRyZW07XG4gIG1pbi13aWR0aDogMC4xNHJlbTtcbiAgbWF4LXdpZHRoOiAwLjgzcmVtO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbEJ1dHRvbiB7XG4gIC13ZWJraXQtZmxleC1zaHJpbms6IDA7XG4gICAgICAgICAgZmxleC1zaHJpbms6IDA7XG4gIHdpZHRoOiAwLjcxcmVtO1xuICBoZWlnaHQ6IDAuMjhyZW07XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLmJ1dHRvbkJ1eSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5wcm9ncmVzcyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMC4wNnJlbTtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAucHJvZ3Jlc3NDb250YWluZXIge1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAxKTtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAucHJvZ3Jlc3MgLmxpbmUsXG4udy1zbWFsbGFwcC1jb250YWluZXIgLnByb2dyZXNzIC50cmFjayB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBmaWxsOiBjdXJyZW50Q29sb3I7XG4gIGJvcmRlci1yYWRpdXM6IDNyZW07XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLnByb2dyZXNzIC5saW5lIHtcbiAgd2lkdGg6IDA7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLnByb2dyZXNzIC50cmFjayB7XG4gIG9wYWNpdHk6IDAuMjtcbiAgd2lkdGg6IDEwMCU7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLnByb2dyZXNzIC50ZXh0IHtcbiAgbWFyZ2luLWxlZnQ6IDAuMDZyZW07XG4gIC13ZWJraXQtZmxleC1zaHJpbms6IDA7XG4gICAgICAgICAgZmxleC1zaHJpbms6IDA7XG4gIGNvbG9yOiBjdXJyZW50Q29sb3I7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLmltZ0ljb24sXG4udy1zbWFsbGFwcC1jb250YWluZXIgLml0ZW1HYXAge1xuICBtYXJnaW4tcmlnaHQ6IDAuMDVyZW07XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLnRhZ1dyYXAge1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtZmxleC13cmFwOiB3cmFwO1xuICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAudGFnSXRlbSB7XG4gIHBhZGRpbmctbGVmdDogMC4wNHJlbTtcbiAgcGFkZGluZy1yaWdodDogMC4wNHJlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgYm9yZGVyLXJhZGl1czogM3JlbTtcbiAgaGVpZ2h0OiAwLjE2cmVtO1xuICBmb250LXNpemU6IDAuMXJlbTtcbiAgbGluZS1oZWlnaHQ6IDAuMTZyZW07XG4gIGNvbG9yOiAjNjY2O1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC50YWdJdGVtOmFmdGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IDAgMDtcbiAgICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiAwIDA7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMwMDA7XG59XG5AbWVkaWEgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMS4yKSwgKC13ZWJraXQtbWF4LWRldmljZS1waXhlbC1yYXRpbzogMS41KSwgKG1pbi1yZXNvbHV0aW9uOiAxLjJkcHB4KSwgKG1heC1yZXNvbHV0aW9uOiAxLjVkcHB4KSB7XG4gIC53LXNtYWxsYXBwLWNvbnRhaW5lciAudGFnSXRlbTphZnRlciB7XG4gICAgd2lkdGg6IDE1MCU7XG4gICAgaGVpZ2h0OiAxNTAlO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgwLjY2NjY2NjY3KTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC42NjY2NjY2Nyk7XG4gIH1cbn1cbkBtZWRpYSAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAyZHBweCkge1xuICAudy1zbWFsbGFwcC1jb250YWluZXIgLnRhZ0l0ZW06YWZ0ZXIge1xuICAgIHdpZHRoOiAyMDAlO1xuICAgIGhlaWdodDogMjAwJTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMC41KTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC41KTtcbiAgfVxufVxuQG1lZGlhICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpLCAobWluLXJlc29sdXRpb246IDNkcHB4KSB7XG4gIC53LXNtYWxsYXBwLWNvbnRhaW5lciAudGFnSXRlbTphZnRlciB7XG4gICAgd2lkdGg6IDMwMCU7XG4gICAgaGVpZ2h0OiAzMDAlO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgwLjMzMzMzMzMzKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC4zMzMzMzMzMyk7XG4gIH1cbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAudGFnSXRlbTphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xufVxuQG1lZGlhICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDEuMiksICgtd2Via2l0LW1heC1kZXZpY2UtcGl4ZWwtcmF0aW86IDEuNSksIChtaW4tcmVzb2x1dGlvbjogMS4yZHBweCksIChtYXgtcmVzb2x1dGlvbjogMS41ZHBweCkge1xuICAudy1zbWFsbGFwcC1jb250YWluZXIgLnRhZ0l0ZW06YWZ0ZXIge1xuICAgIGJvcmRlci1yYWRpdXM6IDQuNXJlbTtcbiAgfVxufVxuQG1lZGlhICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDJkcHB4KSB7XG4gIC53LXNtYWxsYXBwLWNvbnRhaW5lciAudGFnSXRlbTphZnRlciB7XG4gICAgYm9yZGVyLXJhZGl1czogNnJlbTtcbiAgfVxufVxuQG1lZGlhICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpLCAobWluLXJlc29sdXRpb246IDNkcHB4KSB7XG4gIC53LXNtYWxsYXBwLWNvbnRhaW5lciAudGFnSXRlbTphZnRlciB7XG4gICAgYm9yZGVyLXJhZGl1czogOXJlbTtcbiAgfVxufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC50YWdJdGVtOjphZnRlciB7XG4gIGJvcmRlci1jb2xvcjogY3VycmVudENvbG9yO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5vbmVMaW5lIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAtd2Via2l0LWxpbmUtY2xhbXA6IDE7XG4gIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAudHdvTGluZSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLnRyaUxpbmUge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIC13ZWJraXQtbGluZS1jbGFtcDogMztcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgd29yZC1icmVhazogYnJlYWstYWxsO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC52bGluZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIG1hcmdpbi1sZWZ0OiAwLjA2cmVtO1xuICBtYXJnaW4tcmlnaHQ6IDAuMDZyZW07XG4gIGhlaWdodDogMC4xMXJlbTtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAudmxpbmU6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IDAgMDtcbiAgICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiAwIDA7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQ7XG4gIGJvcmRlci1sZWZ0LWNvbG9yOiByZ2JhKDgyLCA4MiwgODIsIDEpO1xufVxuLmRhcmttb2RlIC53LXNtYWxsYXBwLWNvbnRhaW5lciAudmxpbmU6YWZ0ZXIge1xuICBib3JkZXItbGVmdC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjYpO1xufVxuQG1lZGlhICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDEuMiksICgtd2Via2l0LW1heC1kZXZpY2UtcGl4ZWwtcmF0aW86IDEuNSksIChtaW4tcmVzb2x1dGlvbjogMS4yZHBweCksIChtYXgtcmVzb2x1dGlvbjogMS41ZHBweCkge1xuICAudy1zbWFsbGFwcC1jb250YWluZXIgLnZsaW5lOmFmdGVyIHtcbiAgICB3aWR0aDogMTUwJTtcbiAgICBoZWlnaHQ6IDE1MCU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDAuNjY2NjY2NjcpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjY2NjY2NjY3KTtcbiAgfVxufVxuQG1lZGlhICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDJkcHB4KSB7XG4gIC53LXNtYWxsYXBwLWNvbnRhaW5lciAudmxpbmU6YWZ0ZXIge1xuICAgIHdpZHRoOiAyMDAlO1xuICAgIGhlaWdodDogMjAwJTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMC41KTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC41KTtcbiAgfVxufVxuQG1lZGlhICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpLCAobWluLXJlc29sdXRpb246IDNkcHB4KSB7XG4gIC53LXNtYWxsYXBwLWNvbnRhaW5lciAudmxpbmU6YWZ0ZXIge1xuICAgIHdpZHRoOiAzMDAlO1xuICAgIGhlaWdodDogMzAwJTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMC4zMzMzMzMzMyk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuMzMzMzMzMzMpO1xuICB9XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLnRhYkNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi10b3A6IDAuMTVyZW07XG4gIG1hcmdpbi1ib3R0b206IDAuMTVyZW07XG4gIG1hcmdpbi1sZWZ0OiAwLjEzcmVtO1xuICBtYXJnaW4tcmlnaHQ6IDAuMTNyZW07XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLnRhYkNvbnRhaW5lciAudGFiSXRlbSB7XG4gIG1hcmdpbi1yaWdodDogMC4wNnJlbTtcbiAgYm9yZGVyLXJhZGl1czogMC4wOXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNDUsIDI0NiwgMjQ5LCAxKTtcbiAgY29sb3I6IHJnYmEoMzEsIDMxLCAzMSwgMSk7XG4gIGZvbnQtc2l6ZTogMC4xNHJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIC13ZWJraXQtZmxleDogMTtcbiAgICAgICAgICBmbGV4OiAxO1xuICBoZWlnaHQ6IDAuMjhyZW07XG4gIGxpbmUtaGVpZ2h0OiAwLjI4cmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4uZGFya21vZGUgLnctc21hbGxhcHAtY29udGFpbmVyIC50YWJDb250YWluZXIgLnRhYkl0ZW0ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDM0LCAzNCwgMzQsIDEpO1xufVxuLmRhcmttb2RlIC53LXNtYWxsYXBwLWNvbnRhaW5lciAudGFiQ29udGFpbmVyIC50YWJJdGVtIHtcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAudGFiQ29udGFpbmVyIC50YWJJdGVtOmFjdGl2ZSB7XG4gIG9wYWNpdHk6IDAuMjtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAudGFiQ29udGFpbmVyIC50YWJJdGVtOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tcmlnaHQ6IDA7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLmNvdXBvblRhZyxcbi53LXNtYWxsYXBwLWNvbnRhaW5lciAudGFnSXRlbSxcbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWwzIC5vbmVMaW5lLFxuLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbDQgLm9uZUxpbmUge1xuICAtd2Via2l0LWZsZXgtc2hyaW5rOiAwO1xuICAgICAgICAgIGZsZXgtc2hyaW5rOiAwO1xuICBtYXJnaW4tcmlnaHQ6IDAuMDhyZW07XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLmNvdXBvblRhZzpsYXN0LWNoaWxkLFxuLnctc21hbGxhcHAtY29udGFpbmVyIC50YWdJdGVtOmxhc3QtY2hpbGQsXG4udy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsMyAub25lTGluZTpsYXN0LWNoaWxkLFxuLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbDQgLm9uZUxpbmU6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1yaWdodDogMDtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAuaW1nSWNvbldyYXAge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5iaWdJY29uIHtcbiAgd2lkdGg6IDAuMjhyZW07XG4gIGhlaWdodDogMC4yOHJlbTtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAuY2Fwc3VsZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDAuMDZyZW07XG4gIGJvdHRvbTogMC4wNnJlbTtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAuY2Fwc3VsZUljb24ge1xuICBtYXJnaW4tdG9wOiAwLjA1cmVtO1xuICB3aWR0aDogMC4xcmVtO1xuICBoZWlnaHQ6IDAuMXJlbTtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAudmlkZW9XcmFwIHtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBoZWlnaHQ6IDEwMCU7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLnZpZGVvV3JhcCAubGFiZWxXcmFwIHtcbiAgcGFkZGluZzogMC4wNXJlbTtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAudmlkZW9XcmFwIC52aWRlb1RleHQge1xuICAtd2Via2l0LWZsZXg6IDE7XG4gICAgICAgICAgZmxleDogMTtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICAgICAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCByZ2JhKDAsIDAsIDAsIDAuMyksIHJnYmEoMCwgMCwgMCwgMCkgMC4yNHJlbSk7XG4gIHBhZGRpbmc6IDAuMDVyZW07XG4gIGZvbnQtc2l6ZTogMC4xMXJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDEpO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5saXZlSWNvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBjb2xvcjogaW5oZXJpdDtcbiAgc3Ryb2tlOiBub25lO1xuICBmaWxsOiBjdXJyZW50Q29sb3I7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLmxpdmVJY29uIC5saW5lIHtcbiAgLXdlYmtpdC1hbmltYXRpb246IGxpdmVXYXZlIDAuNjhzIGxpbmVhciBpbmZpbml0ZTtcbiAgICAgICAgICBhbmltYXRpb246IGxpdmVXYXZlIDAuNjhzIGxpbmVhciBpbmZpbml0ZTtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGl2ZUljb24gLmxpbmUxIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IC0wLjM0cztcbiAgICAgICAgICBhbmltYXRpb24tZGVsYXk6IC0wLjM0cztcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGl2ZUljb24gLmxpbmUyIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IDAuMTdzO1xuICAgICAgICAgIGFuaW1hdGlvbi1kZWxheTogMC4xN3M7XG59XG5ALXdlYmtpdC1rZXlmcmFtZXMgbGl2ZVdhdmUge1xuICAwJSB7XG4gICAgaGVpZ2h0OiAzMCU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMzUlKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgzNSUpO1xuICB9XG4gIDI1JSB7XG4gICAgaGVpZ2h0OiA3MCU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMTUlKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxNSUpO1xuICB9XG4gIDUwJSB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICB9XG4gIDc1JSB7XG4gICAgaGVpZ2h0OiA3MCU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMTUlKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxNSUpO1xuICB9XG4gIDEwMCUge1xuICAgIGhlaWdodDogMzAlO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDM1JSk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMzUlKTtcbiAgfVxufVxuQGtleWZyYW1lcyBsaXZlV2F2ZSB7XG4gIDAlIHtcbiAgICBoZWlnaHQ6IDMwJTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgzNSUpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDM1JSk7XG4gIH1cbiAgMjUlIHtcbiAgICBoZWlnaHQ6IDcwJTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgxNSUpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDE1JSk7XG4gIH1cbiAgNTAlIHtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gIH1cbiAgNzUlIHtcbiAgICBoZWlnaHQ6IDcwJTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgxNSUpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDE1JSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgaGVpZ2h0OiAzMCU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMzUlKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgzNSUpO1xuICB9XG59XG4iLCAiIix7InZlcnNpb24iOjMsInNvdXJjZXMiOlsiaW5kZXgubGVzcyIsIi9Vc2Vycy9saWFvaHVhbnl1L3Byb2plY3RzL2JhaWR1LXdvcmsvYmFpZHUvZmVlZDMvbXVsdGktcGFnZXMvbm9kZV9tb2R1bGVzL0BiYWlkdS93dWppLXVpa2l0L3NyYy90ZXh0L21peGlucy5sZXNzIiwiL1VzZXJzL2xpYW9odWFueXUvcHJvamVjdHMvYmFpZHUtd29yay9iYWlkdS9mZWVkMy9tdWx0aS1wYWdlcy9ub2RlX21vZHVsZXMvQGJhaWR1L3d1amktdWlraXQvc3JjL3NwYWNpbmcvbWl4aW5zLmxlc3MiLCIvVXNlcnMvbGlhb2h1YW55dS9wcm9qZWN0cy9iYWlkdS13b3JrL2JhaWR1L2ZlZWQzL211bHRpLXBhZ2VzL25vZGVfbW9kdWxlcy9AYmFpZHUvd3VqaS1zYW4vZXMvd3VqaS1zbWFsbGFwcC1jb250YWluZXIvc3R5bGUvaW5kZXgubGVzcyIsIi9Vc2Vycy9saWFvaHVhbnl1L3Byb2plY3RzL2JhaWR1LXdvcmsvYmFpZHUvZmVlZDMvbXVsdGktcGFnZXMvbm9kZV9tb2R1bGVzL0BiYWlkdS93dWppLXVpa2l0L3NyYy9mb250L21peGlucy5sZXNzIiwiL1VzZXJzL2xpYW9odWFueXUvcHJvamVjdHMvYmFpZHUtd29yay9iYWlkdS9mZWVkMy9tdWx0aS1wYWdlcy9ub2RlX21vZHVsZXMvQGJhaWR1L3d1amktdWlraXQvc3JjL2NvbG9yL21peGlucy5sZXNzIiwiL1VzZXJzL2xpYW9odWFueXUvcHJvamVjdHMvYmFpZHUtd29yay9iYWlkdS9mZWVkMy9tdWx0aS1wYWdlcy9ub2RlX21vZHVsZXMvQGJhaWR1L3d1amktdWlraXQvc3JjL3JhZGl1cy9taXhpbnMubGVzcyIsIi9Vc2Vycy9saWFvaHVhbnl1L3Byb2plY3RzL2JhaWR1LXdvcmsvYmFpZHUvZmVlZDMvbXVsdGktcGFnZXMvbm9kZV9tb2R1bGVzL0BiYWlkdS93dWppLXVpa2l0L3NyYy9saW5lL21peGlucy5sZXNzIiwiL1VzZXJzL2xpYW9odWFueXUvcHJvamVjdHMvYmFpZHUtd29yay9iYWlkdS9mZWVkMy9tdWx0aS1wYWdlcy9ub2RlX21vZHVsZXMvQGJhaWR1L3d1amktdWlraXQvc3JjL21peGlucy5sZXNzIiwiL1VzZXJzL2xpYW9odWFueXUvcHJvamVjdHMvYmFpZHUtd29yay9iYWlkdS9mZWVkMy9tdWx0aS1wYWdlcy9ub2RlX21vZHVsZXMvQGJhaWR1L3d1amktc2FuL2VzL3N0eWxlL21peGlucy5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7RUFHRTtBQ0hEO0VDcUdHLG9CQUFBO0VBQ0EsdUJBQUE7QUYvRko7QUNQQztFQytGRyxxQkFBQTtFQUNBLHNCQUFBO0VDakZJLHFCQUFBO0VBQUEsYUFBQTtBSEhSO0FDWkM7RUNzQkcscUJBQUE7RUNGSSxzQkFBQTtVQUFBLGNBQUE7RUFDQSxpQkFBQTtBSEpSO0FDakJDO0VFeUJPLHFCQUFBO0VBQUEsYUFBQTtFQUNBLDhCQUFBO1VBQUEsc0JBQUE7RUFDQSxvQkFBQTtVQUFBLFlBQUE7QUhMUjtBQ3RCQztFRStCTyx1QkFBQTtFQUNBLG9CQUFBO0FITlI7QUMxQkM7RUNjRyxtQkFBQTtFQWdDQSxvQkFBQTtFQUNBLHFCQUFBO0FGaEJKO0FDL0JDO0VFeUNPLG9CQUFBO0FIUFI7QUNsQ0M7RUU2Q08sZUFBQTtVQUFBLE9BQUE7RUFDQSxxQkFBQTtFQUFBLGFBQUE7RUFDQSw4QkFBQTtVQUFBLHNCQUFBO0FIUlI7QUN2Q0M7RUVtRE8scUJBQUE7RUFBQSxhQUFBO0VBQ0EsNkJBQUE7VUFBQSxxQkFBQTtBSFRSO0FD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LFdBQUE7SUFDQSxrQ0FBQTtZQUFBLDBCQUFBO0VIcUVWO0VHbEVNO0lBQ0ksV0FBQTtJQUNBLGtDQUFBO1lBQUEsMEJBQUE7RUhvRVY7QUFDRjtBRzVGSTtFQUNJO0lBQ0ksV0FBQTtJQUNBLGtDQUFBO1lBQUEsMEJBQUE7RUh3RVY7RUdyRU07SUFDSSxXQUFBO0lBQ0Esa0NBQUE7WUFBQSwwQkFBQTtFSHVFVjtFR3BFTTtJQUNJLFlBQUE7SUFDQSxnQ0FBQTtZQUFBLHdCQUFBO0VIc0VWO0VHbkVNO0lBQ0ksV0FBQTtJQUNBLGtDQUFBO1lBQUEsMEJBQUE7RUhxRVY7RUdsRU07SUFDSSxXQUFBO0lBQ0Esa0NBQUE7WUFBQSwwQkFBQTtFSG9FVjtBQUNGIiwiZmlsZSI6ImluZGV4Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlIOe7hOS7tuagt+W8jyDlsI/nqIvluo9cbiAqIEBhdXRob3IgcmFvd2VuanVhbiA8cmFvd2VuanVhbkBiYWlkdS5jb20+XG4gKi9cbi53LXNtYWxsYXBwLWNvbnRhaW5lciB7XG4gIHBhZGRpbmctdG9wOiA0NXByO1xuICBwYWRkaW5nLWJvdHRvbTogNDVwcjtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAuaW1nLXR4dC13cmFwcGVyIHtcbiAgcGFkZGluZy1sZWZ0OiAzOXByO1xuICBwYWRkaW5nLXJpZ2h0OiAzOXByO1xuICBkaXNwbGF5OiBmbGV4O1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5pbWctbGVmdCB7XG4gIG1hcmdpbi1yaWdodDogMjRwcjtcbiAgZmxleC1zaHJpbms6IDA7XG4gIHdpZHRoOiAzNjRwcjtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAudHh0LXJpZ2h0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZmxleC1ncm93OiAxO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC53LXRpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogLTEycHI7XG4gIG1hcmdpbi10b3A6IC0xNXByO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC53LXdpZGdldCB7XG4gIG1hcmdpbi10b3A6IDI3cHI7XG4gIG1hcmdpbi1sZWZ0OiAzOXByO1xuICBtYXJnaW4tcmlnaHQ6IDM5cHI7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLnRhYkNvbnRhaW5lciArIC53LXdpZGdldCAudy13aWRnZXQtaXRlbXMge1xuICBtYXJnaW4tdG9wOiAtMThwcjtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAuZGV0YWlsQ29udGFpbmVyIHtcbiAgZmxleDogMTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAuZ3JpZENvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAuZ3JpZENvbnRhaW5lciAubGlzdDJkIHtcbiAgZmxleC1ncm93OiAxO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbDEsXG4udy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsMiB7XG4gIG1hcmdpbi10b3A6IDI3cHI7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsMSAub25lTGluZSxcbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWwyIC5vbmVMaW5lLFxuLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbDEgLnR3b0xpbmUsXG4udy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsMiAudHdvTGluZSB7XG4gIGZvbnQtc2l6ZTogNDJwcjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IDYwcHI7XG4gIG1hcmdpbi10b3A6IC05cHI7XG4gIG1hcmdpbi1ib3R0b206IC05cHI7XG4gIGNvbG9yOiByZ2JhKDEzMywgMTMzLCAxMzMsIDEpO1xufVxuLmRhcmttb2RlIC53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWwxIC5vbmVMaW5lLFxuLmRhcmttb2RlIC53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWwyIC5vbmVMaW5lLFxuLmRhcmttb2RlIC53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWwxIC50d29MaW5lLFxuLmRhcmttb2RlIC53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWwyIC50d29MaW5lIHtcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWwzLFxuLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbDQge1xuICBtYXJnaW4tdG9wOiAyN3ByO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbDMgLm9uZUxpbmUsXG4udy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsNCAub25lTGluZSxcbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWwzIC50d29MaW5lLFxuLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbDQgLnR3b0xpbmUsXG4udy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsMyAudHJpTGluZSxcbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWw0IC50cmlMaW5lIHtcbiAgZm9udC1zaXplOiAzNnByO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogNTRwcjtcbiAgbWFyZ2luLXRvcDogLTlwcjtcbiAgbWFyZ2luLWJvdHRvbTogLTlwcjtcbiAgY29sb3I6IHJnYmEoMTMzLCAxMzMsIDEzMywgMSk7XG59XG4uZGFya21vZGUgLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbDMgLm9uZUxpbmUsXG4uZGFya21vZGUgLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbDQgLm9uZUxpbmUsXG4uZGFya21vZGUgLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbDMgLnR3b0xpbmUsXG4uZGFya21vZGUgLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbDQgLnR3b0xpbmUsXG4uZGFya21vZGUgLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbDMgLnRyaUxpbmUsXG4uZGFya21vZGUgLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbDQgLnRyaUxpbmUge1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbDMge1xuICBmbGV4OiAxO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICBtYXJnaW4tdG9wOiAwO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbDMgLnByaWNlVGV4dCB7XG4gIGZvbnQtc2l6ZTogNTdwcjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IDYzcHI7XG4gIG1hcmdpbi10b3A6IC0zcHI7XG4gIG1hcmdpbi1ib3R0b206IC0zcHI7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMTAyLCAwLCAxKTtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWwzIC5vbmVMaW5lOmxhc3QtY2hpbGQsXG4udy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsMyAudHdvTGluZTpsYXN0LWNoaWxkIHtcbiAgZmxleDogMTtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWwzIC53LWNvbCB7XG4gIGZsZXgtc2hyaW5rOiAwO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5pbWdFeHRDb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5saW5lV3JhcCxcbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGluZUluTGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLmxpbmVJbkxpc3Qge1xuICBtYXJnaW4tdG9wOiAxOHByO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5saW5lSW5MaXN0OmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAuaW1nSWNvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDQycHI7XG4gIG1pbi13aWR0aDogNDJwcjtcbiAgbWF4LXdpZHRoOiAyNDlwcjtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGV2ZWxCdXR0b24ge1xuICBmbGV4LXNocmluazogMDtcbiAgd2lkdGg6IDIxM3ByO1xuICBoZWlnaHQ6IDg0cHI7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLmJ1dHRvbkJ1eSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5wcm9ncmVzcyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMThwcjtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAucHJvZ3Jlc3NDb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAxKTtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAucHJvZ3Jlc3MgLmxpbmUsXG4udy1zbWFsbGFwcC1jb250YWluZXIgLnByb2dyZXNzIC50cmFjayB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBmaWxsOiBjdXJyZW50Q29sb3I7XG4gIGJvcmRlci1yYWRpdXM6IDkwMHByO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5wcm9ncmVzcyAubGluZSB7XG4gIHdpZHRoOiAwO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5wcm9ncmVzcyAudHJhY2sge1xuICBvcGFjaXR5OiAwLjI7XG4gIHdpZHRoOiAxMDAlO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC5wcm9ncmVzcyAudGV4dCB7XG4gIG1hcmdpbi1sZWZ0OiAxOHByO1xuICBmbGV4LXNocmluazogMDtcbiAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAuaW1nSWNvbixcbi53LXNtYWxsYXBwLWNvbnRhaW5lciAuaXRlbUdhcCB7XG4gIG1hcmdpbi1yaWdodDogMTVwcjtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAudGFnV3JhcCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAudGFnSXRlbSB7XG4gIHBhZGRpbmctbGVmdDogMTJwcjtcbiAgcGFkZGluZy1yaWdodDogMTJwcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgYm9yZGVyLXJhZGl1czogOTAwcHI7XG4gIGhlaWdodDogNDhwcjtcbiAgZm9udC1zaXplOiAzMHByO1xuICBsaW5lLWhlaWdodDogNDhwcjtcbiAgY29sb3I6ICM2NjY7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLnRhZ0l0ZW06YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiAwIDA7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMwMDA7XG59XG5AbWVkaWEgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMS4yKSwgKC13ZWJraXQtbWF4LWRldmljZS1waXhlbC1yYXRpbzogMS41KSwgKG1pbi1yZXNvbHV0aW9uOiAxLjJkcHB4KSwgKG1heC1yZXNvbHV0aW9uOiAxLjVkcHB4KSB7XG4gIC53LXNtYWxsYXBwLWNvbnRhaW5lciAudGFnSXRlbTphZnRlciB7XG4gICAgd2lkdGg6IDE1MCU7XG4gICAgaGVpZ2h0OiAxNTAlO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC42NjY2NjY2Nyk7XG4gIH1cbn1cbkBtZWRpYSAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAyZHBweCkge1xuICAudy1zbWFsbGFwcC1jb250YWluZXIgLnRhZ0l0ZW06YWZ0ZXIge1xuICAgIHdpZHRoOiAyMDAlO1xuICAgIGhlaWdodDogMjAwJTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuNSk7XG4gIH1cbn1cbkBtZWRpYSAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAzKSwgKG1pbi1yZXNvbHV0aW9uOiAzZHBweCkge1xuICAudy1zbWFsbGFwcC1jb250YWluZXIgLnRhZ0l0ZW06YWZ0ZXIge1xuICAgIHdpZHRoOiAzMDAlO1xuICAgIGhlaWdodDogMzAwJTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuMzMzMzMzMzMpO1xuICB9XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLnRhZ0l0ZW06YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbn1cbkBtZWRpYSAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAxLjIpLCAoLXdlYmtpdC1tYXgtZGV2aWNlLXBpeGVsLXJhdGlvOiAxLjUpLCAobWluLXJlc29sdXRpb246IDEuMmRwcHgpLCAobWF4LXJlc29sdXRpb246IDEuNWRwcHgpIHtcbiAgLnctc21hbGxhcHAtY29udGFpbmVyIC50YWdJdGVtOmFmdGVyIHtcbiAgICBib3JkZXItcmFkaXVzOiAxMzUwcHI7XG4gIH1cbn1cbkBtZWRpYSAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAyZHBweCkge1xuICAudy1zbWFsbGFwcC1jb250YWluZXIgLnRhZ0l0ZW06YWZ0ZXIge1xuICAgIGJvcmRlci1yYWRpdXM6IDE4MDBwcjtcbiAgfVxufVxuQG1lZGlhICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpLCAobWluLXJlc29sdXRpb246IDNkcHB4KSB7XG4gIC53LXNtYWxsYXBwLWNvbnRhaW5lciAudGFnSXRlbTphZnRlciB7XG4gICAgYm9yZGVyLXJhZGl1czogMjcwMHByO1xuICB9XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLnRhZ0l0ZW06OmFmdGVyIHtcbiAgYm9yZGVyLWNvbG9yOiBjdXJyZW50Q29sb3I7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLm9uZUxpbmUge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIC13ZWJraXQtbGluZS1jbGFtcDogMTtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgd29yZC1icmVhazogYnJlYWstYWxsO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC50d29MaW5lIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAtd2Via2l0LWxpbmUtY2xhbXA6IDI7XG4gIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAudHJpTGluZSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgLXdlYmtpdC1saW5lLWNsYW1wOiAzO1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLnZsaW5lIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgbWFyZ2luLWxlZnQ6IDE4cHI7XG4gIG1hcmdpbi1yaWdodDogMThwcjtcbiAgaGVpZ2h0OiAzM3ByO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC52bGluZTphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHRyYW5zZm9ybS1vcmlnaW46IDAgMDtcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZDtcbiAgYm9yZGVyLWxlZnQtY29sb3I6IHJnYmEoODIsIDgyLCA4MiwgMSk7XG59XG4uZGFya21vZGUgLnctc21hbGxhcHAtY29udGFpbmVyIC52bGluZTphZnRlciB7XG4gIGJvcmRlci1sZWZ0LWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNik7XG59XG5AbWVkaWEgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMS4yKSwgKC13ZWJraXQtbWF4LWRldmljZS1waXhlbC1yYXRpbzogMS41KSwgKG1pbi1yZXNvbHV0aW9uOiAxLjJkcHB4KSwgKG1heC1yZXNvbHV0aW9uOiAxLjVkcHB4KSB7XG4gIC53LXNtYWxsYXBwLWNvbnRhaW5lciAudmxpbmU6YWZ0ZXIge1xuICAgIHdpZHRoOiAxNTAlO1xuICAgIGhlaWdodDogMTUwJTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuNjY2NjY2NjcpO1xuICB9XG59XG5AbWVkaWEgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMmRwcHgpIHtcbiAgLnctc21hbGxhcHAtY29udGFpbmVyIC52bGluZTphZnRlciB7XG4gICAgd2lkdGg6IDIwMCU7XG4gICAgaGVpZ2h0OiAyMDAlO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC41KTtcbiAgfVxufVxuQG1lZGlhICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpLCAobWluLXJlc29sdXRpb246IDNkcHB4KSB7XG4gIC53LXNtYWxsYXBwLWNvbnRhaW5lciAudmxpbmU6YWZ0ZXIge1xuICAgIHdpZHRoOiAzMDAlO1xuICAgIGhlaWdodDogMzAwJTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuMzMzMzMzMzMpO1xuICB9XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLnRhYkNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi10b3A6IDQ1cHI7XG4gIG1hcmdpbi1ib3R0b206IDQ1cHI7XG4gIG1hcmdpbi1sZWZ0OiAzOXByO1xuICBtYXJnaW4tcmlnaHQ6IDM5cHI7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLnRhYkNvbnRhaW5lciAudGFiSXRlbSB7XG4gIG1hcmdpbi1yaWdodDogMThwcjtcbiAgYm9yZGVyLXJhZGl1czogMjdwcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNDUsIDI0NiwgMjQ5LCAxKTtcbiAgY29sb3I6IHJnYmEoMzEsIDMxLCAzMSwgMSk7XG4gIGZvbnQtc2l6ZTogNDJwcjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIGZsZXg6IDE7XG4gIGhlaWdodDogODRwcjtcbiAgbGluZS1oZWlnaHQ6IDg0cHI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5kYXJrbW9kZSAudy1zbWFsbGFwcC1jb250YWluZXIgLnRhYkNvbnRhaW5lciAudGFiSXRlbSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMzQsIDM0LCAzNCwgMSk7XG59XG4uZGFya21vZGUgLnctc21hbGxhcHAtY29udGFpbmVyIC50YWJDb250YWluZXIgLnRhYkl0ZW0ge1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC50YWJDb250YWluZXIgLnRhYkl0ZW06YWN0aXZlIHtcbiAgb3BhY2l0eTogMC4yO1xufVxuLnctc21hbGxhcHAtY29udGFpbmVyIC50YWJDb250YWluZXIgLnRhYkl0ZW06bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1yaWdodDogMDtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAuY291cG9uVGFnLFxuLnctc21hbGxhcHAtY29udGFpbmVyIC50YWdJdGVtLFxuLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbDMgLm9uZUxpbmUsXG4udy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsNCAub25lTGluZSB7XG4gIGZsZXgtc2hyaW5rOiAwO1xuICBtYXJnaW4tcmlnaHQ6IDI0cHI7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLmNvdXBvblRhZzpsYXN0LWNoaWxkLFxuLnctc21hbGxhcHAtY29udGFpbmVyIC50YWdJdGVtOmxhc3QtY2hpbGQsXG4udy1zbWFsbGFwcC1jb250YWluZXIgLmxldmVsMyAub25lTGluZTpsYXN0LWNoaWxkLFxuLnctc21hbGxhcHAtY29udGFpbmVyIC5sZXZlbDQgLm9uZUxpbmU6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1yaWdodDogMDtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAuaW1nSWNvbldyYXAge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAuYmlnSWNvbiB7XG4gIHdpZHRoOiA4NHByO1xuICBoZWlnaHQ6IDg0cHI7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLmNhcHN1bGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAxOHByO1xuICBib3R0b206IDE4cHI7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLmNhcHN1bGVJY29uIHtcbiAgbWFyZ2luLXRvcDogMTVwcjtcbiAgd2lkdGg6IDMwcHI7XG4gIGhlaWdodDogMzBwcjtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAudmlkZW9XcmFwIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBoZWlnaHQ6IDEwMCU7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLnZpZGVvV3JhcCAubGFiZWxXcmFwIHtcbiAgcGFkZGluZzogMTVwcjtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAudmlkZW9XcmFwIC52aWRlb1RleHQge1xuICBmbGV4OiAxO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsIHJnYmEoMCwgMCwgMCwgMC4zKSwgcmdiYSgwLCAwLCAwLCAwKSA3MnByKTtcbiAgcGFkZGluZzogMTVwcjtcbiAgZm9udC1zaXplOiAzM3ByO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMTtcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMSk7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLmxpdmVJY29uIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBzdHJva2U6IG5vbmU7XG4gIGZpbGw6IGN1cnJlbnRDb2xvcjtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGl2ZUljb24gLmxpbmUge1xuICBhbmltYXRpb246IGxpdmVXYXZlIDAuNjhzIGxpbmVhciBpbmZpbml0ZTtcbn1cbi53LXNtYWxsYXBwLWNvbnRhaW5lciAubGl2ZUljb24gLmxpbmUxIHtcbiAgYW5pbWF0aW9uLWRlbGF5OiAtMC4zNHM7XG59XG4udy1zbWFsbGFwcC1jb250YWluZXIgLmxpdmVJY29uIC5saW5lMiB7XG4gIGFuaW1hdGlvbi1kZWxheTogMC4xN3M7XG59XG5Aa2V5ZnJhbWVzIGxpdmVXYXZlIHtcbiAgMCUge1xuICAgIGhlaWdodDogMzAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgzNSUpO1xuICB9XG4gIDI1JSB7XG4gICAgaGVpZ2h0OiA3MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDE1JSk7XG4gIH1cbiAgNTAlIHtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICB9XG4gIDc1JSB7XG4gICAgaGVpZ2h0OiA3MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDE1JSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgaGVpZ2h0OiAzMCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDM1JSk7XG4gIH1cbn1cbiIsIi8qKlxuICogQGZpbGUgdGV4dCBtaXhpbnNcbiAqIEBhdXRob3IgU2hlZXRhKHd1aGF5YW9AZ21haWwuY29tKVxuICovXG5cbi53dWppLXRleHQoQGNvZGUsIEBsaW5lLXNwYWNpbmcpIHtcbiAgICBAdC1jb2RlOiAjVHh0X1RbQEBjb2RlXTtcbiAgICBAZi1jb2RlOiAjVHh0X0ZbQEBjb2RlXTtcbiAgICBAY2FtLWNvZGU6ICNUeHRfQ0FNW0BAY29kZV07XG5cbiAgICAud3VqaS1mb250KEB0LWNvZGUsIEBsaW5lLXNwYWNpbmcsIEBmLWNvZGUpO1xuICAgIC53dWppLWNvbG9yKEBjYW0tY29kZSk7XG59XG5cbi53dWppLXRleHQtb25lLWxpbmUoQGNvZGUsIEBsaW5lLWhlaWdodDogMSkge1xuICAgIEB0LWNvZGU6ICNUeHRfVFtAQGNvZGVdO1xuICAgIEBmLWNvZGU6ICNUeHRfRltAQGNvZGVdO1xuICAgIEBjYW0tY29kZTogI1R4dF9DQU1bQEBjb2RlXTtcblxuICAgIC53dWppLWZvbnQtb25lLWxpbmUoQHQtY29kZSwgQGxpbmUtaGVpZ2h0OiBAbGluZS1oZWlnaHQsIEBmLWNvZGUpO1xuICAgIC53dWppLWNvbG9yKEBjYW0tY29kZSk7XG59XG4iLCIvKipcbiAqIEBmaWxlIHNwYWNpbmcgbWl4aW5zXG4gKiBAYXV0aG9yIGJhb3poaXhpbiA8YmFvemhpeGluQGJhaWR1LmNvbT5cbiAqXG4gKiB3dWppLW14L3d1amktbXkvd3VqaS1weC93dWppLXB5IOayoeacieWFiOi1i+WAvOS4gOS4quWPmOmHj+eahOWOn+WboOWPguiAgyBwbHVnaW4tbGVzcyDmlofku7YgVElQUyDor7TmmI5cbiAqL1xuXG4vLyDlpJbovrnot51cbi53dWppLW1hcmdpbihAY29kZTogdW5kZWZpbmVkLCBAZHByOiBAZHByLCBAdW5pdDogQHVuaXQpIHtcbiAgICBtYXJnaW46IGFkZFVuaXQoZ2V0U3BhY2luZyhAY29kZSksIEBkcHIsIEB1bml0KTtcbn1cblxuLy8g5LiK6L656LedXG4ud3VqaS1tYXJnaW4tdG9wKEBjb2RlOiB1bmRlZmluZWQsIEBkcHI6IEBkcHIsIEB1bml0OiBAdW5pdCkge1xuICAgIG1hcmdpbi10b3A6IGFkZFVuaXQoZ2V0U3BhY2luZyhAY29kZSksIEBkcHIsIEB1bml0KTtcbn1cbi53dWppLW10KEBjb2RlOiB1bmRlZmluZWQsIEBkcHI6IEBkcHIsIEB1bml0OiBAdW5pdCkge1xuICAgIC53dWppLW1hcmdpbi10b3AoQGNvZGUsIEBkcHIsIEB1bml0KTtcbn1cblxuLy8g5Y+z6L656LedXG4ud3VqaS1tYXJnaW4tcmlnaHQoQGNvZGU6IHVuZGVmaW5lZCwgQGRwcjogQGRwciwgQHVuaXQ6IEB1bml0KSB7XG4gICAgbWFyZ2luLXJpZ2h0OiBhZGRVbml0KGdldFNwYWNpbmcoQGNvZGUpLCBAZHByLCBAdW5pdCk7XG59XG4ud3VqaS1tcihAY29kZTogdW5kZWZpbmVkLCBAZHByOiBAZHByLCBAdW5pdDogQHVuaXQpIHtcbiAgICAud3VqaS1tYXJnaW4tcmlnaHQoQGNvZGUsIEBkcHIsIEB1bml0KTtcbn1cblxuLy8g5LiL6L656LedXG4ud3VqaS1tYXJnaW4tYm90dG9tKEBjb2RlOiB1bmRlZmluZWQsIEBkcHI6IEBkcHIsIEB1bml0OiBAdW5pdCkge1xuICAgIG1hcmdpbi1ib3R0b206IGFkZFVuaXQoZ2V0U3BhY2luZyhAY29kZSksIEBkcHIsIEB1bml0KTtcbn1cbi53dWppLW1iKEBjb2RlOiB1bmRlZmluZWQsIEBkcHI6IEBkcHIsIEB1bml0OiBAdW5pdCkge1xuICAgIC53dWppLW1hcmdpbi1ib3R0b20oQGNvZGUsIEBkcHIsIEB1bml0KTtcbn1cblxuLy8g5bem6L656LedXG4ud3VqaS1tYXJnaW4tbGVmdChAY29kZTogdW5kZWZpbmVkLCBAZHByOiBAZHByLCBAdW5pdDogQHVuaXQpIHtcbiAgICBtYXJnaW4tbGVmdDogYWRkVW5pdChnZXRTcGFjaW5nKEBjb2RlKSwgQGRwciwgQHVuaXQpO1xufVxuLnd1amktbWwoQGNvZGU6IHVuZGVmaW5lZCwgQGRwcjogQGRwciwgQHVuaXQ6IEB1bml0KSB7XG4gICAgLnd1amktbWFyZ2luLWxlZnQoQGNvZGUsIEBkcHIsIEB1bml0KTtcbn1cblxuLy8g5bem5Y+z6L656LedXG4ud3VqaS1teChAY29kZTogdW5kZWZpbmVkLCBAZHByOiBAZHByLCBAdW5pdDogQHVuaXQpIHtcbiAgICBtYXJnaW4tbGVmdDogYWRkVW5pdChnZXRTcGFjaW5nKEBjb2RlKSwgQGRwciwgQHVuaXQpO1xuICAgIG1hcmdpbi1yaWdodDogYWRkVW5pdChnZXRTcGFjaW5nKEBjb2RlKSwgQGRwciwgQHVuaXQpO1xufVxuXG4vLyDkuIrkuIvovrnot51cbi53dWppLW15KEBjb2RlOiB1bmRlZmluZWQsIEBkcHI6IEBkcHIsIEB1bml0OiBAdW5pdCkge1xuICAgIG1hcmdpbi10b3A6IGFkZFVuaXQoZ2V0U3BhY2luZyhAY29kZSksIEBkcHIsIEB1bml0KTtcbiAgICBtYXJnaW4tYm90dG9tOiBhZGRVbml0KGdldFNwYWNpbmcoQGNvZGUpLCBAZHByLCBAdW5pdCk7XG59XG5cbi8vIOWGheWhq+WFhVxuLnd1amktcGFkZGluZyhAY29kZTogdW5kZWZpbmVkLCBAZHByOiBAZHByLCBAdW5pdDogQHVuaXQpIHtcbiAgICBwYWRkaW5nOiBhZGRVbml0KGdldFNwYWNpbmcoQGNvZGUpLCBAZHByLCBAdW5pdCk7XG59XG5cbi8vIOS4iuWhq+WFhVxuLnd1amktcGFkZGluZy10b3AoQGNvZGU6IHVuZGVmaW5lZCwgQGRwcjogQGRwciwgQHVuaXQ6IEB1bml0KSB7XG4gICAgcGFkZGluZy10b3A6IGFkZFVuaXQoZ2V0U3BhY2luZyhAY29kZSksIEBkcHIsIEB1bml0KTtcbn1cbi53dWppLXB0KEBjb2RlOiB1bmRlZmluZWQsIEBkcHI6IEBkcHIsIEB1bml0OiBAdW5pdCkge1xuICAgIC53dWppLXBhZGRpbmctdG9wKEBjb2RlLCBAZHByLCBAdW5pdCk7XG59XG5cbi8vIOWPs+Whq+WFhVxuLnd1amktcGFkZGluZy1yaWdodChAY29kZTogdW5kZWZpbmVkLCBAZHByOiBAZHByLCBAdW5pdDogQHVuaXQpIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiBhZGRVbml0KGdldFNwYWNpbmcoQGNvZGUpLCBAZHByLCBAdW5pdCk7XG59XG4ud3VqaS1wcihAY29kZTogdW5kZWZpbmVkLCBAZHByOiBAZHByLCBAdW5pdDogQHVuaXQpIHtcbiAgICAud3VqaS1wYWRkaW5nLXJpZ2h0KEBjb2RlLCBAZHByLCBAdW5pdCk7XG59XG5cbi8vIOS4i+Whq+WFhVxuLnd1amktcGFkZGluZy1ib3R0b20oQGNvZGU6IHVuZGVmaW5lZCwgQGRwcjogQGRwciwgQHVuaXQ6IEB1bml0KSB7XG4gICAgcGFkZGluZy1ib3R0b206IGFkZFVuaXQoZ2V0U3BhY2luZyhAY29kZSksIEBkcHIsIEB1bml0KTtcbn1cbi53dWppLXBiKEBjb2RlOiB1bmRlZmluZWQsIEBkcHI6IEBkcHIsIEB1bml0OiBAdW5pdCkge1xuICAgIC53dWppLXBhZGRpbmctYm90dG9tKEBjb2RlLCBAZHByLCBAdW5pdCk7XG59XG5cbi8vIOW3puWhq+WFhVxuLnd1amktcGFkZGluZy1sZWZ0KEBjb2RlOiB1bmRlZmluZWQsIEBkcHI6IEBkcHIsIEB1bml0OiBAdW5pdCkge1xuICAgIHBhZGRpbmctbGVmdDogYWRkVW5pdChnZXRTcGFjaW5nKEBjb2RlKSwgQGRwciwgQHVuaXQpO1xufVxuLnd1amktcGwoQGNvZGU6IHVuZGVmaW5lZCwgQGRwcjogQGRwciwgQHVuaXQ6IEB1bml0KSB7XG4gICAgLnd1amktcGFkZGluZy1sZWZ0KEBjb2RlLCBAZHByLCBAdW5pdCk7XG59XG5cbi8vIOW3puWPs+Whq+WFhVxuLnd1amktcHgoQGNvZGU6IHVuZGVmaW5lZCwgQGRwcjogQGRwciwgQHVuaXQ6IEB1bml0KSB7XG4gICAgcGFkZGluZy1sZWZ0OiBhZGRVbml0KGdldFNwYWNpbmcoQGNvZGUpLCBAZHByLCBAdW5pdCk7XG4gICAgcGFkZGluZy1yaWdodDogYWRkVW5pdChnZXRTcGFjaW5nKEBjb2RlKSwgQGRwciwgQHVuaXQpO1xufVxuXG4vLyDkuIrkuIvloavlhYVcbi53dWppLXB5KEBjb2RlOiB1bmRlZmluZWQsIEBkcHI6IEBkcHIsIEB1bml0OiBAdW5pdCkge1xuICAgIHBhZGRpbmctdG9wOiBhZGRVbml0KGdldFNwYWNpbmcoQGNvZGUpLCBAZHByLCBAdW5pdCk7XG4gICAgcGFkZGluZy1ib3R0b206IGFkZFVuaXQoZ2V0U3BhY2luZyhAY29kZSksIEBkcHIsIEB1bml0KTtcbn1cblxuLy8g57ud5a+5L+ebuOWvueWumuS9jS3kuIrlgY/np7tcbi53dWppLXRvcChAY29kZTogdW5kZWZpbmVkLCBAZHByOiBAZHByLCBAdW5pdDogQHVuaXQpIHtcbiAgICB0b3A6IGFkZFVuaXQoZ2V0U3BhY2luZyhAY29kZSksIEBkcHIsIEB1bml0KTtcbn1cblxuLy8g57ud5a+5L+ebuOWvueWumuS9jS3lj7PlgY/np7tcbi53dWppLXJpZ2h0KEBjb2RlOiB1bmRlZmluZWQsIEBkcHI6IEBkcHIsIEB1bml0OiBAdW5pdCkge1xuICAgIHJpZ2h0OiBhZGRVbml0KGdldFNwYWNpbmcoQGNvZGUpLCBAZHByLCBAdW5pdCk7XG59XG5cbi8vIOe7neWvuS/nm7jlr7nlrprkvY0t5LiL5YGP56e7XG4ud3VqaS1ib3R0b20oQGNvZGU6IHVuZGVmaW5lZCwgQGRwcjogQGRwciwgQHVuaXQ6IEB1bml0KSB7XG4gICAgYm90dG9tOiBhZGRVbml0KGdldFNwYWNpbmcoQGNvZGUpLCBAZHByLCBAdW5pdCk7XG59XG5cbi8vIOe7neWvuS/nm7jlr7nlrprkvY0t5bem5YGP56e7XG4ud3VqaS1sZWZ0KEBjb2RlOiB1bmRlZmluZWQsIEBkcHI6IEBkcHIsIEB1bml0OiBAdW5pdCkge1xuICAgIGxlZnQ6IGFkZFVuaXQoZ2V0U3BhY2luZyhAY29kZSksIEBkcHIsIEB1bml0KTtcbn1cblxuLy8g5rC05bmz5ZKM5Z6C55u05pa55ZCR5bmz56e7XG4ud3VqaS10cmFuc2xhdGUoQGNvZGUteDogdW5kZWZpbmVkLCBAY29kZS15OiB1bmRlZmluZWQsIEBkcHI6IEBkcHIsIEB1bml0OiBAdW5pdCkge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKGFkZFVuaXQoZ2V0U3BhY2luZyhAY29kZS14KSwgQGRwciwgQHVuaXQpLCBhZGRVbml0KGdldFNwYWNpbmcoQGNvZGUteSksIEBkcHIsIEB1bml0KSk7XG59XG5cbi8vIOawtOW5s+aWueWQkeW5s+enu1xuLnd1amktdHJhbnNsYXRlLXgoQGNvZGU6IHVuZGVmaW5lZCwgQGRwcjogQGRwciwgQHVuaXQ6IEB1bml0KSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKGFkZFVuaXQoZ2V0U3BhY2luZyhAY29kZSksIEBkcHIsIEB1bml0KSk7XG59XG4ud3VqaS10cmFucy14KEBjb2RlOiB1bmRlZmluZWQsIEBkcHI6IEBkcHIsIEB1bml0OiBAdW5pdCkge1xuICAgIC53dWppLXRyYW5zbGF0ZS14KEBjb2RlLCBAZHByLCBAdW5pdCk7XG59XG5cbi8vIOWeguebtOaWueWQkeW5s+enu1xuLnd1amktdHJhbnNsYXRlLXkoQGNvZGU6IHVuZGVmaW5lZCwgQGRwcjogQGRwciwgQHVuaXQ6IEB1bml0KSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKGFkZFVuaXQoZ2V0U3BhY2luZyhAY29kZSksIEBkcHIsIEB1bml0KSk7XG59XG4ud3VqaS10cmFucy15KEBjb2RlOiB1bmRlZmluZWQsIEBkcHI6IEBkcHIsIEB1bml0OiBAdW5pdCkge1xuICAgIC53dWppLXRyYW5zbGF0ZS15KEBjb2RlLCBAZHByLCBAdW5pdCk7XG59XG4iLCIvKipcbiAqIEBmaWxlIOe7hOS7tuagt+W8jyDlsI/nqIvluo9cbiAqIEBhdXRob3IgcmFvd2VuanVhbiA8cmFvd2VuanVhbkBiYWlkdS5jb20+XG4gKi9cblxuQGltcG9ydCAocmVmZXJlbmNlKSAnLi4vLi4vc3R5bGUvaW5kZXgubGVzcyc7XG5cbkBwcmVmaXgtY2xzOiB3LXNtYWxsYXBwLWNvbnRhaW5lcjtcblxuLy8g5a655Zmo5ZKM5ZCE57qn5a2X5q61XG4uQHtwcmVmaXgtY2xzfSB7XG4gICAgLnd1amktcHkoRl9NX0hfWDAwMik7XG5cbiAgICAuaW1nLXR4dC13cmFwcGVyIHtcbiAgICAgICAgLnd1amktcHgoRl9NX1dfWDA0Nyk7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgfVxuXG4gICAgLmltZy1sZWZ0IHtcbiAgICAgICAgLnd1amktbXIoRl9NX1dfWDAyMSk7XG4gICAgICAgIGZsZXgtc2hyaW5rOiAwO1xuICAgICAgICB3aWR0aDogMzY0cHI7XG4gICAgfVxuXG4gICAgLnR4dC1yaWdodCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICB9XG5cbiAgICAudy10aXRsZSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IC0xMnByO1xuICAgICAgICBtYXJnaW4tdG9wOiAtMTVwcjtcbiAgICB9XG5cbiAgICAudy13aWRnZXQge1xuICAgICAgICAud3VqaS1tdChNX0hfWDAwMyk7XG4gICAgICAgIC53dWppLW14KEZfTV9XX1gwNDcpO1xuICAgIH1cblxuICAgIC50YWJDb250YWluZXIgKyAudy13aWRnZXQgLnctd2lkZ2V0LWl0ZW1zIHtcbiAgICAgICAgbWFyZ2luLXRvcDogLTE4cHI7XG4gICAgfVxuXG4gICAgLmRldGFpbENvbnRhaW5lciB7XG4gICAgICAgIGZsZXg6IDE7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgfVxuXG4gICAgLmdyaWRDb250YWluZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG5cbiAgICAgICAgLmxpc3QyZCB7XG4gICAgICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgICAgIH1cbiAgICAgICAgLy8gb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgfVxuXG4gICAgLmxldmVsMSxcbiAgICAubGV2ZWwyIHtcbiAgICAgICAgLnd1amktbXQoTV9IX1gwMDMpO1xuICAgICAgICAvLyBtYXJnaW4tdG9wOiAyNHByOyAvLyDml6DmnoHop4TojIPmsqHmnIkyNO+8jOS9v+eUqDI3XG5cbiAgICAgICAgLm9uZUxpbmUsXG4gICAgICAgIC50d29MaW5lIHtcbiAgICAgICAgICAgIC53dWppLWZvbnQtbm9zKFRfWDA2LCBNX1RfWDAwMSk7XG4gICAgICAgICAgICAud3VqaS1jb2xvcihDQU1fWDc5Myk7IC8vIEZDMTA0XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAubGV2ZWwzLFxuICAgIC5sZXZlbDQge1xuICAgICAgICAud3VqaS1tdChNX0hfWDAwMyk7XG4gICAgICAgIC8vIG1hcmdpbi10b3A6IDI0cHI7IC8vIOaXoOaegeinhOiMg+ayoeaciTI077yM5L2/55SoMjdcblxuICAgICAgICAub25lTGluZSxcbiAgICAgICAgLnR3b0xpbmUsXG4gICAgICAgIC50cmlMaW5lIHtcbiAgICAgICAgICAgIC53dWppLWZvbnQtbm9zKFRfWDA4LCBNX1RfWDAwMSk7XG4gICAgICAgICAgICAud3VqaS1jb2xvcihDQU1fWDc5Myk7IC8vIC1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5sZXZlbDMge1xuICAgICAgICBmbGV4OiAxO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgICAvLyBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICBtYXJnaW4tdG9wOiAwO1xuXG4gICAgICAgIC5wcmljZVRleHQge1xuICAgICAgICAgICAgLnd1amktZm9udC1ub3MoVF9YMDEsIE1fVF9YMDA4KTtcbiAgICAgICAgICAgIC53dWppLWNvbG9yKENBTV9YMzcwKTsgLy8gLVxuICAgICAgICB9XG5cbiAgICAgICAgLm9uZUxpbmUsXG4gICAgICAgIC50d29MaW5lIHtcbiAgICAgICAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICAgICAgZmxleDogMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC53LWNvbCB7XG4gICAgICAgICAgICBmbGV4LXNocmluazogMDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIOWbvueJh+aJqeWxleS/oeaBr1xuICAgIC5pbWdFeHRDb250YWluZXIge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgIH1cblxuICAgIC8vIOWQhOe6p+WFg+e0oFxuICAgIC5saW5lV3JhcCxcbiAgICAubGluZUluTGlzdCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxuXG4gICAgLmxpbmVJbkxpc3Qge1xuICAgICAgICAud3VqaS1tdChNX0hfWDAwMik7XG5cbiAgICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLmltZ0ljb24ge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgaGVpZ2h0OiA0MnByO1xuICAgICAgICBtaW4td2lkdGg6IDQycHI7XG4gICAgICAgIG1heC13aWR0aDogMjQ5cHI7XG4gICAgfVxuXG4gICAgLmxldmVsQnV0dG9uIHtcbiAgICAgICAgZmxleC1zaHJpbms6IDA7XG4gICAgICAgIHdpZHRoOiAyMTNwcjtcbiAgICAgICAgaGVpZ2h0OiA4NHByO1xuICAgIH1cblxuICAgIC5idXR0b25CdXkge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG5cbiAgICAvLyDov5vluqbmnaFcbiAgICAucHJvZ3Jlc3Mge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDE4cHI7XG5cbiAgICAgICAgJkNvbnRhaW5lciB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIC53dWppLWNvbG9yKENBTV9YNDg2KTsgLy8gLVxuICAgICAgICB9XG5cbiAgICAgICAgLmxpbmUsXG4gICAgICAgIC50cmFjayB7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBmaWxsOiBjdXJyZW50Q29sb3I7XG4gICAgICAgICAgICAud3VqaS1ib3JkZXItcmFkaXVzKEpfWDA2KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5saW5lIHtcbiAgICAgICAgICAgIHdpZHRoOiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgLnRyYWNrIHtcbiAgICAgICAgICAgIG9wYWNpdHk6IDAuMjtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB9XG5cbiAgICAgICAgLnRleHQge1xuICAgICAgICAgICAgLnd1amktbWwoTV9XX1gwMDMpO1xuICAgICAgICAgICAgZmxleC1zaHJpbms6IDA7XG4gICAgICAgICAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8g5YWD57Sg6Ze06LedXG4gICAgLmltZ0ljb24sXG4gICAgLml0ZW1HYXAge1xuICAgICAgICAud3VqaS1tcihNX1dfWDAwMik7XG4gICAgfVxuXG4gICAgLy8g5qCH562+6ZuGXG4gICAgLnRhZ1dyYXAge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgfVxuXG4gICAgLnRhZ0l0ZW0ge1xuICAgICAgICAud3VqaS1weChNX1dfWDAxMSk7XG4gICAgICAgIC53dWppLWxpbmUoTF9YMDEsIGFyb3VuZCwgQHJhZGl1czogSl9YMDYpO1xuICAgICAgICBoZWlnaHQ6IDQ4cHI7XG4gICAgICAgIGZvbnQtc2l6ZTogMzBwcjtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDQ4cHI7XG4gICAgICAgIGNvbG9yOiAjNjY2O1xuXG4gICAgICAgICY6OmFmdGVyIHtcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogY3VycmVudENvbG9yO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8g5paH5a2X5oiq5patXG4gICAgLm9uZUxpbmUge1xuICAgICAgICAubGluZS1jbGFtcCgxKTtcbiAgICB9XG5cbiAgICAudHdvTGluZSB7XG4gICAgICAgIC5saW5lLWNsYW1wKDIpO1xuICAgIH1cblxuICAgIC50cmlMaW5lIHtcbiAgICAgICAgLmxpbmUtY2xhbXAoMyk7XG4gICAgfVxuXG4gICAgLy8g55+t56uW57q/XG4gICAgLnZsaW5lIHtcbiAgICAgICAgLnd1amktbGluZShMX1gwMSwgbGVmdCwgQ0FNX1g3OTIpOyAvLyAtXG4gICAgICAgIC53dWppLW14KE1fV19YMDAzKTtcbiAgICAgICAgaGVpZ2h0OiAzM3ByO1xuICAgIH1cblxuICAgIC8vIOW6lemDqHRhYlxuICAgIC50YWJDb250YWluZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAud3VqaS1teShGX01fSF9YMDAyKTtcbiAgICAgICAgLnd1amktbXgoRl9NX1dfWDA0Nyk7XG5cbiAgICAgICAgLnRhYkl0ZW0ge1xuICAgICAgICAgICAgLnd1amktbXIoTV9XX1gwMDMpOyAvLyDkuJrliqHnvJbnoIHmnKrnn6VcbiAgICAgICAgICAgIC53dWppLWJvcmRlci1yYWRpdXMoSl9YMTUpO1xuICAgICAgICAgICAgLnd1amktYmFja2dyb3VuZChDQU1fWDQwNCk7IC8vIEdDMTJcbiAgICAgICAgICAgIC53dWppLWNvbG9yKENBTV9YNzkxKTsgLy8gR0MyXG4gICAgICAgICAgICAud3VqaS1mb250LW9uZS1saW5lKFRfWDA2KTtcbiAgICAgICAgICAgIGZsZXg6IDE7XG4gICAgICAgICAgICBoZWlnaHQ6IDg0cHI7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogODRwcjtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgICAgICAgICAgJjphY3RpdmUge1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuMjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyDmoIfnrb7jgIF0YWfnrYnpl7Tot51cbiAgICAuY291cG9uVGFnLFxuICAgIC50YWdJdGVtLFxuICAgIC5sZXZlbDMgLm9uZUxpbmUsXG4gICAgLmxldmVsNCAub25lTGluZSB7XG4gICAgICAgIGZsZXgtc2hyaW5rOiAwO1xuICAgICAgICAud3VqaS1tcihNX1dfWDAwNSk7XG5cbiAgICAgICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIOiDtuWbiuagt+W8j1xuICAgIC5pbWdJY29uV3JhcCB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIH1cblxuICAgIC5iaWdJY29uIHtcbiAgICAgICAgd2lkdGg6IDg0cHI7XG4gICAgICAgIGhlaWdodDogODRwcjtcbiAgICB9XG5cbiAgICAuY2Fwc3VsZSB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgLnd1amktcmlnaHQoTV9XX1gwMDMpO1xuICAgICAgICAud3VqaS1ib3R0b20oTV9IX1gwMDIpO1xuICAgIH1cblxuICAgIC5jYXBzdWxlSWNvbiB7XG4gICAgICAgIC8vIG1hcmdpbi10b3A6IDE1cHI7d3VqaTptYXJnaW4vcGFkZGluZ1xuICAgICAgICAud3VqaS1tdChNX0hfWDAxMik7XG4gICAgICAgIHdpZHRoOiAzMHByO1xuICAgICAgICBoZWlnaHQ6IDMwcHI7XG4gICAgfVxuXG4gICAgLy8g55u05pKt5qC35byPXG4gICAgLnZpZGVvV3JhcCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuXG4gICAgICAgIC5sYWJlbFdyYXAge1xuICAgICAgICAgICAgLnd1amktcGFkZGluZyhNX1dfWDAwMik7XG4gICAgICAgIH1cblxuICAgICAgICAudmlkZW9UZXh0IHtcbiAgICAgICAgICAgIGZsZXg6IDE7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsIHJnYmEoMCwgMCwgMCwgMC4zKSwgcmdiYSgwLCAwLCAwLCAwKSA3MnByKTtcbiAgICAgICAgICAgIC53dWppLXBhZGRpbmcoTV9XX1gwMDIpO1xuICAgICAgICAgICAgLnd1amktZm9udC1vbmUtbGluZShUX1gxMyk7XG4gICAgICAgICAgICAud3VqaS1jb2xvcihDQU1fWDc4MCk7IC8vIC1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIOebtOaSreWKqOaViOWbvuagh1xuICAgIC5saXZlSWNvbiB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgICAgc3Ryb2tlOiBub25lO1xuICAgICAgICBmaWxsOiBjdXJyZW50Q29sb3I7XG5cbiAgICAgICAgLmxpbmUge1xuICAgICAgICAgICAgYW5pbWF0aW9uOiBsaXZlV2F2ZSAwLjY4cyBsaW5lYXIgaW5maW5pdGU7XG4gICAgICAgIH1cblxuICAgICAgICAubGluZTEge1xuICAgICAgICAgICAgYW5pbWF0aW9uLWRlbGF5OiAtMC4zNHM7XG4gICAgICAgIH1cblxuICAgICAgICAubGluZTIge1xuICAgICAgICAgICAgYW5pbWF0aW9uLWRlbGF5OiAwLjE3cztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBrZXlmcmFtZXMgbGl2ZVdhdmUge1xuICAgICAgICAwJSB7XG4gICAgICAgICAgICBoZWlnaHQ6IDMwJTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgzNSUpO1xuICAgICAgICB9XG5cbiAgICAgICAgMjUlIHtcbiAgICAgICAgICAgIGhlaWdodDogNzAlO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDE1JSk7XG4gICAgICAgIH1cblxuICAgICAgICA1MCUge1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgICAgICB9XG5cbiAgICAgICAgNzUlIHtcbiAgICAgICAgICAgIGhlaWdodDogNzAlO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDE1JSk7XG4gICAgICAgIH1cblxuICAgICAgICAxMDAlIHtcbiAgICAgICAgICAgIGhlaWdodDogMzAlO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDM1JSk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCIvKipcbiAqIEBmaWxlIGZvbnQgbWl4aW5zXG4gKiBAYXV0aG9yIFNoZWV0YSh3dWhheWFvQGdtYWlsLmNvbSlcbiAqL1xuXG4vLyDlrZflvaJcbi53dWppLWZvbnQtd2VpZ2h0KEBjb2RlOiB1bmRlZmluZWQpIHdoZW4gKGRlZmF1bHQoKSkge1xuICAgIGZvbnQtd2VpZ2h0OiBnZXRGb250V2VpZ2h0KEBjb2RlKTtcblxuICAgICYgd2hlbiAoZ2V0Rm9udFdlaWdodChAY29kZSkgPSA2MDApIGFuZCBub3QgKEBmYWtlLWZvbnQtd2VpZ2h0LTYwMCA9IGZhbHNlKSB7XG4gICAgICAgIEB7c2VsZWN0b3ItYW5kcm9pZH0gJiB7XG4gICAgICAgICAgICBmb250LXdlaWdodDogdW5zZXQ7XG4gICAgICAgICAgICAtd2Via2l0LXRleHQtc3Ryb2tlLXdpZHRoOiAxLjJwcjtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8g5a2X5Y+3XG4ud3VqaS1mb250LXNpemUoQGNvZGU6IHVuZGVmaW5lZCwgQGRwcjogQGRwciwgQHVuaXQ6IEB1bml0KSB7XG4gICAgZm9udC1zaXplOiBhZGRVbml0KGdldEZvbnRTaXplKEBjb2RlKSwgQGRwciwgQHVuaXQpO1xufVxuXG4vLyDooYzpq5g95a2X5Y+357yW56CBK+mXtOi3nee8lueggVxuLnd1amktbGluZS1oZWlnaHQoQGZvbnQtc2l6ZSwgQGxpbmUtc3BhY2luZywgQGRwcjogQGRwciwgQHVuaXQ6IEB1bml0KSB7XG4gICAgbGluZS1oZWlnaHQ6IGFkZFVuaXQoZ2V0Rm9udFNpemUoQGZvbnQtc2l6ZSkgKyBnZXRTcGFjaW5nKEBsaW5lLXNwYWNpbmcpLCBAZHByLCBAdW5pdCk7XG59XG5cbi8vIOS9v+eUqOmXtOi3neiuvue9ruWtl+S9k+ihjOmrmO+8jOmAgueUqOS6juWkmuihjOaWh+acrFxuLnd1amktZm9udChAZm9udC1zaXplLCBAbGluZS1zcGFjaW5nLCBAZm9udC13ZWlnaHQ6IEZfWDAxLCBAZHByOiBAZHByLCBAdW5pdDogQHVuaXQpIHtcbiAgICAud3VqaS1mb250LXNpemUoQGZvbnQtc2l6ZSwgQGRwciwgQHVuaXQpO1xuICAgIC53dWppLWZvbnQtd2VpZ2h0KEBmb250LXdlaWdodCk7XG4gICAgLnd1amktbGluZS1oZWlnaHQoQGZvbnQtc2l6ZSwgQGxpbmUtc3BhY2luZywgQGRwciwgQHVuaXQpO1xufVxuXG4vLyAud3VqaS1mb250LW5vLW91dC1zcGFjaW5nIOe8qeWGme+8jOWNs+aWh+acrOesrOS4gOihjOmhtumDqOS4juWuueWZqOmhtumDqO+8jOacgOWQjuS4gOihjOW6lemDqOS4juWuueWZqOW6lemDqOayoeaciemXtOi3ne+8jOmAmui/h+iuvue9rui0nyBtYXJnaW4g5b6X5YiwXG4ud3VqaS1mb250LW5vcyhAZm9udC1zaXplLCBAbGluZS1zcGFjaW5nLCBAZm9udC13ZWlnaHQ6IEZfWDAxLCBAZHByOiBAZHByLCBAdW5pdDogQHVuaXQpIHtcbiAgICAud3VqaS1mb250KEBmb250LXNpemUsIEBsaW5lLXNwYWNpbmcsIEBmb250LXdlaWdodCwgQGRwciwgQHVuaXQpO1xuICAgIC53dWppLW15KEBsaW5lLXNwYWNpbmcsIEBkcHIsIEB1bml0ICogLTAuNSk7XG59XG5cbi8vIOS9v+eUqOWAjeaVsOiuvue9ruWtl+S9k+ihjOmrmO+8jOmAgueUqOS6juWNleihjOaWh+acrFxuLnd1amktZm9udC1vbmUtbGluZShAZm9udC1zaXplLCBAbGluZS1oZWlnaHQ6IDEsIEBmb250LXdlaWdodDogRl9YMDEsIEBkcHI6IEBkcHIsIEB1bml0OiBAdW5pdCkge1xuICAgIC53dWppLWZvbnQtc2l6ZShAZm9udC1zaXplLCBAZHByLCBAdW5pdCk7XG4gICAgLnd1amktZm9udC13ZWlnaHQoQGZvbnQtd2VpZ2h0KTtcbiAgICBsaW5lLWhlaWdodDogQGxpbmUtaGVpZ2h0O1xufVxuIiwiLyoqXG4gKiBAZmlsZSBjb2xvciBtaXhpbnNcbiAqIEBhdXRob3Igd3VqaS5iYWlkdS1pbnQuY29tXG4gKlxuICog5Yy65Yir5LqOY29sb3LjgIFiYWNrZ3JvdW5kLWNvbG9y44CBYm9yZGVyLWNvbG9y562J5Y+X5YWo5bGAZGFyay1tb2Rl5ZKMbmlnaHQtbW9kZeWPmOmHj+W9seWTjeOAglxuICogZmlsbOWxnuaAp+WPr+S7peWumuS5ieWxgOmDqOWPmOmHj25pZ2h0LW1vZGXvvIzov5nlnKjlhbPpl63lpJzpl7TmqKHlvI/mg4XlhrXkuIvvvIzlj6/ku6XljZXni6zkv53nlZlzdmfloavlhYXpopzoibJmaWxs5bGe5oCn44CCXG4gKiDnqbblhbbljp/lm6DvvJrnmb7luqZBUFDlronljZPlpJzpl7TmqKHlvI/kuIvvvIzln7rmnKznmoTpopzoibLlsZ7mgKfkuI3og73pgJrov4djc3PlrprkuYnnlJ/mlYjvvIxzdmfnmoTpopzoibLlsZ7mgKfkvovlpJbjgILlu7rorq7oh6rooYzmtYvor5Xpqozor4HlkoznkIbop6PjgIJcbiAqL1xuXG4vLyBUT0RPOiDkvb/nlKhjc3Plj5jph49cbi8vIC51c2UtY3NzdmFyKCkge31cblxuLy8gbWl4aW46IOeUn+aIkOiDjOaZr+minOiJslxuLnd1amktYmFja2dyb3VuZC1jb2xvcihAY29kZTogdW5kZWZpbmVkKSB7XG4gICAgQGNvbG9yLWRlZmF1bHQ6IGdldENvbG9yKEBjb2RlKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAY29sb3ItZGVmYXVsdDtcblxuICAgICYgd2hlbiAoQG11bHRpLW1vZGUgPSB0cnVlKSBhbmQgKEBkYXJrLW1vZGUgPSB0cnVlKSB7XG4gICAgICAgIEBjb2xvci1kYXJrOiBnZXRDb2xvcihAY29kZSwgZGFyayk7XG5cbiAgICAgICAgJiB3aGVuIChAZm9yY2UtZGFyay1vdXRwdXQgPSB0cnVlKSwgbm90IChAY29sb3ItZGFyayA9ICdudWxsJykgYW5kIG5vdCAoQGNvbG9yLWRhcmsgPSBAY29sb3ItZGVmYXVsdCkge1xuICAgICAgICAgICAgQHtzZWxlY3Rvci1kYXJrfSAmIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAY29sb3ItZGFyaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICYgd2hlbiAoQG11bHRpLW1vZGUgPSB0cnVlKSBhbmQgKEBuaWdodC1tb2RlID0gdHJ1ZSkge1xuICAgICAgICBAY29sb3ItbmlnaHQ6IGdldENvbG9yKEBjb2RlLCBuaWdodCk7XG5cbiAgICAgICAgJiB3aGVuIG5vdCAoQGNvbG9yLW5pZ2h0ID0gJ251bGwnKSBhbmQgbm90IChAY29sb3ItbmlnaHQgPSBAY29sb3ItZGVmYXVsdCkge1xuICAgICAgICAgICAgQHtzZWxlY3Rvci1uaWdodH0gJiB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogQGNvbG9yLW5pZ2h0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgJiB3aGVuIChAbXVsdGktbW9kZSA9IHRydWUpIGFuZCBub3QgKEBzZWxlY3Rvci1kZWZhdWx0ID0gJycpIHtcbiAgICAgICAgQHtzZWxlY3Rvci1kZWZhdWx0fSAmIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IEBjb2xvci1kZWZhdWx0O1xuICAgICAgICB9XG4gICAgfVxufVxuXG4vLyBtaXhpbjog5re75Yqg5Yy65YiG5qih5byP55qE6IOM5pmv5Zu+54mHKOWPr+e9ruS6juWFqOWxgG1peGlu5LitKVxuLnd1amktYmFja2dyb3VuZC1pbWFnZShAc3JjOiBudWxsLCBAc3JjLWRhcms6IG51bGwsIEBzcmMtbmlnaHQ6IG51bGwpIHtcbiAgICAmIHdoZW4gbm90IChAc3JjID0gbnVsbCkge1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoQHNyYyk7XG4gICAgfVxuICAgICYgd2hlbiAoQG11bHRpLW1vZGUgPSB0cnVlKSB7XG4gICAgICAgICYgd2hlbiBub3QgKEBzcmMtZGFyayA9IG51bGwpIGFuZCAoQGRhcmstbW9kZSA9IHRydWUpIGFuZCBub3QgKEBzcmMgPSBAc3JjLWRhcmspIHtcbiAgICAgICAgICAgIEB7c2VsZWN0b3ItZGFya30gJiB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKEBzcmMtZGFyayk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgJiB3aGVuIG5vdCAoQHNyYy1uaWdodCA9IG51bGwpIGFuZCAoQG5pZ2h0LW1vZGUgPSB0cnVlKSBhbmQgbm90IChAc3JjID0gQHNyYy1uaWdodCkge1xuICAgICAgICAgICAgQHtzZWxlY3Rvci1uaWdodH0gJiB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKEBzcmMtbmlnaHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4vLyBtaXhpbjog55Sf5oiQ6IOM5pmv6aKc6ImyXG4ud3VqaS1iYWNrZ3JvdW5kKEBjb2RlOiB1bmRlZmluZWQpIHtcbiAgICAud3VqaS1iYWNrZ3JvdW5kLWNvbG9yKEBjb2RlKTtcbn1cblxuLy8gbWl4aW46IOeUn+aIkOaPj+i+ueminOiJslxuLnd1amktYm9yZGVyLWNvbG9yKEBjb2RlOiB1bmRlZmluZWQsIEBwb3NpdGlvbjogYXJvdW5kKSB7XG4gICAgQGNvbG9yLWRlZmF1bHQ6IGdldENvbG9yKEBjb2RlKTtcbiAgICBAcHJvcDogaWYoQHBvc2l0aW9uID0gYXJvdW5kLCBlKCdib3JkZXItY29sb3InKSwgZSgnYm9yZGVyLUB7cG9zaXRpb259LWNvbG9yJykpO1xuICAgIEB7cHJvcH06IEBjb2xvci1kZWZhdWx0O1xuXG4gICAgJiB3aGVuIChAbXVsdGktbW9kZSA9IHRydWUpIGFuZCAoQGRhcmstbW9kZSA9IHRydWUpIHtcbiAgICAgICAgQGNvbG9yLWRhcms6IGdldENvbG9yKEBjb2RlLCBkYXJrKTtcblxuICAgICAgICAmIHdoZW4gKEBmb3JjZS1kYXJrLW91dHB1dCA9IHRydWUpLCBub3QgKEBjb2xvci1kYXJrID0gJ251bGwnKSBhbmQgbm90IChAY29sb3ItZGFyayA9IEBjb2xvci1kZWZhdWx0KSB7XG4gICAgICAgICAgICBAe3NlbGVjdG9yLWRhcmt9ICYge1xuICAgICAgICAgICAgICAgIEB7cHJvcH06IEBjb2xvci1kYXJrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgJiB3aGVuIChAbXVsdGktbW9kZSA9IHRydWUpIGFuZCAoQG5pZ2h0LW1vZGUgPSB0cnVlKSB7XG4gICAgICAgIEBjb2xvci1uaWdodDogZ2V0Q29sb3IoQGNvZGUsIG5pZ2h0KTtcblxuICAgICAgICAmIHdoZW4gbm90IChAY29sb3ItbmlnaHQgPSAnbnVsbCcpIGFuZCBub3QgKEBjb2xvci1uaWdodCA9IEBjb2xvci1kZWZhdWx0KSB7XG4gICAgICAgICAgICBAe3NlbGVjdG9yLW5pZ2h0fSAmIHtcbiAgICAgICAgICAgICAgICBAe3Byb3B9OiBAY29sb3ItbmlnaHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmIHdoZW4gKEBtdWx0aS1tb2RlID0gdHJ1ZSkgYW5kIG5vdCAoQHNlbGVjdG9yLWRlZmF1bHQgPSAnJykge1xuICAgICAgICBAe3NlbGVjdG9yLWRlZmF1bHR9ICYge1xuICAgICAgICAgICAgQHtwcm9wfTogQGNvbG9yLWRlZmF1bHQ7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vIG1peGluOiDnlJ/miJDmj4/ovrnpopzoibJcbi8vIOW9k+esrOS4gOS4quWPguaVsOaYr+WkmuWAvOaDheWGteS4lOWbuuWumumhuuW6jyA8bGluZS13aWR0aD4gPGxpbmUtc3R5bGU+IDxjb2xvcj4g5pe2XG4vLyDkvJrosIPnlKhsaW5lL21peGluLmxlc3PkuK3nmoR3dWppLWJvcmRlcuaWueazle+8jOWPguaVsOekuuS+i++8mjFweCBzb2xpZCByZWRcbi53dWppLWJvcmRlcihAY29kZTogdW5kZWZpbmVkLCBAcG9zaXRpb246IGFyb3VuZCkgd2hlbiAobGVuZ3RoKEBjb2RlKSA9IDEpIHtcbiAgICAud3VqaS1ib3JkZXItY29sb3IoQGNvZGUsIEBwb3NpdGlvbik7XG59XG5cbi8vIG1peG46IOeUn+aIkOS4iuaPj+i+ueminOiJslxuLnd1amktYm9yZGVyLXRvcC1jb2xvcihAY29kZTogdW5kZWZpbmVkKSB7XG4gICAgLnd1amktYm9yZGVyLWNvbG9yKEBjb2RlLCB0b3ApO1xufVxuXG4vLyBtaXhuOiDnlJ/miJDkuIvmj4/ovrnpopzoibJcbi53dWppLWJvcmRlci1ib3R0b20tY29sb3IoQGNvZGU6IHVuZGVmaW5lZCkge1xuICAgIC53dWppLWJvcmRlci1jb2xvcihAY29kZSwgYm90dG9tKTtcbn1cblxuLy8gbWl4bjog55Sf5oiQ5bem5o+P6L656aKc6ImyXG4ud3VqaS1ib3JkZXItbGVmdC1jb2xvcihAY29kZTogdW5kZWZpbmVkKSB7XG4gICAgLnd1amktYm9yZGVyLWNvbG9yKEBjb2RlLCBsZWZ0KTtcbn1cblxuLy8gbWl4bjog55Sf5oiQ5Y+z5o+P6L656aKc6ImyXG4ud3VqaS1ib3JkZXItcmlnaHQtY29sb3IoQGNvZGU6IHVuZGVmaW5lZCkge1xuICAgIC53dWppLWJvcmRlci1jb2xvcihAY29kZSwgcmlnaHQpO1xufVxuXG4vLyBtaXhpbjog55Sf5oiQ5paH5a2X6aKc6ImyXG4ud3VqaS1jb2xvcihAY29kZTogdW5kZWZpbmVkKSB7XG4gICAgQGNvbG9yLWRlZmF1bHQ6IGdldENvbG9yKEBjb2RlKTtcbiAgICBjb2xvcjogQGNvbG9yLWRlZmF1bHQ7XG5cbiAgICAmIHdoZW4gKEBtdWx0aS1tb2RlID0gdHJ1ZSkgYW5kIChAZGFyay1tb2RlID0gdHJ1ZSkge1xuICAgICAgICBAY29sb3ItZGFyazogZ2V0Q29sb3IoQGNvZGUsIGRhcmspO1xuXG4gICAgICAgICYgd2hlbiAoQGZvcmNlLWRhcmstb3V0cHV0ID0gdHJ1ZSksIG5vdCAoQGNvbG9yLWRhcmsgPSAnbnVsbCcpIGFuZCBub3QgKEBjb2xvci1kYXJrID0gQGNvbG9yLWRlZmF1bHQpIHtcbiAgICAgICAgICAgIEB7c2VsZWN0b3ItZGFya30gJiB7XG4gICAgICAgICAgICAgICAgY29sb3I6IEBjb2xvci1kYXJrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgJiB3aGVuIChAbXVsdGktbW9kZSA9IHRydWUpIGFuZCAoQG5pZ2h0LW1vZGUgPSB0cnVlKSB7XG4gICAgICAgIEBjb2xvci1uaWdodDogZ2V0Q29sb3IoQGNvZGUsIG5pZ2h0KTtcblxuICAgICAgICAmIHdoZW4gbm90IChAY29sb3ItbmlnaHQgPSAnbnVsbCcpIGFuZCBub3QgKEBjb2xvci1uaWdodCA9IEBjb2xvci1kZWZhdWx0KSB7XG4gICAgICAgICAgICBAe3NlbGVjdG9yLW5pZ2h0fSAmIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogQGNvbG9yLW5pZ2h0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgJiB3aGVuIChAbXVsdGktbW9kZSA9IHRydWUpIGFuZCBub3QgKEBzZWxlY3Rvci1kZWZhdWx0ID0gJycpIHtcbiAgICAgICAgQHtzZWxlY3Rvci1kZWZhdWx0fSAmIHtcbiAgICAgICAgICAgIGNvbG9yOiBAY29sb3ItZGVmYXVsdDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gbWl4aW46IOeUn+aIkHN2Z+Whq+WFheminOiJslxuLnd1amktZmlsbChAY29kZTogdW5kZWZpbmVkLCBAbmlnaHQtbW9kZTogdHJ1ZSkge1xuICAgIEBjb2xvci1kZWZhdWx0OiBnZXRDb2xvcihAY29kZSk7XG4gICAgZmlsbDogQGNvbG9yLWRlZmF1bHQ7XG5cbiAgICAmIHdoZW4gKEBtdWx0aS1tb2RlID0gdHJ1ZSkgYW5kIChAZGFyay1tb2RlID0gdHJ1ZSkge1xuICAgICAgICBAY29sb3ItZGFyazogZ2V0Q29sb3IoQGNvZGUsIGRhcmspO1xuXG4gICAgICAgICYgd2hlbiAoQGZvcmNlLWRhcmstb3V0cHV0ID0gdHJ1ZSksIG5vdCAoQGNvbG9yLWRhcmsgPSAnbnVsbCcpIGFuZCBub3QgKEBjb2xvci1kYXJrID0gQGNvbG9yLWRlZmF1bHQpIHtcbiAgICAgICAgICAgIEB7c2VsZWN0b3ItZGFya30gJiB7XG4gICAgICAgICAgICAgICAgZmlsbDogQGNvbG9yLWRhcms7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmIHdoZW4gKEBtdWx0aS1tb2RlID0gdHJ1ZSkgYW5kIChAbmlnaHQtbW9kZSA9IHRydWUpIHtcbiAgICAgICAgQGNvbG9yLW5pZ2h0OiBnZXRDb2xvcihAY29kZSwgbmlnaHQpO1xuXG4gICAgICAgICYgd2hlbiBub3QgKEBjb2xvci1uaWdodCA9ICdudWxsJykgYW5kIG5vdCAoQGNvbG9yLW5pZ2h0ID0gQGNvbG9yLWRlZmF1bHQpIHtcbiAgICAgICAgICAgIEB7c2VsZWN0b3ItbmlnaHR9ICYge1xuICAgICAgICAgICAgICAgIGZpbGw6IEBjb2xvci1uaWdodDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICYgd2hlbiAoQG11bHRpLW1vZGUgPSB0cnVlKSBhbmQgbm90IChAc2VsZWN0b3ItZGVmYXVsdCA9ICcnKSB7XG4gICAgICAgIEB7c2VsZWN0b3ItZGVmYXVsdH0gJiB7XG4gICAgICAgICAgICBmaWxsOiBAY29sb3ItZGVmYXVsdDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gbWl4aW46IOeUn+aIkOWFieagh+minOiJslxuLnd1amktY2FyZXQoQGNvZGU6IHVuZGVmaW5lZCkge1xuICAgIEBjb2xvci1kZWZhdWx0OiBnZXRDb2xvcihAY29kZSk7XG4gICAgY2FyZXQtY29sb3I6IEBjb2xvci1kZWZhdWx0O1xuXG4gICAgJiB3aGVuIChAbXVsdGktbW9kZSA9IHRydWUpIGFuZCAoQGRhcmstbW9kZSA9IHRydWUpIHtcbiAgICAgICAgQGNvbG9yLWRhcms6IGdldENvbG9yKEBjb2RlLCBkYXJrKTtcblxuICAgICAgICAmIHdoZW4gKEBmb3JjZS1kYXJrLW91dHB1dCA9IHRydWUpLCBub3QgKEBjb2xvci1kYXJrID0gJ251bGwnKSBhbmQgbm90IChAY29sb3ItZGFyayA9IEBjb2xvci1kZWZhdWx0KSB7XG4gICAgICAgICAgICBAe3NlbGVjdG9yLWRhcmt9ICYge1xuICAgICAgICAgICAgICAgIGNhcmV0LWNvbG9yOiBAY29sb3ItZGFyaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICYgd2hlbiAoQG11bHRpLW1vZGUgPSB0cnVlKSBhbmQgKEBuaWdodC1tb2RlID0gdHJ1ZSkge1xuICAgICAgICBAY29sb3ItbmlnaHQ6IGdldENvbG9yKEBjb2RlLCBuaWdodCk7XG5cbiAgICAgICAgJiB3aGVuIG5vdCAoQGNvbG9yLW5pZ2h0ID0gJ251bGwnKSBhbmQgbm90IChAY29sb3ItbmlnaHQgPSBAY29sb3ItZGVmYXVsdCkge1xuICAgICAgICAgICAgQHtzZWxlY3Rvci1uaWdodH0gJiB7XG4gICAgICAgICAgICAgICAgY2FyZXQtY29sb3I6IEBjb2xvci1uaWdodDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICYgd2hlbiAoQG11bHRpLW1vZGUgPSB0cnVlKSBhbmQgbm90IChAc2VsZWN0b3ItZGVmYXVsdCA9ICcnKSB7XG4gICAgICAgIEB7c2VsZWN0b3ItZGVmYXVsdH0gJiB7XG4gICAgICAgICAgICBjYXJldC1jb2xvcjogQGNvbG9yLWRlZmF1bHQ7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vIG1peGluOiDnlJ/miJDpgI/mmI7luqZcbi53dWppLW9wYWNpdHkoQGNvZGU6IHVuZGVmaW5lZCkge1xuICAgIG9wYWNpdHk6IGdldE9wYWNpdHkoQGNvZGUpO1xufVxuXG4vLyBtaXhpbjog5qC55YWD57Sg5rOo5YWl6buY6K6kY29sb3LjgIFiYWNrZ3JvdW5kLWNvbG9yLCDpu5jorqTmoLnlhYPntKBodG1sXG4ud3VqaS1yb290KFxuICAgIEBjb2xvcjogQ0FNX1g3OTEsIC8vIEdDMVxuICAgIEBiYWNrZ3JvdW5kOiBDQU1fWDM5MiwgLy8gR0M5XG4gICAgQHNlbGVjdG9yLXJvb3Q6IEBzZWxlY3Rvci1yb290LFxuICAgIEBzZWxlY3Rvci1kYXJrOiBAc2VsZWN0b3ItZGFyayxcbiAgICBAc2VsZWN0b3ItbmlnaHQ6IEBzZWxlY3Rvci1uaWdodFxuKSB7XG4gICAgLy8g5aaC5p6c6YCJ5oup5Zmo5Y+C5pWw5piv5a2X56ym5Liy57G75Z6L77yM6ZyA6KaBZXNjYXBlXG4gICAgQHJ1bGUxOiBpZihpc3N0cmluZyhAc2VsZWN0b3Itcm9vdCksIGUoQHNlbGVjdG9yLXJvb3QpLCBAc2VsZWN0b3Itcm9vdCk7XG4gICAgQHJ1bGUyOiBpZihpc3N0cmluZyhAc2VsZWN0b3ItZGFyayksIGUoQHNlbGVjdG9yLWRhcmspLCBAc2VsZWN0b3ItZGFyayk7XG4gICAgQHJ1bGUzOiBpZihpc3N0cmluZyhAc2VsZWN0b3ItbmlnaHQpLCBlKEBzZWxlY3Rvci1uaWdodCksIEBzZWxlY3Rvci1uaWdodCk7XG5cbiAgICBAe3J1bGUxfSB7XG4gICAgICAgIGNvbG9yOiBnZXRDb2xvcihAY29sb3IpO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBnZXRDb2xvcihAYmFja2dyb3VuZCk7XG5cbiAgICAgICAgJiB3aGVuIChAbXVsdGktbW9kZSA9IHRydWUpIGFuZCAoQGRhcmstbW9kZSA9IHRydWUpIHtcbiAgICAgICAgICAgICZAe3J1bGUyfSB7XG4gICAgICAgICAgICAgICAgY29sb3I6IGdldENvbG9yKEBjb2xvciwgRGFyayk7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogZ2V0Q29sb3IoQGJhY2tncm91bmQsIERhcmspO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJiB3aGVuIChAbXVsdGktbW9kZSA9IHRydWUpIGFuZCAoQG5pZ2h0LW1vZGUgPSB0cnVlKSB7XG4gICAgICAgICAgICAmQHtydWxlM30ge1xuICAgICAgICAgICAgICAgIGNvbG9yOiBnZXRDb2xvcihAY29sb3IsIE5pZ2h0KTtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBnZXRDb2xvcihAYmFja2dyb3VuZCwgTmlnaHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuIiwiLyoqXG4gKiBAZmlsZSByYWRpdXMgbWl4aW5zXG4gKiBAYXV0aG9yIFNoZWV0YSh3dWhheWFvQGdtYWlsLmNvbSlcbiAqL1xuXG4vLyBAY29kZTogSl9YKlxuLy8gQHBvc2l0aW9uOiBhcm91bmQsIHRvcC1sZWZ0LCB0b3AtcmlnaHQsIGJvdHRvbS1yaWdodCwgYm90dG9tLWxlZnRcbi8vIEBwc2V1ZG86IGZhbHNlLCBiZWZvcmUsIGFmdGVyXG4ud3VqaS1ib3JkZXItcmFkaXVzKEBjb2RlOiB1bmRlZmluZWQsIEBwb3NpdGlvbjogYXJvdW5kLCBAcHNldWRvOiBmYWxzZSkge1xuICAgIEByYXc6IGdldFJhZGl1cyhAY29kZSk7XG4gICAgQGxlbjogbGVuZ3RoKEByYXcpO1xuXG4gICAgJiB3aGVuIG5vdCAoQGxlbiA9IDEpIGFuZCBub3QgKEBsZW4gPSA0KSB7XG4gICAgICAgIGVycm9yOiBlKCdAe2NvZGV9IHZhbHVlIChAe3Jhd30pIGlzIGludmFsaWQnKTtcbiAgICB9XG5cbiAgICAmIHdoZW4gKEBsZW4gPSAxKSwgKEBsZW4gPSA0KSB7XG4gICAgICAgIC8vIOiuvue9ruWNleS4quWchuinkuaXtu+8jOmZjee6p+S9v+eUqOesrOS4gOS4quWchuinkuWAvFxuICAgICAgICBAdmFsOiBpZihAcG9zaXRpb24gPSBhcm91bmQsIEByYXcsIGV4dHJhY3QoQHJhdywgMSkpO1xuICAgICAgICAvLyDnoa7lrprlnIbop5LlsZ7mgKdcbiAgICAgICAgQHByb3A6IGlmKEBwb3NpdGlvbiA9IGFyb3VuZCwgZSgnYm9yZGVyLXJhZGl1cycpLCBlKCdib3JkZXItQHtwb3NpdGlvbn0tcmFkaXVzJykpO1xuICAgICAgICBAe3Byb3B9OiBhZGRVbml0KEB2YWwsIEBkcHIsIEB1bml0KTtcblxuICAgICAgICAvLyDkvKrlhYPntKDkuK3nmoTlnIbop5LlpoLmnpzmmK/pgJrov4d3dWppLWxpbmUoKeiuvue9rueahO+8jOWboOS4uue8qeWwj+S6hkB1aWtpdC1kcHLlgI3vvIzmiYDku6XpnIDopoHlnKjlsZ7mgKflgLzmt7vliqDlgI3mlbDosIPoioLnvKnmlL7mnaXmirXmtojlpITnkIbjgIJcbiAgICAgICAgJiB3aGVuIChAcHNldWRvID0gYWZ0ZXIpLCAoQHBzZXVkbyA9IGJlZm9yZSkge1xuICAgICAgICAgICAgJjpAe3BzZXVkb30ge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xuXG4gICAgICAgICAgICAgICAgLnNldC1tZWRpYSgxLjUsIHtcbiAgICAgICAgICAgICAgICAgICAgQHtwcm9wfTogYWRkVW5pdChAdmFsLCBAZHByLCBAdW5pdCAqIDEuNSk7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAuc2V0LW1lZGlhKDIsIHtcbiAgICAgICAgICAgICAgICAgICAgQHtwcm9wfTogYWRkVW5pdChAdmFsLCBAZHByLCBAdW5pdCAqIDIpO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgLnNldC1tZWRpYSgzLCB7XG4gICAgICAgICAgICAgICAgICAgIEB7cHJvcH06IGFkZFVuaXQoQHZhbCwgQGRwciwgQHVuaXQgKiAzKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gYWxpYXNcbi53dWppLXJhZGl1cyhAY29kZTogdW5kZWZpbmVkLCBAcG9zaXRpb246IGFyb3VuZCwgQHBzZXVkbzogZmFsc2UpIHtcbiAgICAud3VqaS1ib3JkZXItcmFkaXVzKEBjb2RlLCBAcG9zaXRpb24sIEBwc2V1ZG8pO1xufVxuXG4vLyBib3JkZXItdG9wLWxlZnQtcmFkaXVzXG4ud3VqaS1ib3JkZXItdG9wLWxlZnQtcmFkaXVzKEBjb2RlOiB1bmRlZmluZWQsIEBwc2V1ZG86IGZhbHNlKSB7XG4gICAgLnd1amktYm9yZGVyLXJhZGl1cyhAY29kZSwgdG9wLWxlZnQsIEBwc2V1ZG8pO1xufVxuXG4vLyBib3JkZXItdG9wLXJpZ2h0LXJhZGl1c1xuLnd1amktYm9yZGVyLXRvcC1yaWdodC1yYWRpdXMoQGNvZGU6IHVuZGVmaW5lZCwgQHBzZXVkbzogZmFsc2UpIHtcbiAgICAud3VqaS1ib3JkZXItcmFkaXVzKEBjb2RlLCB0b3AtcmlnaHQsIEBwc2V1ZG8pO1xufVxuXG4vLyBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1c1xuLnd1amktYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXMoQGNvZGU6IHVuZGVmaW5lZCwgQHBzZXVkbzogZmFsc2UpIHtcbiAgICAud3VqaS1ib3JkZXItcmFkaXVzKEBjb2RlLCBib3R0b20tcmlnaHQsIEBwc2V1ZG8pO1xufVxuXG4vLyBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzXG4ud3VqaS1ib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzKEBjb2RlOiB1bmRlZmluZWQsIEBwc2V1ZG86IGZhbHNlKSB7XG4gICAgLnd1amktYm9yZGVyLXJhZGl1cyhAY29kZSwgYm90dG9tLWxlZnQsIEBwc2V1ZG8pO1xufVxuIiwiLyoqXG4gKiBAZmlsZSBsaW5lIG1peGluc1xuICogQGF1dGhvciBTaGVldGEod3VoYXlhb0BnbWFpbC5jb20pXG4gKi9cblxuLy8g6K6+572u57q/5p2h6IOM5pmv6aKc6ImyXG4uc2V0LWJhY2tncm91bmQtY29sb3IoQGNvbG9yKSB7XG4gICAgJiB3aGVuIChpc2NvbG9yKEBjb2xvcikgPSB0cnVlKSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IEBjb2xvcjtcbiAgICB9XG4gICAgJiB3aGVuIChpc2NvbG9yKEBjb2xvcikgPSBmYWxzZSkge1xuICAgICAgICAud3VqaS1iYWNrZ3JvdW5kKEBjb2xvcik7XG4gICAgfVxufVxuXG4vLyBoYWNrOiDlronljZPlpJzpl7TmqKHlvI8xcHjnnIvkuI3muIXvvIzpgJrov4flnKjkvKrlhYPntKA6YWZ0ZXLkuIrlrprkuYlyZ2Jh6aKc6Imy5ZCO5YaN5b6u6LCD6YCP5piO5bqmXG4vLyAuaGFpcmxpbmUtbmlnaHRtb2RlKCkge1xuLy8gICAgIEB7c2VsZWN0b3ItbmlnaHR9ICY6YWZ0ZXIge1xuLy8gICAgICAgICBib3JkZXItY29sb3I6IHJnYmEoMCwgMCwgMCwgLjkpO1xuLy8gICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIC4wMSk7XG4vLyAgICAgICAgIG9wYWNpdHk6IC4zO1xuLy8gICAgIH1cbi8vIH1cblxuLy8g5Y2V54us6K6+572u6L655qGG5a695bqm5bGe5oCnXG4ud3VqaS1ib3JkZXItd2lkdGgoQGNvZGUsIEBwb3NpdGlvbjogYXJvdW5kKSB7XG4gICAgLy8g56Gu5a6a6L655qGG5bGe5oCnXG4gICAgQHByb3A6IGlmKEBwb3NpdGlvbiA9IGFyb3VuZCwgZSgnYm9yZGVyLXdpZHRoJyksIGUoJ2JvcmRlci1Ae3Bvc2l0aW9ufS13aWR0aCcpKTtcbiAgICBAe3Byb3B9OiBhZGRVbml0KGdldExpbmUoQGNvZGUpLCBAZHByLCBAdW5pdCk7XG59XG4vLyDljZXni6zorr7nva7kuIrovrnmoYblrr3luqbihpFcbi53dWppLWJvcmRlci10b3Atd2lkdGgoQGNvZGUpIHtcbiAgICAud3VqaS1ib3JkZXItd2lkdGgoQGNvZGUsIHRvcCk7XG59XG4vLyDljZXni6zorr7nva7lj7PovrnmoYblrr3luqbihpJcbi53dWppLWJvcmRlci1yaWdodC13aWR0aChAY29kZSkge1xuICAgIC53dWppLWJvcmRlci13aWR0aChAY29kZSwgcmlnaHQpO1xufVxuLy8g5Y2V54us6K6+572u5LiL6L655qGG5a695bqm4oaTXG4ud3VqaS1ib3JkZXItYm90dG9tLXdpZHRoKEBjb2RlKSB7XG4gICAgLnd1amktYm9yZGVyLXdpZHRoKEBjb2RlLCBib3R0b20pO1xufVxuLy8g5Y2V54us6K6+572u5bem6L655qGG5a695bqm4oaQXG4ud3VqaS1ib3JkZXItbGVmdC13aWR0aChAY29kZSkge1xuICAgIC53dWppLWJvcmRlci13aWR0aChAY29kZSwgbGVmdCk7XG59XG5cbi8vIOiuvue9rui+ueahhuagt+W8j++8jOWPguaVsOivtOaYju+8mlxuLy8gQHBhcmFtczog56ys5LiA6aG55Y+v5Lul5piv5pWw5YC85oiW57q/5p2h57yW56CB77yM56ys5LiJ6aG55Y+v5Lul5piv6aKc6Imy5YC85oiWQ0FN57yW56CBXG4vLyBAcG9zaXRpb246IGFyb3VuZC90b3AvcmlnaHQvYm90dG9tL2xlZnRcbi53dWppLWJvcmRlcihAcGFyYW1zLCBAcG9zaXRpb246IGFyb3VuZCkgd2hlbiAobGVuZ3RoKEBwYXJhbXMpID0gMykge1xuICAgIEBib3JkZXItcHJvcDogaWYoQHBvc2l0aW9uID0gYXJvdW5kLCBlKCdib3JkZXInKSwgZSgnYm9yZGVyLUB7cG9zaXRpb259JykpO1xuICAgIC8vIOWuveW6puS4jeaYr+aVsOWtl+aXtuaMiee8lueggeWPluWAvFxuICAgIEB0bXAtd2lkdGg6IGV4dHJhY3QoQHBhcmFtcywgMSk7XG4gICAgLy8gQHdpZHRoOiBpZihpc251bWJlcihAdG1wLXdpZHRoKSwgQHRtcC13aWR0aCwgYWRkVW5pdChnZXRMaW5lKEB0bXAtd2lkdGgpLCBAZHByLCBAdW5pdCkpO1xuICAgIEBzdHlsZTogZXh0cmFjdChAcGFyYW1zLCAyKTtcbiAgICBAY29sb3I6IGV4dHJhY3QoQHBhcmFtcywgMyk7XG5cbiAgICAvLyBlZzogMXB4IHNvbGlkIHJlZFxuICAgICYgd2hlbiAoaXNjb2xvcihAY29sb3IpKSBhbmQgKGlzbnVtYmVyKEB0bXAtd2lkdGgpKSB7XG4gICAgICAgIEB7Ym9yZGVyLXByb3B9OiBAdG1wLXdpZHRoIEBzdHlsZSBAY29sb3I7XG4gICAgfVxuXG4gICAgLy8gZWc6IExfWDAzIGRhc2hlZCByZWRcbiAgICAmIHdoZW4gKGlzY29sb3IoQGNvbG9yKSkgYW5kIG5vdCAoaXNudW1iZXIoQHRtcC13aWR0aCkpIHtcbiAgICAgICAgQHdpZHRoOiBhZGRVbml0KGdldExpbmUoQHRtcC13aWR0aCksIEBkcHIsIEB1bml0KTtcbiAgICAgICAgQHtib3JkZXItcHJvcH06IEB3aWR0aCBAc3R5bGUgQGNvbG9yO1xuICAgIH1cblxuICAgIC8vIGVnOiAxcHggc29saWQgQ0FNX1gwMDFcbiAgICAmIHdoZW4gbm90IChpc2NvbG9yKEBjb2xvcikpIGFuZCAoaXNudW1iZXIoQHRtcC13aWR0aCkpIHtcbiAgICAgICAgQHtib3JkZXItcHJvcH06IEB0bXAtd2lkdGggQHN0eWxlO1xuICAgICAgICAud3VqaS1ib3JkZXItY29sb3IoQGNvbG9yLCBAcG9zaXRpb24pO1xuICAgIH1cblxuICAgIC8vIGVnOiBMX1gwMyBzb2xpZCBDQU1fWDAwMVxuICAgICYgd2hlbiBub3QgKGlzY29sb3IoQGNvbG9yKSkgYW5kIG5vdCAoaXNudW1iZXIoQHRtcC13aWR0aCkpIHtcbiAgICAgICAgQHdpZHRoOiBhZGRVbml0KGdldExpbmUoQHRtcC13aWR0aCksIEBkcHIsIEB1bml0KTtcbiAgICAgICAgQHtib3JkZXItcHJvcH06IEB3aWR0aCBAc3R5bGU7XG4gICAgICAgIC53dWppLWJvcmRlci1jb2xvcihAY29sb3IsIEBwb3NpdGlvbik7XG4gICAgfVxufVxuLy8g5Y2V54us6K6+572u5LiK6L655qGG5qC35byP4oaRXG4ud3VqaS1ib3JkZXItdG9wKEBwYXJhbXMpIHtcbiAgICAud3VqaS1ib3JkZXIoQHBhcmFtcywgdG9wKTtcbn1cbi8vIOWNleeLrOiuvue9ruWPs+i+ueahhuagt+W8j+KGklxuLnd1amktYm9yZGVyLXJpZ2h0KEBwYXJhbXMpIHtcbiAgICAud3VqaS1ib3JkZXIoQHBhcmFtcywgcmlnaHQpO1xufVxuLy8g5Y2V54us6K6+572u5LiL6L655qGG5qC35byP4oaTXG4ud3VqaS1ib3JkZXItYm90dG9tKEBwYXJhbXMpIHtcbiAgICAud3VqaS1ib3JkZXIoQHBhcmFtcywgYm90dG9tKTtcbn1cbi8vIOWNleeLrOiuvue9ruW3pui+ueahhuagt+W8j+KGkFxuLnd1amktYm9yZGVyLWxlZnQoQHBhcmFtcykge1xuICAgIC53dWppLWJvcmRlcihAcGFyYW1zLCBsZWZ0KTtcbn1cblxuLy8g5Lul5a655Zmo5YWD57SgYm9yZGVy5bGe5oCn5a6e546w57q/5p2h5pe255qE5qC35byPXG4vLyBAY29kZTogTF9YKlxuLy8gQHBvc2l0aW9uOiBhcm91bmQvdG9wL3JpZ2h0L2JvdHRvbS9sZWZ0XG4vLyBAY29sb3I6IGNvbG9yL0NBTV9YKlxuLy8gQHJhZGl1czogSl9YKlxuLnd1amktbGluZShAY29kZTogTF9YMDMsIEBwb3NpdGlvbjogYXJvdW5kLCBAY29sb3I6ICMwMDAsIEByYWRpdXM6IGZhbHNlKSB7XG4gICAgLy8g5Yik5pat5piv5ZCm6ZyA6KaB5re75Yqg5Lyq5YWD57SgXG4gICAgQHBzZXVkbzogaWYoZ2V0TGluZShAY29kZSkgPCAzLCBhZnRlciwgZmFsc2UpO1xuXG4gICAgLy8g57q/5p2h5a695bqm5LiN5bCP5LqOM+aXtua3u+WKoOi+ueahhuagt+W8j1xuICAgICYgd2hlbiAoQHBzZXVkbyA9IGZhbHNlKSB7XG4gICAgICAgIC53dWppLWJvcmRlcihAY29kZSBzb2xpZCBAY29sb3IsIEBwb3NpdGlvbik7XG4gICAgfVxuXG4gICAgLy8g57q/5p2h5a695bqm5bCP5LqOM+aXtua3u+WKoOS8quWFg+e0oFxuICAgICYgd2hlbiAoQHBzZXVkbyA9IGFmdGVyKSB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgb3ZlcmZsb3c6IHZpc2libGU7XG5cbiAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IDAgMDtcbiAgICAgICAgICAgIC53dWppLWJvcmRlcihpZihAY29kZSA9IExfWDAxLCAxcHgsIDJweCkgc29saWQgQGNvbG9yLCBAcG9zaXRpb24pO1xuICAgICAgICB9XG5cbiAgICAgICAgLnNldC1tZWRpYSgxLjUsIHtcbiAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxNTAlO1xuICAgICAgICAgICAgICAgIGhlaWdodDogMTUwJTtcbiAgICAgICAgICAgICAgICAvLyBsZXNzNOS7peS4i1xuICAgICAgICAgICAgICAgIC8vIHRyYW5zZm9ybTogc2NhbGUoMSAvIDEuNSk7XG4gICAgICAgICAgICAgICAgLy8gbGVzczTku6XkuIrvvIzpmaTov5DnrpfopoHpop3lpJbkvb/nlKjmi6zlj7fmi6zotbfmnaVcbiAgICAgICAgICAgICAgICAvLyB0cmFuc2Zvcm06IHNjYWxlKCgxIC8gMS41KSk7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjY2NjY2NjY3KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgLnNldC1tZWRpYSgyLCB7XG4gICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICB3aWR0aDogMjAwJTtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDIwMCU7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICAuc2V0LW1lZGlhKDMsIHtcbiAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICAgIHdpZHRoOiAzMDAlO1xuICAgICAgICAgICAgICAgIGhlaWdodDogMzAwJTtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuMzMzMzMzMzMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyDmjInlnIbop5LnvJbnoIHmt7vliqDlnIbop5JcbiAgICAmIHdoZW4gbm90IChAcmFkaXVzID0gZmFsc2UpIHtcbiAgICAgICAgLnd1amktYm9yZGVyLXJhZGl1cyhAcmFkaXVzLCBhcm91bmQsIEBwc2V1ZG8pO1xuICAgIH1cbn1cblxuLy8g5Lul5YWD57Sg5a696auY5a6e546w57q/5p2h5pe255qE5qC35byPXG4vLyBAY29kZTogTF9YKlxuLy8gQGNvbG9yOiBjb2xvci9DQU1fWCpcbi8vIEBkaXJlY3Rpb246IGhvcml6b250YWwvdmVydGljYWxcbi8vIEB3aWR0aDogaG9yaXpvbnRhbOaXtuacieaViFxuLy8gQGhlaWdodDogdmVydGljYWzml7bmnInmlYhcbi53dWppLWRpdmlkZXIoQGNvZGU6IExfWDAzLCBAY29sb3I6IHRyYW5zcGFyZW50LCBAZGlyZWN0aW9uOiBob3Jpem9udGFsLCBAd2lkdGg6IGF1dG8sIEBoZWlnaHQ6IGF1dG8pIHtcbiAgICAvLyDliKTmlq3mmK/lkKbpnIDopoHmt7vliqDkvKrlhYPntKBcbiAgICBAcHNldWRvOiBpZihnZXRMaW5lKEBjb2RlKSA8IDMsIGFmdGVyLCBmYWxzZSk7XG4gICAgLy8g57q/5a695bGe5oCnXG4gICAgQGxpbmUtcHJvcDogaWYoQGRpcmVjdGlvbiA9IGhvcml6b250YWwsIGhlaWdodCwgd2lkdGgpO1xuICAgIC8vIOe6v+mVv+WxnuaAp1xuICAgIEBzaXplLXByb3A6IGlmKEBkaXJlY3Rpb24gPSBob3Jpem9udGFsLCB3aWR0aCwgaGVpZ2h0KTtcbiAgICAvLyDorr7nva7nur/plb9cbiAgICBAe3NpemUtcHJvcH06IGlmKEBzaXplLXByb3AgPSB3aWR0aCwgQHdpZHRoLCBAaGVpZ2h0KTtcblxuICAgIC8vIOe6v+adoeWuveW6puS4jeWwj+S6jjPml7bmt7vliqDovrnmoYbmoLflvI9cbiAgICAmIHdoZW4gKEBwc2V1ZG8gPSBmYWxzZSkge1xuICAgICAgICAvLyDorr7nva7nur/lrr1cbiAgICAgICAgQHtsaW5lLXByb3B9OiBhZGRVbml0KGdldExpbmUoQGNvZGUpLCBAZHByLCBAdW5pdCk7XG4gICAgICAgIC8vIOa3u+WKoOiDjOaZr+iJslxuICAgICAgICAuc2V0LWJhY2tncm91bmQtY29sb3IoQGNvbG9yKTtcbiAgICB9XG5cbiAgICAvLyDnur/mnaHlrr3luqblsI/kuo4z5pe25re75Yqg5Lyq5YWD57Sg77yM5pys6Lqr5Y2g5a695bqmMXB4XG4gICAgJiB3aGVuIChAcHNldWRvID0gYWZ0ZXIpIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgQHtsaW5lLXByb3B9OiAxcHg7XG5cbiAgICAgICAgLy8g5rC05bmz5pa55ZCR5oyJWei9tOe8qeaUvu+8jOWeguebtOaWueWQkeaMiVjovbTnvKnmlL5cbiAgICAgICAgQHNjYWxlOiBpZihAZGlyZWN0aW9uID0gaG9yaXpvbnRhbCwgc2NhbGVZLCBzY2FsZVgpO1xuXG4gICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogMCAwO1xuICAgICAgICAgICAgQHtsaW5lLXByb3B9OiBpZihAY29kZSA9IExfWDAxLCAxcHgsIDJweCk7XG4gICAgICAgICAgICBAe3NpemUtcHJvcH06IDEwMCU7XG4gICAgICAgICAgICAuc2V0LWJhY2tncm91bmQtY29sb3IoQGNvbG9yKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5zZXQtbWVkaWEoMS41LCB7XG4gICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IGUoJSgnQHtzY2FsZX0oJWQpJywgMC42NjY2NjY2NykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICAuc2V0LW1lZGlhKDIsIHtcbiAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogZSglKCdAe3NjYWxlfSglZCknLCAwLjUpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgLnNldC1tZWRpYSgzLCB7XG4gICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IGUoJSgnQHtzY2FsZX0oJWQpJywgMC4zMzMzMzMzMykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG4iLCIvKipcbiAqIEBmaWxlIGNvbW1vbiBtaXhpbnNcbiAqIEBhdXRob3IgU2hlZXRhKHd1aGF5YW9AZ21haWwuY29tKVxuICovXG5cbi8vIOagueaNruWxj+W5leWvhuW6pua3u+WKoOagt+W8jyAxLjUvMi8zXG4uc2V0LW1lZGlhKEBkcHIsIEBydWxlc2V0KSB7XG4gICAgQG1lZGlhLTE6IH4nKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMS4yKSwgKC13ZWJraXQtbWF4LWRldmljZS1waXhlbC1yYXRpbzogMS41KSwgKG1pbi1yZXNvbHV0aW9uOiAxLjJkcHB4KSwgKG1heC1yZXNvbHV0aW9uOiAxLjVkcHB4KSc7XG4gICAgQG1lZGlhLTI6IH4nKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMmRwcHgpJztcbiAgICBAbWVkaWEtMzogficoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAzKSwgKG1pbi1yZXNvbHV0aW9uOiAzZHBweCknO1xuXG4gICAgJiB3aGVuIChAZHByID0gMS41KSB7XG4gICAgICAgIEBtZWRpYSBAbWVkaWEtMSB7XG4gICAgICAgICAgICBAcnVsZXNldCgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJiB3aGVuIChAZHByID0gMikge1xuICAgICAgICBAbWVkaWEgQG1lZGlhLTIge1xuICAgICAgICAgICAgQHJ1bGVzZXQoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICYgd2hlbiAoQGRwciA9IDMpIHtcbiAgICAgICAgQG1lZGlhIEBtZWRpYS0zIHtcbiAgICAgICAgICAgIEBydWxlc2V0KCk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCIvKipcbiAqIG1peGluc1xuICovXG5cbi8vIOiDjOaZr+WbvlxuLmNvdmVyaW1nKEBzaXplOiBjb3Zlcikge1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IEBzaXplO1xufVxuXG4vLyDnu53lr7nlrprkvY3miJblm7rlrprlrprkvY3loavlhYXmu6HniLblhYPntKDmiJbnpZbniLblhYPntKBcbi5mdWxsZmlsbChAcG9zaXRpb246IGFic29sdXRlKSB7XG4gICAgcG9zaXRpb246IEBwb3NpdGlvbjtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG59XG5cbi8vIOWuueWZqOWGheWuueWxheS4rVxuLmNlbnRlcmZ5KEBkaXJlY3Rpb246IHJvdykge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IEBkaXJlY3Rpb247XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLy8g5aSa6KGM5oiq5patXG4ubGluZS1jbGFtcChAbGluZTogMikge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgLXdlYmtpdC1saW5lLWNsYW1wOiBAbGluZTtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcbn1cblxuLy8g5Y2V6KGM5oiq5patXG4uZWxsaXBzaXMoKSB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIG1pbi13aWR0aDogMDtcbn1cblxuLy8g5riF6Zmk5rWu5YqoXG4uY2xlYXJmaXgoKSB7XG4gICAgJjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICAgICAgY2xlYXI6IGJvdGg7XG4gICAgfVxufVxuXG4vLyDmloflrZfpopzoibIr6IOM5pmv6aKc6ImyK+i+ueahhuminOiJsivlnIbop5Jcbi50aGVtZShAY29sb3IsIEBiYWNrZ3JvdW5kLWNvbG9yLCBAYm9yZGVyLWNvbG9yOiBmYWxzZSwgQGJvcmRlci1yYWRpdXM6IEpfWDA2KSB7XG4gICAgLnd1amktY29sb3IoQGNvbG9yKTtcbiAgICAud3VqaS1iYWNrZ3JvdW5kKEBiYWNrZ3JvdW5kLWNvbG9yKTtcblxuICAgICYgd2hlbiBub3QgKEBib3JkZXItY29sb3IgPSBmYWxzZSkge1xuICAgICAgICAud3VqaS1saW5lKExfWDAyLCBhcm91bmQsIEBib3JkZXItY29sb3IsIEBib3JkZXItcmFkaXVzKTtcbiAgICB9XG59XG5cbi8vIOWNleihjOaWh+Wtl1xuLmZvbnQoQGNvZGUpIHtcbiAgICAud3VqaS1mb250LW9uZS1saW5lKEBjb2RlKTtcbn1cbiJdfV0pOwo="}]}