{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-san/es/wuji-topic-header/hex2rgb.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-san/es/wuji-topic-header/hex2rgb.js","mtime":1696919503878},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiKTsKCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5oZXgycmdiID0gdm9pZCAwOwoKLyoqCiAqIEBmaWxlIDE26L+b5Yi26aKc6Imy6L2scmdiCiAqLwp2YXIgaGV4MnJnYiA9IGZ1bmN0aW9uIGhleDJyZ2IoKSB7CiAgdmFyIGhleENvZGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6ICcnOwogIHZhciBzdGFydEFscGhhID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAxOwogIHZhciBlbmRBbHBoYSA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogMDsKICB2YXIgaGV4ID0gaGV4Q29kZS5yZXBsYWNlKC8jL2csICcnKTsKCiAgaWYgKCFoZXggfHwgIS9eKFswLTlhLWZdezN9KXsxLDJ9JC9pLnRlc3QoaGV4KSkgewogICAgcmV0dXJuIHsKICAgICAgcmdiOiAicmdiYSgwLDAsMCwiLmNvbmNhdChzdGFydEFscGhhLCAiKSIpLAogICAgICByZ2IwOiAicmdiYSgwLDAsMCwiLmNvbmNhdChlbmRBbHBoYSwgIikiKQogICAgfTsKICB9CgogIGlmIChoZXgubGVuZ3RoID09PSAzKSB7CiAgICBoZXggPSAiIi5jb25jYXQoaGV4WzBdKS5jb25jYXQoaGV4WzBdKS5jb25jYXQoaGV4WzFdKS5jb25jYXQoaGV4WzFdKS5jb25jYXQoaGV4WzJdKS5jb25jYXQoaGV4WzJdKTsKICB9CgogIHZhciByID0gcGFyc2VJbnQoaGV4LnN1YnN0cmluZygwLCAyKSwgMTYpOwogIHZhciBnID0gcGFyc2VJbnQoaGV4LnN1YnN0cmluZygyLCA0KSwgMTYpOwogIHZhciBiID0gcGFyc2VJbnQoaGV4LnN1YnN0cmluZyg0LCA2KSwgMTYpOwogIHJldHVybiB7CiAgICByZ2I6ICJyZ2JhKCIuY29uY2F0KHIsICIsIikuY29uY2F0KGcsICIsIikuY29uY2F0KGIsICIsIikuY29uY2F0KHN0YXJ0QWxwaGEsICIpIiksCiAgICByZ2IwOiAicmdiYSgiLmNvbmNhdChyLCAiLCIpLmNvbmNhdChnLCAiLCIpLmNvbmNhdChiLCAiLCIpLmNvbmNhdChlbmRBbHBoYSwgIikiKQogIH07Cn07CgpleHBvcnRzLmhleDJyZ2IgPSBoZXgycmdiOw=="},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-san/es/wuji-topic-header/hex2rgb.js"],"names":["hex2rgb","hexCode","startAlpha","endAlpha","hex","replace","test","rgb","rgb0","length","r","parseInt","substring","g","b"],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AAEO,IAAMA,OAAO,GAAG,SAAVA,OAAU,GAAgD;AAAA,MAA/CC,OAA+C,uEAArC,EAAqC;AAAA,MAAjCC,UAAiC,uEAApB,CAAoB;AAAA,MAAjBC,QAAiB,uEAAN,CAAM;AACnE,MAAIC,GAAG,GAAGH,OAAO,CAACI,OAAR,CAAgB,IAAhB,EAAsB,EAAtB,CAAV;;AACA,MAAI,CAACD,GAAD,IAAQ,CAAC,wBAAwBE,IAAxB,CAA6BF,GAA7B,CAAb,EAAgD;AAC5C,WAAO;AACHG,MAAAA,GAAG,uBAAgBL,UAAhB,MADA;AAEHM,MAAAA,IAAI,uBAAgBL,QAAhB;AAFD,KAAP;AAIH;;AAED,MAAIC,GAAG,CAACK,MAAJ,KAAe,CAAnB,EAAsB;AAClBL,IAAAA,GAAG,aAAMA,GAAG,CAAC,CAAD,CAAT,SAAeA,GAAG,CAAC,CAAD,CAAlB,SAAwBA,GAAG,CAAC,CAAD,CAA3B,SAAiCA,GAAG,CAAC,CAAD,CAApC,SAA0CA,GAAG,CAAC,CAAD,CAA7C,SAAmDA,GAAG,CAAC,CAAD,CAAtD,CAAH;AACH;;AACD,MAAMM,CAAC,GAAGC,QAAQ,CAACP,GAAG,CAACQ,SAAJ,CAAc,CAAd,EAAiB,CAAjB,CAAD,EAAsB,EAAtB,CAAlB;AACA,MAAMC,CAAC,GAAGF,QAAQ,CAACP,GAAG,CAACQ,SAAJ,CAAc,CAAd,EAAiB,CAAjB,CAAD,EAAsB,EAAtB,CAAlB;AACA,MAAME,CAAC,GAAGH,QAAQ,CAACP,GAAG,CAACQ,SAAJ,CAAc,CAAd,EAAiB,CAAjB,CAAD,EAAsB,EAAtB,CAAlB;AACA,SAAO;AACHL,IAAAA,GAAG,iBAAUG,CAAV,cAAeG,CAAf,cAAoBC,CAApB,cAAyBZ,UAAzB,MADA;AAEHM,IAAAA,IAAI,iBAAUE,CAAV,cAAeG,CAAf,cAAoBC,CAApB,cAAyBX,QAAzB;AAFD,GAAP;AAIH,CAnBM","sourcesContent":["/**\n * @file 16进制颜色转rgb\n */\n\nexport const hex2rgb = (hexCode = '', startAlpha = 1, endAlpha = 0) => {\n    let hex = hexCode.replace(/#/g, '');\n    if (!hex || !/^([0-9a-f]{3}){1,2}$/i.test(hex)) {\n        return {\n            rgb: `rgba(0,0,0,${startAlpha})`,\n            rgb0: `rgba(0,0,0,${endAlpha})`,\n        };\n    }\n\n    if (hex.length === 3) {\n        hex = `${hex[0]}${hex[0]}${hex[1]}${hex[1]}${hex[2]}${hex[2]}`;\n    }\n    const r = parseInt(hex.substring(0, 2), 16);\n    const g = parseInt(hex.substring(2, 4), 16);\n    const b = parseInt(hex.substring(4, 6), 16);\n    return {\n        rgb: `rgba(${r},${g},${b},${startAlpha})`,\n        rgb0: `rgba(${r},${g},${b},${endAlpha})`,\n    };\n};"]}]}