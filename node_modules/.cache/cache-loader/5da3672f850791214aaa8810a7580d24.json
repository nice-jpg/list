{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/src/pages/kangyi/containers/trans.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/src/pages/kangyi/containers/trans.js","mtime":1695633995750},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/src/pages/kangyi/containers/trans.js"],"names":["nameMap","newAddTopProvince","title","legendInfo","localDataConf","type","color","name","emphasis","itemStyle","barWidth","overseasConf","barGap","asymptomaticTopProvince","trend","button","allForeignTrend","topAddCountry","trans","serverData","data","tabs","tabsArr","res","index","length","tabItem","oneRes","trendGroup","topTitle","tab_title","component","Object","keys","key","tabItemValue","eachItem","layout","link","cmd","items","area","headItems","firstItems","subList","prototype","toString","call","list","cureAndDeadSeries","cureAndDeadLegend","cureAndDeadXAxis","start","updateDate","slice","trendOfEachDay","dataInList","itemsObj","series","trendConfig","buttonName","legendData","xAxisData","seriesConf","smooth","symbolSize","lineStyle","width","push","symbol","jsonStart","indexOf","jsonEnd","lastIndexOf","jsonString","resultObj","decodeURIComponent","JSON","parse","updateMonth","monthItems","unshift"],"mappings":"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","sourcesContent":["const nameMap = {\n    newAddTopProvince: {\n        title: '新增确诊分布',\n        legendInfo: ['本地新增', '境外输入'],\n        localDataConf: {\n            type: 'bar',\n            color: '#0174DF',\n            name: '本地新增',\n            emphasis: {\n                itemStyle: {\n                    color: '#81BEF7'\n                }\n            },\n            barWidth: 10 // 设置柱状图的粗细\n        },\n        overseasConf: {\n            type: 'bar',\n            color: '#DF0101',\n            name: '境外输入',\n            barGap: '-100%', // 用于柱状图的重叠\n            emphasis: {\n                itemStyle: {\n                    color: '#F78181'\n                }\n            },\n            barWidth: 10 // 设置柱状图的粗细\n        }\n    },\n    asymptomaticTopProvince: {\n        title: '全国 无症状感染者分布',\n        legendInfo: []\n    },\n    trend: {\n        '新增无症状': {\n            title: '新增无症状趋势',\n            button: ['新增', '无症状趋势'],\n            legendInfo: '新增无症状',\n            type: 'line'\n        },\n        '新增确诊': {\n            title: '新增确诊趋势',\n            button: ['新增', '确诊趋势'],\n            legendInfo: '新增确诊',\n            type: 'line'\n        },\n        '确诊': {\n            legendInfo: '确诊'\n        },\n        '治愈': {\n            legendInfo: '治愈'\n        },\n        '死亡': {\n            legendInfo: '死亡'\n        },\n        '新增本土': {\n            title: '新增本土趋势',\n            button: ['新增', '本土趋势'],\n            legendInfo: '新增本土',\n            type: 'line'\n        }\n    },\n    allForeignTrend: {\n        '新增确诊': {\n            title: '国外新增确诊',\n            button: '新增确诊按钮',\n            legendInfo: '新增确诊',\n            type: 'line'\n        }\n    },\n    topAddCountry: {\n        title: '新增确诊国家TOP10',\n        legendInfo: []\n    }\n};\n/*\n    数据结构\n    最后吐给app.js的是一个数组，数组的每一项格式如下：\n    {\n        topTitle: '', // 值为国内疫情、本地、海外\n        component: [{\n            layout: '', // 组件名\n            items: [] // items为组件内需要的数据\n        }]\n    }\n    曲线图的items格式有所不同，items数组的每一项为echart图的配置内容\n*/\n\nfunction trans(serverData) {\n    if (!serverData || !serverData.data || !serverData.data.tabs) {\n        return [];\n    }\n    let tabsArr = serverData.data.tabs;\n    let res = [];\n    \n    for (let index = 0; index < tabsArr.length; index++) {\n        let tabItem = tabsArr[index];\n        let oneRes = {};\n        let trendGroup = [];\n        oneRes.topTitle = tabItem.tab_title;\n        let component = [];\n        for (let key of Object.keys(tabItem)) {\n            let tabItemValue = tabItem[key];\n            if (!tabItemValue) {\n                continue;\n            }\n            let eachItem = {};\n            if (key !== 'around' && typeof tabItemValue !== 'object') {\n                oneRes[key] = tabItemValue;\n                // continue;\n            } else {\n                if ((key === 'numeralItems'\n                    || key === 'notices'\n                    || key === 'domesticDistribution'\n                    || key === 'topAddCountry') && tabItemValue.length !== 0) {\n                    eachItem.key = key;\n                    switch (key) {\n                        case 'numeralItems':\n                            eachItem.layout = 'show-numeral';\n                            break;\n                        case 'domesticDistribution':\n                            eachItem.layout = 'show-report';\n                            break;\n                        case 'topAddCountry':\n                            eachItem.layout = 'bar-chart';\n                            break;\n                        case 'notices':\n                            eachItem.layout = 'show-notice';\n                            break;\n                        default:\n                            break;\n                    }\n                    if (key === 'numeralItems' && tabItem.link) {\n                        eachItem.cmd = tabItem.link;\n                    }\n                    eachItem.items = tabItemValue;\n                } else if ((key === 'caseList' && tabItemValue.area)\n                    || (key === 'caseOutsideList' && tabItemValue.length !== 0)) {\n                    eachItem.layout = 'show-table';\n                    eachItem.key = key;\n                    if (key === 'caseList') {\n                        eachItem.headItems = ['省市\\n地区', '新增\\n确诊', '新增\\n无症状', '累计\\n确诊', '风险\\n地区'];\n                        eachItem.firstItems = tabItemValue;\n                        eachItem.items = tabItemValue.subList;\n                        delete tabItemValue.subList;\n                    } else {\n                        eachItem.headItems = ['地区', '新增', '累计', '治愈', '死亡'];\n                        eachItem.items = tabItemValue;\n                    }\n                } else if ((key === 'allForeignTrend' || key === 'trend')\n                    && Object.prototype.toString.call(tabItemValue.list) === '[object Array]'\n                    && tabItemValue.list.length !== 0) {\n                    eachItem.layout = 'live-chart';\n                    eachItem.items = [];\n                    eachItem.key = key;\n                    let cureAndDeadSeries = [];\n                    let cureAndDeadLegend = [];\n                    let cureAndDeadXAxis = [];\n                    const start = tabItemValue.updateDate.length - 30;\n                    // 本地疫情下的趋势图只展示近一个月的数据\n                    let updateDate = key === 'trend' ? tabItemValue.updateDate.slice(start) : tabItemValue.updateDate;\n\n                    for (let index = 0; index < tabItemValue.list.length; index++) {\n                        let trendOfEachDay = tabItemValue.list[index]; // list中的每一项，包括name和data\n                        let dataInList = key === 'trend' ? trendOfEachDay.data.slice(start) : trendOfEachDay.data;\n                        if (trendOfEachDay.name === '新增确诊' || trendOfEachDay.name === '新增本土') {\n                            let itemsObj = {\n                                key,\n                                series: []\n                            };\n                            // trendConfig为当前数据在nameMap中的配置项\n                            let trendConfig = nameMap[key][trendOfEachDay.name];\n                            itemsObj.title = trendConfig.title;\n                            let buttonName = trendConfig.button;\n                            buttonName && (itemsObj.buttonName = buttonName);\n                            itemsObj.legendData = [trendConfig.legendInfo];\n                            itemsObj.xAxisData = updateDate;\n                            let seriesConf = {\n                                type: 'line',\n                                smooth: true,\n                                symbolSize: 0.01,\n                                lineStyle: {\n                                    width: 1.6\n                                }\n                            };\n                            seriesConf.data = dataInList;\n                            seriesConf.name = trendConfig.legendInfo;\n                            itemsObj.series.push(seriesConf);\n\n                            // items的每一项就是每个chart图的配置内容\n                            eachItem.items.push(itemsObj);\n                        } else if (trendOfEachDay.name === '确诊' || trendOfEachDay.name === '治愈' || trendOfEachDay.name === '死亡') {\n                            cureAndDeadXAxis = updateDate;\n                            cureAndDeadLegend.push(nameMap[key][trendOfEachDay.name].legendInfo);\n                            let seriesConf = {\n                                type: 'line',\n                                smooth: true,\n                                symbol: 'emptyCircle',\n                                symbolSize: 0.01,\n                                lineStyle: {\n                                    width: 1.6\n                                }\n                            };\n                            seriesConf.data = dataInList;\n                            seriesConf.name = trendOfEachDay.name;\n                            cureAndDeadSeries.push(seriesConf);\n                        }\n                    }\n                    if (cureAndDeadSeries.length !== 0 && cureAndDeadLegend.length !== 0) {\n                        // 将确诊、死亡和治愈放在一个表里\n                        let itemsObj = {\n                            key,\n                            series: []\n                        };\n                        itemsObj.legendData = cureAndDeadLegend;\n                        itemsObj.xAxisData = cureAndDeadXAxis;\n                        itemsObj.series = cureAndDeadSeries;\n                        itemsObj.title = '累计确诊/治愈/死亡趋势';\n                        itemsObj.buttonName = ['确诊/', '治愈/死亡'],\n                        eachItem.items.push(itemsObj);\n                    }\n                } else if (key === 'around' && typeof tabItemValue === 'string') {\n                    let jsonStart = tabItemValue.indexOf('(');\n                    let jsonEnd = tabItemValue.lastIndexOf(')');\n                    let jsonString = tabItemValue.slice(jsonStart + 1, jsonEnd);\n                    eachItem.layout = 'show-surround';\n                    eachItem.key = key;\n                    let resultObj = decodeURIComponent(jsonString);\n                    eachItem.items = JSON.parse(resultObj);\n                } else if (key === 'trendMonth' && tabItemValue.list.length !== 0) {\n                    // 本地疫情下的趋势图只展示近一个月的数据\n                    let updateDate = tabItemValue.updateMonth;\n\n                    for (let index = 0; index < tabItemValue.list.length; index++) {\n                        let trendOfEachDay = tabItemValue.list[index]; // list中的每一项，包括name和data\n                        let dataInList = trendOfEachDay.data;\n                        if (trendOfEachDay.name === '新增确诊') {\n                            let itemsObj = {\n                                key,\n                                series: []\n                            };\n                            // trendConfig为当前数据在nameMap中的配置项\n                            let trendConfig = nameMap['trend'][trendOfEachDay.name];\n                            itemsObj.title = trendConfig.title;\n                            let buttonName = trendConfig.button;\n                            buttonName && (itemsObj.buttonName = buttonName);\n                            itemsObj.legendData = [trendConfig.legendInfo];\n                            itemsObj.xAxisData = updateDate;\n                            let seriesConf = {\n                                type: 'line',\n                                smooth: true,\n                                symbolSize: 0.01,\n                                lineStyle: {\n                                    width: 1.6\n                                }\n                            };\n                            seriesConf.data = dataInList;\n                            seriesConf.name = trendConfig.legendInfo;\n                            itemsObj.series.push(seriesConf);\n\n                            // items的每一项就是每个chart图的配置内容\n                            trendGroup.push(itemsObj);\n                        }\n                    }\n                }\n                if (eachItem.key === 'trend') {\n                    // 将trendMonth的数据插入到曲线图里\n                    eachItem.monthItems = trendGroup;\n                }\n                if (eachItem.key === 'notices') {\n                    // 疫情公告组件强制提升到第一位\n                    component.unshift(eachItem);\n                } else {\n                    component.push(eachItem);\n                }\n            }\n        }\n        oneRes.component = component;\n        res.push(oneRes);\n    }\n    return res;\n}\nexport default trans;\n"]}]}