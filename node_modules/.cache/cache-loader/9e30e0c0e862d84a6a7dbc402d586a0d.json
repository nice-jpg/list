{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/nano/es/tabs/tabs.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/nano/es/tabs/tabs.js","mtime":1696919503876},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/nano/es/tabs/tabs.js"],"names":["prefixCls","Tabs","activeIndex","animated","scrollable","tabs","type","$panels","children","panels","forEach","child","isTabPanel","data","get","length","set","push","getPanels","map","panel","Component","Nav","DataTypes","number","bool","color","string","array","oneOf","wrapClass","contentClass","filter","c","trackStyle","index","x","trans","updateTabPanel","module","hot","__HOT_API__","require","__HOT_UTILS__","__SAN_COMPONENT__","getExports","template","prototype","accept","install","__HMR_ID__","createRecord","hotReload"],"mappings":"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","sourcesContent":["/**\n * @file 组件 tabs\n * @author baozhixin <baozhixin@baidu.com>\n */\n\nimport {Component, DataTypes} from 'san';\nimport Nav from './nav';\n\nconst prefixCls = 's-tabs';\n\nexport default class Tabs extends Component {\n    // eslint-disable-next-line\n    static template = /*html*/ `\n        <div class=\"{{wrapClass}}\">\n            <div class=\"${prefixCls}-wrap\">\n                <div s-if=\"scrollable\" s-ref=\"scroll\" class=\"${prefixCls}-scrollable\">\n                    <s-nav color=\"{{color}}\" tabs=\"{{tabs}}\" type=\"{{type}}\"/>\n                </div>\n                <s-nav s-else color=\"{{color}}\" tabs=\"{{tabs}}\" type=\"{{type}}\"/>\n                <div class=\"nav-right\">\n                    <div s-if=\"scrollable\" class=\"${prefixCls}-mask\"/>\n                    <slot name=\"nav-right\"/>\n                </div>\n                <div class=\"${prefixCls}-hairline\"/>\n            </div>\n            <div class=\"{{contentClass}}\">\n                <div s-if=\"animated\"\n                    class=\"${prefixCls}-track\"\n                    style=\"{{trackStyle}}\"\n                ><slot/></div>\n                <slot s-else/>\n            </div>\n        </div>\n    `;\n\n    static components = {\n        's-nav': Nav\n    };\n\n    static dataTypes = {\n        activeIndex: DataTypes.number,\n        animated: DataTypes.bool,\n        color: DataTypes.string,\n        scrollable: DataTypes.bool,\n        tabs: DataTypes.array,\n        type: DataTypes.oneOf(['line', 'card'])\n    };\n\n    static computed = {\n        wrapClass() {\n            const type = this.data.get('type');\n\n            return [\n                prefixCls,\n                `${prefixCls}-${type}`\n            ];\n        },\n        contentClass() {\n            const animated = this.data.get('animated');\n\n            return [\n                `${prefixCls}-content`,\n                animated && `${prefixCls}-animated`\n            ].filter(c => c);\n        },\n        trackStyle() {\n            const index = this.data.get('activeIndex');\n            const x = index > 0 ? `-${index}00%` : 0;\n            const trans = `translate3d(${x}, 0, 0)`;\n\n            return {\n                'transform': trans,\n                '-webkit-transform': trans\n            };\n        }\n    };\n\n    static messages = {\n        's-tabs:updateTabPanel'() {\n            this.updateTabPanel();\n        }\n    };\n\n    initData() {\n        return {\n            activeIndex: 0,\n            animated: false,\n            // isSticky: false,\n            scrollable: false,\n            tabs: [],\n            // top: 0,\n            type: 'line'\n        };\n    }\n\n    inited() {\n        this.$panels = [];\n    }\n\n    getPanels(children = [], panels = []) {\n        children.forEach(child => {\n            if (child) {\n                if (child.isTabPanel) {\n                    if (this.data.get('activeIndex') === panels.length) {\n                        child.data.set('active', true);\n                    }\n                    panels.push(child);\n                }\n                else if (child.children && child.children.length) {\n                    this.getPanels(child.children, panels);\n                }\n            }\n        });\n\n        return panels;\n    }\n\n    updateTabPanel() {\n        const panels = this.$panels = this.getPanels(this.children);\n        const tabs = panels.map(panel => panel.data.get());\n        this.data.set('tabs', tabs);\n    }\n}\n"]}]}