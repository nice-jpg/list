{"remainingRequest":"/Users/a2012/Desktop/list/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/a2012/Desktop/list/node_modules/@baidu/ug-invoke-app/node_modules/query-string/index.js","dependencies":[{"path":"/Users/a2012/Desktop/list/node_modules/@baidu/ug-invoke-app/node_modules/query-string/index.js","mtime":1696919508000},{"path":"/Users/a2012/Desktop/list/node_modules/san-hot-loader/index.js","mtime":1696919525000},{"path":"/Users/a2012/Desktop/list/node_modules/cache-loader/dist/cjs.js","mtime":1696919513000},{"path":"/Users/a2012/Desktop/list/node_modules/babel-loader/lib/index.js","mtime":1696919524000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/a2012/Desktop/list/node_modules/@baidu/ug-invoke-app/node_modules/query-string/index.js"],"names":["strictUriEncode","require","decodeComponent","splitOnFirst","filterObject","isNullOrUndefined","value","undefined","encoderForArrayFormat","options","arrayFormat","key","result","index","length","skipNull","skipEmptyString","encode","join","arrayFormatSeparator","parserForArrayFormat","accumulator","exec","replace","concat","isArray","includes","isEncodedArray","decode","newValue","split","map","item","validateArrayFormatSeparator","TypeError","strict","encodeURIComponent","keysSorter","input","Array","sort","Object","keys","a","b","Number","removeHash","hashStart","indexOf","slice","getHash","url","hash","extract","queryStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","parse","query","assign","formatter","ret","create","param","k","reduce","Boolean","exports","stringify","object","shouldFilter","objectCopy","filter","x","parseUrl","url_","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString","pick","exclude","exclusionFilter"],"mappings":"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","sourcesContent":["'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${encode(object.fragmentIdentifier, options)}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n"]}]}