{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox-player-mini/utils/index.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox-player-mini/utils/index.js","mtime":1696919504666},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/xbox-player-mini/utils/index.js"],"names":["ua","window","self","navigator","userAgent","isIOS","test","isAndroid","isMainBox","iosInvoke","schema","elem","document","createElement","body","getElementsByTagName","style","display","src","appendChild","setTimeout","removeChild","androidInvoke","androidJsBridge","Bdbox_android_jsbridge","dispatch","re","prompt","JSON","stringify","obj","func","args","type","Object","prototype","toString","call","slice","toLowerCase","index","getRandomName","preffix","Date","now","gb","global","getGlobalFunc","name","apply","json2params","json","encode","rs","i","j","encodeURIComponent","json2query","arr","push","join","invokeP","action","queryParams","schemaHead","Promise","reject","status","message","resolve","tmp","params","keys","length","constructor","query","callback","result","data","parse","e","console","log","search","versionCompare","version1","version2","a","split","b","len","Math","max","parseInt","getBoxVersion","version","baiduboxapp_version","exec","reverse"],"mappings":"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","sourcesContent":["/**\n * @file 端能力相关函数\n * @author zhangtingting12 <zhangtingting12@baidu.com>\n * Reference: http://icode.baidu.com/repos/baidu/hulk/xbox/tree/master:packages/@baidu/xbox-na\n */\n\nconst ua = typeof window === 'object' && window.self === window ? navigator.userAgent : '';\n// 是否为ios端\nexport const isIOS = () => /(iPhone|iPod|iPad)/.test(ua);\n// 是否为android端\nexport const isAndroid = () => /(Android);?[\\s\\/]+([\\d.]+)?/.test(ua);\n// 是否为主版。baiduboxapp: 框的常规UA biduboxapp:  个别网站会触发内核的风控策略(比如域名以le.com结尾)，UA会被替换\nexport const isMainBox = () => (\n    / (baiduboxapp|biduboxapp)\\//i.test(ua) && !/ (lite|info|pro|mission) (baiduboxapp|biduboxapp)/.test(ua)\n);\n\n/**\n * iosInvoke传入schema打开框架\n *\n * @param {string} schema 协议\n */\nexport const iosInvoke = schema => {\n    let elem = document.createElement('iframe');\n    let body = document.body || document.getElementsByTagName('body')[0];\n    elem.style.display = 'none';\n    elem.src = schema;\n    body.appendChild(elem);\n    setTimeout(function () {\n        body.removeChild(elem);\n        elem = null;\n    }, 0);\n};\n/**\n * androidInvoke传入schema打开框架\n *\n * @param {string} schema 协议\n * @return {Object} 发起schema请求\n */\nexport const androidInvoke = schema => {\n    let androidJsBridge = window.Bdbox_android_jsbridge;\n    if (androidJsBridge && androidJsBridge.dispatch) {\n        androidJsBridge.dispatch(schema);\n    }\n    else {\n        let re = window.prompt('BdboxApp:' + JSON.stringify({\n            obj: 'Bdbox_android_jsbridge',\n            func: 'dispatch',\n            args: [schema]\n        }));\n        return re;\n    }\n};\n/**\n * @function type\n * @param {any} obj - 被判断的对象\n * @return {string} 返回类型：array/date/string/object/undefined/function/boolean/null/regexp/math 等\n */\nexport const type = obj => Object.prototype.toString.call(obj).slice(8, -1).toLowerCase();\nlet index = 0;\n/**\n * getRandomName随机生成唯一名称\n * @param {string} preffix 前缀\n * @return {string} 随机函数名称\n */\nexport const getRandomName = preffix => {\n    index++;\n    return preffix + (Date.now().toString(16) + index).slice(-1 * 8);\n};\nconst gb = typeof window === 'object' ? window : global;\n/**\n * @function getGlobalFunc\n * @param {function} func - 全局函数\n * @return {string} funcName - 返回全局函数名\n */\nexport const getGlobalFunc = func => {\n    if (typeof func === 'function') {\n        const name = `_xfunc_${getRandomName('_xfunc_')}`;\n        gb[name] = (...args) => func.apply(gb, args);\n        return name;\n    }\n    return func;\n};\n\n/**\n * 经常会出现 params 的 stringify 之后再encode 的情况，这里统一处理了\n * 还处理了函数问题，可以直接传入匿名函数即可自动转为全局函数\n * @function json2params\n * @param {Object} json - 参数\n * @param {boolean} encode - 是否encode\n * @return {Promise} promise - Promise\n */\nconst json2params = (json, encode = true) => {\n    if (type(json) === 'string') {\n        return json;\n    }\n    const rs = {};\n    for (let i in json) {\n        let j = json[i];\n        if (type(j) === 'function') {\n            j = getGlobalFunc(j);\n        }\n        rs[i] = j;\n    }\n\n    return encodeURIComponent(JSON.stringify(rs));\n};\n/**\n * json2query将json转换为query格式\n *\n * @param {Object} json对象\n * @return {string} 拼接的query\n */\nconst json2query = json => {\n    let arr = [];\n    for (let i in json) {\n        let j = json[i];\n        if (type(j) === 'function') {\n            j = getGlobalFunc(j);\n        }\n\n        arr.push(i + '=' + j);\n    }\n    return arr.join('&');\n};\n/**\n * 双端Promise 调起命令，host 和 params 分开处理，支持函数直接传入\n * @param {String} action - schema host 部分\n * @param {object} params - 参数\n * @param {string} schemaHead - schema 头，默认 baiduboxapp\n * @return {Promise}\n */\nexport function invokeP(action, queryParams = {}, schemaHead = 'baiduboxapp') {\n    if (!isMainBox()) {\n        return Promise.reject({\n            status: 902,\n            message: '主版APP外无法调用端能力'\n        });\n    }\n    return new Promise((resolve, reject) => {\n        let tmp = queryParams.params || {};\n        if (Object.keys(tmp).length === 0 && tmp.constructor === Object || tmp === '%7B%7D' || tmp === '{}') {\n            // 删除空的params对象\n            delete queryParams.params;\n        }\n        else if (type(tmp) === 'object') {\n            queryParams.params = json2params(tmp);\n        }\n\n        const query = {\n            ...queryParams,\n            callback(result) {\n                let data = result;\n                if (type(result) === 'string') {\n                    try {\n                        data = JSON.parse(result);\n                    } catch (e) {\n                        console.log(e);\n                    }\n                }\n                if (+data.status === 0) {\n                    resolve(data.data);\n                    return;\n                }\n                reject(data);\n            }\n        };\n        const search = json2query(query);\n\n        const schema = `${schemaHead}://${action}?${search}`;\n        if (isIOS()) {\n            iosInvoke(schema);\n        }\n        else if (isAndroid()) {\n            androidInvoke(schema);\n        }\n    });\n}\n\n\n/**\n * versionCompare比较两个版本\n *\n * @param {string} version1 待比较版本1\n * @param {string} version2 待比较版本2\n * @return {number} 返回结果相同0，1大于2返回1，1小于2返回-1\n */\nexport const versionCompare = (version1, version2) => {\n    version2 += '';\n    version1 += '';\n    let a = version1.split('.');\n    let b = version2.split('.');\n    let i = 0;\n    let len = Math.max(a.length, b.length);\n    for (; i < len; i++) {\n        if ((a[i] && !b[i] && parseInt(a[i], 10) > 0) || (parseInt(a[i], 10) > parseInt(b[i], 10))) {\n            return 1;\n        }\n        else if ((b[i] && !a[i] && parseInt(b[i], 10) > 0) || (parseInt(a[i], 10) < parseInt(b[i], 10))) {\n            return -1;\n        }\n    }\n    return 0;\n};\n/**\n * getBoxVersion获取框版本\n *\n * @return {string} 返回版本\n */\nconst getBoxVersion = () => {\n    let version = '0';\n    if (typeof window === 'object' && window.baiduboxapp_version) {\n        return window.baiduboxapp_version;\n    }\n    if (isMainBox()) {\n        let a;\n        if ((a = /baiduboxapp\\/([\\d.]+)/.exec(ua))) {\n            version = a[1];\n        }\n        else if ((a = /([\\d+.]+)_(?:diordna|enohpi)_/.exec(ua))) {\n            // 老版本手百\n            a = a[1].split('.');\n            version = a.reverse().join('.');\n        }\n    }\n    return version;\n};\nexport const version = getBoxVersion();\n\n// export const showToast = message => (\n//     invokeP('video/slrShowToastMsg', {\n//         params: {\n//             message\n//         }\n//     })\n// );\n"]}]}