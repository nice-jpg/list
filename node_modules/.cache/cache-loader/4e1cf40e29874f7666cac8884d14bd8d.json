{"remainingRequest":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-san/es/wuji-table-covid/index.js","dependencies":[{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-san/es/wuji-table-covid/index.js","mtime":1696919503878},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/san-hot-loader/index.js","mtime":1696919525187},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/cache-loader/dist/cjs.js","mtime":1696919513896},{"path":"/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/babel-loader/lib/index.js","mtime":1696919524615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/liaohuanyu/projects/baidu-work/baidu/feed3/multi-pages/node_modules/@baidu/wuji-san/es/wuji-table-covid/index.js"],"names":["prefixCls","WujiTableCovid","data","type","code","replace","toLowerCase","item","index","colName","event","fire","get","Component","DataTypes","array","oneOf","table","titles","lists","showTitle","forEach","side","push","rowName","colData","filter","c","length","module","hot","__HOT_API__","require","__HOT_UTILS__","__SAN_COMPONENT__","getExports","template","prototype","accept","install","__HMR_ID__","createRecord","hotReload"],"mappings":"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","sourcesContent":["/**\n * @file 组件 WujiTableCovid 无极-疫情数据\n * @author jiangxinge <jiangxinge@baidu.com>\n */\n\nimport './style/index.less';\nimport {Component, DataTypes} from 'san';\n\nconst prefixCls = 'w-table-covid';\n\nexport default class WujiTableCovid extends Component {\n    static template = /* html */ `\n        <div class=\"${prefixCls} table-type-{{type}}\" on-click=\"handleClick\">\n            <div s-if=\"table.showTitle\" class=\"${prefixCls}-titles\">\n                <div s-for=\"title in table.titles\" class=\"${prefixCls}-title\">{{title}}</div>\n            </div>\n            <div class=\"${prefixCls}-lists\">\n                <div s-for=\"list in table.lists\" class=\"${prefixCls}-list\">\n                    <div s-for=\"item, index in list\" class=\"${prefixCls}-item\">\n                        <span s-if=\"showColName(item, type, index)\" class=\"name\">{{item.colName}}</span>\n                        <span class=\"text text-{{getTextClass(item.wujiText)}}\">{{item.colText}}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `;\n\n    static dataTypes = {\n        data: DataTypes.array,\n        type: DataTypes.oneOf([\n            '1',\n            '2',\n            '3',\n        ]),\n    };\n\n    static computed = {\n        table() {\n            const data = this.data.get('data');\n            const table = {\n                titles: [],\n                lists: [],\n                showTitle: true,\n            };\n            data.forEach(side => {\n                table.titles.push(side.rowName);\n                side.colData.forEach((item, index) => {\n                    if (table.lists[index]) {\n                        table.lists[index].push(item);\n                    }\n                    else {\n                        table.lists.push([\n                            item,\n                        ]);\n                    }\n                });\n            });\n            if (!table.titles.filter(c => c).length) {\n                table.showTitle = false;\n            }\n            return table;\n        },\n    };\n\n    initData() {\n        return {\n            data: [],\n            type: '1',\n        };\n    }\n\n    getTextClass(code) {\n        if (!code) {\n            return 'x123';\n        }\n\n        return code.replace('Txt_', '').toLowerCase();\n    }\n\n    showColName(item, type, index) {\n        if (!item.colName || type === '3') {\n            return false;\n        }\n        if (type === '2' && index > 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    handleClick(event) {\n        this.fire('click', {event, data: this.data.get()});\n    }\n}\n"]}]}