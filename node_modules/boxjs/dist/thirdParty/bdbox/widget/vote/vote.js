module.exports = function () {
  var $ = require('boxjs/dist/utils/_bdboxWrapper');

  var xMessage = require('common:bdbox/event/xMessage');

  var defaultOptions = {
    beforeVote: $.emptyFn,
    fail: $.emptyFn,
    success: $.emptyFn
  };

  var Vote = function (nodeId, options) {
    var $node = this.node = $.isString(nodeId) ? document.querySelector(nodeId) : nodeId;

    if (!$node.nodeType) {
      throw 'Bdbox.widget.vote: nodeId need a DOM';
    }

    this.init(options);
  };

  Vote.prototype = {
    constructor: Vote,
    create: function (url) {
      var iframe = this.iframe = document.createElement('iframe');
      iframe.scrolling = 'no';
      iframe.frameborder = 0;
      iframe.style.border = '0 none';
      iframe.src = url;
      return iframe;
    },
    setWH: function (w, h) {
      this.iframe.style.height = (h | 0) + 'px';
      this.iframe.style.width = (w | 0) + 'px';
    },
    init: function (otpions) {
      this.bindEvent();
      return this;
    },
    bindEvent: function () {
      return this;
    },
    unbindEvent: function () {},
    destroy: function () {
      this.unbindEvent();
    }
  };
  return function (nodeId, options) {
    return new Vote(nodeId, options || {});
  };
}();