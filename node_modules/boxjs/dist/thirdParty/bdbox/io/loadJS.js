module.exports = function () {
  var $ = require('boxjs/dist/utils/_bdboxWrapper');

  var json2q = require('../utils/jsonToQuery');
  /**
   * @namespace Bdbox.io
   */


  var emptyFn = $.emptyFn;
  /**
   * 加载js和jsonp
   * @memberOf Bdbox.io
   * @function
   * @param  {String|loadJSOptions}   opts      加载的url，或者options
   * @param {string|object} data 数据，选填
   * @param  {callback} success 成功回调，jsonp使用，选填
   * @author wangyongqing01
   * @version $Id: loadJS.js 286585 2016-03-15 11:57:15Z wangyongqing01 $
   * @example
   * var loadJS = require('../io/loadJS');
   * loadJS('http://libs.baidu.com/jquery/2.0.0/jquery.min.js', function(){
   *      alert(jQuery);
   * });
   * loadJS({
   *     url: 'xxx',
   *     data: {},
   *     success:function(){},
   *     error: function(){},
   *     timeout: 3000
   * });
   * //使用jsonp
   * loadJS('/someAPI?datatype=jsonp&callback=?', function(data){
   *     //这里是jsonp接收到的数据
   *     alert(data);
   * });
   */

  function loadJS(opts, data, success) {
    var js = document.createElement('script');
    var url, error, timeout;

    if ($.isString(opts)) {
      url = opts;

      if ($.isFunction(data)) {
        success = data;
        data = null;
      }
    } else {
      url = opts.url;
      data = opts.data;
      success = opts.success;
      error = opts.error || $.emptyFn;
      timeout = opts.timeout;
    }

    if ($.isObject(data)) {
      data = json2q(data);
    }

    if (data) {
      url += (url.indexOf('?') === -1 ? '?' : '&') + data;
    }

    url = url.replace(/[&?]{1,2}/, '?');
    var callbackName;

    if (/=\?/.test(url)) {
      callbackName = '_box_jsonp' + $.getId();
      url = url.replace(/=\?/, '=' + callbackName);
    }

    var HEAD = getHead();
    timeout = timeout || 2e4; //20秒超时

    js.type = 'text/javascript';
    js.src = url;
    var done = true,
        timer;

    var clear = function () {
      //防止多次回调
      if (callbackName) {
        delete window[callbackName];
      }

      timer && clearTimeout(timer);
      js.onload = js.onreadystatechange = js.onerror = null; // HEAD.removeChild(js);

      js = null;
    };

    var cb = function (evt, isTimeout) {
      if (js && (!js.readyState || /loaded|complete/.test(js.readyState))) {
        clear();

        if (done && $.isFunction(success)) {
          success.apply(null, $.toArray(arguments));
        }

        done = false;
      }
    };

    var errorCallback = function (evt) {
      clear();

      if (done) {
        error(evt);
      }

      done = false;
    };

    if (callbackName) {
      window[callbackName] = cb;
    }

    timer = setTimeout(function () {
      clear();

      if (done) {
        error('timeout');
      }

      done = false;
    }, timeout);
    js.onload = js.onreadystatechange = js.onerror = cb;
    js.onerror = errorCallback;
    HEAD.appendChild(js);
  }

  return loadJS;

  function getHead() {
    return document.head || document.getElementsByTagName('head')[0] || document.documentElement;
  }
}();