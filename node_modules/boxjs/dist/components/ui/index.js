module.exports = function () {
  /**
  * @file
  * @author renzhonghua
  */
  var invoke = require("boxjs/dist/core/invoke");

  function paramsHandle(obj, type) {
    var nameArr = obj.name.split('-');
    var result = '';

    if (nameArr[1]) {
      var fstring = nameArr[1].substring(0, 1).toUpperCase();
      var other = nameArr[1].substring(1);
      var action = type + fstring + other;
      result = [nameArr[0], action].join('/');
    } else {
      result = [obj.name, type].join('/');
    }

    return result;
  }

  return {
    open: function (obj) {
      var data = obj.data || {};
      var result = paramsHandle(obj, 'open');
      /* istanbul ignore if */

      if (obj.style) {
        data.style = obj.style;
      }

      return invoke(result, data, obj.abtest);
    },
    close: function (obj) {
      var result = paramsHandle(obj, 'close');
      return invoke(result, {}, obj.abtest);
    },
    update: function (obj) {
      /* istanbul ignore next */
      var result = paramsHandle(obj, 'update');
      /* istanbul ignore next */

      return invoke(result, obj.data, obj.abtest);
    }
  };
}();