import ubc from '@baidu/ubc-report-sdk';
import extend from '@baidu/xbox/extend';
import {ConfigType} from './configType';

const configMap = {};

export const log = (event:string, params:object) => {
    const finalParams = extend({}, configMap[event], params);
    ubc(`${event}.event`, finalParams);
};

// 初始化
export const init = (configList: Array<ConfigType>) => {
    configList.forEach(({event, ubcId, params}:ConfigType) => {
        configMap[event] = {
            ext: params.ext || {}
        };
        ubc(`${event}.init`, ubcId, params);
    });
};

// 基础组件打点
export const componentLog = (baseType:string, action:string, extraParams:object) => {
    const type = baseType ? baseType + action : action;
    log(
        'component',
        {
            type,
            ext: {
                ...extraParams
            }
        }
    );
};

// 基础组件打点
export const danmakuLog = (type:string, value:string, extraParams?:object, source?:string, from?: string) => {
    log(
        'component',
        {
            type,
            value,
            source,
            from,
            ext: {
                ...extraParams
            }
        }
    );
};

// 页面级打点
export const pageLog = (type:string, extraParams:object) => {
    log(
        'page',
        {
            type,
            ext: {
                ...extraParams
            }
        }
    );
};

export const timingStart = (timingId:string, {
    page,
    source,
    from,
    ext,
    value,
    type
}) => {
    // 开始进行时长统计
    ubc('time.init', timingId, {
        page,
        timingId,
        source,
        from
    });

    // 当统计参数为timing时，统计参数说明
    // ${event}.timing
    // start/end 计时开始/结束
    // type 打点参数type
    // value 打点参数value
    // ext 打点参数ext
    ubc('time.timing', 'start', type, value,  ext);
};

export default {
    log,
    init,
    componentLog,
    pageLog,
    timingStart,
    danmakuLog
};
