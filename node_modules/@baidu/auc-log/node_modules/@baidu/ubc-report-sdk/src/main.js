/**
 * @file 主文件
 * @author wangbing11(wangbing11@baidu.com)
 */
import MethodQueue from './MethodQueue';
import Tracker from './Tracker';
import {transformInput} from './utils/utils';
import {regestPageVisibilityEvent} from './utils/pageVisibility';

let UBCReportObject = 'ubc';

let UBCtrackers = [];
let UBCtrackerMap = {};

//
let trackerCreateMapFields = ['trackerName', 'trackerId', 'config'];

/**
 * ubc 上报主类, 暴露给外部的接口
 *
 * @param {...any}  args 用户输入的 ubc 命令。如 ubc('event', 'loginBtnClick', 'head')
 * @class
 *
 */
/* eslint-disable */
function UBC(...args) {
/* eslint-enable */
    MethodQueue.run.call(window[UBCReportObject], [args]);
}

/**
 * 创建一个跟踪器
 *
 * @param  {...any} args [trackerName, trackerId, config], config可以为空
 * @return {Tracker} 返回一个跟踪器
 */
UBC.create = function (...args) {
    let opts = transformInput(trackerCreateMapFields, [].slice.call(args));
    let trackerName = opts.trackerName;

    // 防止重复创建
    if (UBCtrackerMap[trackerName]) {
        return UBCtrackerMap[trackerName];
    }
    // 如果跟踪器的ID相同，就抛出异常
    let sameTracker = UBCtrackers.find(tracker => {
        return tracker.get('trackerId') === opts.trackerId;
    });
    if (sameTracker) {
        throw 'multi tracker serverId can not be same';
    }
    let tracker = new Tracker(opts);
    UBCtrackerMap[trackerName] = tracker;
    UBCtrackers.push(tracker);
    return tracker;
};

// 删除一个跟踪器
UBC.remove = function (trackerName) {
    let length = UBCtrackers.length;
    for (let i = 0; i < length; i++) {
        if (UBCtrackers[i][trackerName] === trackerName) {
            UBCtrackers.splice(i, 1);
            UBCtrackerMap[trackerName] = null;
            break;
        }
    }
};

// 主入口，如果是通过 SDK 接入的，要对 SDK 下载完毕之前就注入的命令进行处理
UBC.main = function () {
    // 页面初始化时，push到 ubc 队列里面的命令
    let tmpUBC = window[UBCReportObject];
    let tmpUBCQueue = tmpUBC && tmpUBC.q;

    // 如果window.ubc为UBC，则直接使用window.ubc
    if (tmpUBC && typeof tmpUBC.getAll === 'function') {
        UBC = window[UBCReportObject];
    }
    // 如果有 UBC 初始化之前存放的命令
    if (Array.isArray(tmpUBCQueue)) {
        MethodQueue.run.apply(UBC, [tmpUBCQueue]);
        tmpUBC.q = [];
    }

    UBC.startTime = tmpUBC && tmpUBC.l || 1 * new Date();
    UBC.loaded = true;
    window[UBCReportObject] = UBC;
};

/**
 * 通过名称获取跟踪器
 *
 * @param {string} trackerName  跟踪器名称
 * @return {Tracker} 返回一个跟踪器
 */
UBC.getByName = function (trackerName) {
    return UBCtrackerMap[trackerName];
};

/**
 * 获取所有的跟踪器
 *
 * @return {Array}} 返回跟踪器列表
 */
UBC.getAll = function () {
    return UBCtrackers.slice();
};

UBC.main();

regestPageVisibilityEvent(UBC);

let ubc = UBC;
export default ubc;
