"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toArray = toArray;
exports.toNumber = toNumber;
exports.toBoolean = toBoolean;
exports.toString = toString;

var _is = require("./is");

/**
 * @file 类型转换
 * @module to.js
 * @author wangyongqing <wangyongqing01@baidu.com>
 */

/**
 * 将传入的对象转换成数组
 * @function toArray
 * @param {any} arrayLike - 被转对象
 * @return {array} 返回array
 */
function toArray(arrayLike) {
  return [].slice.call(arrayLike);
}
/**
 * 将传入的对象转换成数字
 * @function toNumber
 * @param {any} value - 被转对象
 * @param { any} [defaultValue=null] - 如果不能转，默认返回值
 * @return {Number} 返回number
 */


function toNumber(value) {
  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  if ((0, _is.isNil)(value)) {
    return defaultValue;
  }

  return Number(value);
}
/**
 * 将传入的对象返回布尔
 * @function toBoolean
 * @param {any} value - 被转对象
 * @param { any} [defaultValue=null] - 如果不能转，默认返回值
 * @return {Boolean} 返回boolean
 */


function toBoolean(value) {
  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if ((0, _is.isNil)(value)) {
    return defaultValue;
  }

  return Boolean(value);
}
/**
 * 将传入对象返回字符串
 * @function toString
 * @param {any} value - 被转对象
 * @param { any} [defaultValue=null] - 如果不能转，默认返回值
 * @return {string} 返回字符串
 */


function toString(value) {
  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  if ((0, _is.isNil)(value)) {
    return defaultValue;
  }

  if ((0, _is.isString)(value)) {
    return value;
  }

  return String(value);
}