"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _version_compare = _interopRequireDefault(require("../../version_compare"));

var _getBoxVersion = _interopRequireDefault(require("../../get-box-version"));

var _isMatrix = _interopRequireDefault(require("../../is-matrix"));

var _const = require("../const");

var _detect = require("../../browser/detect");

var _ios = require("../ios");

var _android = require("../android");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @file 老的底部评论调端能力
 * @author jiangxiaoli(jiangxiaoli01@baidu.com)
 * @param {callName} callback - 回调函数
 */
var _default = function _default(callName) {
  var version = (0, _getBoxVersion.default)();
  var other = (0, _isMatrix.default)();

  if ((0, _detect.isIOS)() && ((0, _version_compare.default)(version, '8.2.3') >= 0 || other)) {
    (0, _ios.invokeApp)('utils', {
      action: 'getToolBarIcons',
      minver: '8.2.3'
    }, callName);
    return Promise.resolve();
  } else if ((0, _detect.isAndroid)() && ((0, _version_compare.default)(version, '8.3') >= 0 || other)) {
    (0, _android.prompt)('Bdbox_android_utils', 'getToolBarIcons', [callName]);
    return Promise.resolve();
  }

  return Promise.reject(_const.COMMAND_NOT_EXIST);
};

exports.default = _default;