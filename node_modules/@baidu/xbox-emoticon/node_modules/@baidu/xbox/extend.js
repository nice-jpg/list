/**
 * @file 对象深度merge方法
 * @author yanyiting <yanyiting@baidu.com>
 */

import {isPlainObject, isArray, isUndefined, isBoolean} from './is';

function merge(target, source) {
    for (let key in source) {
        if (isPlainObject(source[key]) || isArray(source[key])) {
            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {
                target[key] = {};
            }
            if (isArray(source[key]) && !isArray(target[key])) {
                target[key] = [];
            }
            merge(target[key], source[key]);
        } else if (!isUndefined(source[key])) {
            target[key] = source[key];
        }
    }
}

export default function extend(target, ...args) {
    if (isBoolean(target)) {
        target = args.shift();
    }
    args.forEach(arg => {
        merge(target, arg);
    });
    return target;
}

