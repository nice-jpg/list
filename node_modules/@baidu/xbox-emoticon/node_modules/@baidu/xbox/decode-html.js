/**
 * @file 解码 html 字符
 * @author wangyongqing <wangyongqing01@baidu.com>
 */

const ENTITY_DECODE_MAP = {
    lt: '<',
    gt: '>',
    nbsp: ' ',
    quot: '"',
    emsp: '\u2003',
    ensp: '\u2002',
    thinsp: '\u2009',
    copy: '\xa9',
    reg: '\xae',
    zwnj: '\u200c',
    zwj: '\u200d',
    amp: '&'
};

/**
 * 解码 HTML 字符实体
 * @function decodeHtml
 * @param {string} source - 要解码的字符串
 * @return {string}
 */
export default source => String(source)
    .replace(/&#([0-9]+);/g, (match, code) => String.fromCharCode(+code))
    .replace(/&#x([0-9a-f]+);/ig, (match, code) => String.fromCharCode(parseInt(code, 16)))
    .replace(/&([a-z]+);/ig, (match, code) => ENTITY_DECODE_MAP[code] || match);
