/**
 * 判断浏览器类型
 * @module browser/detect
 * @file Created on Thu Nov 22 2018
 * @author wangyongqing <wangyongqing01@baidu.com>
 */
import UA from '../ua';
import isBox from '../is-box';
import matrix from '../is-matrix';
export {isBox};
export {isAndroid, isIOS, getOSName, getOSVersion} from '../os';
/**
 * @function isWeibo
 * @param {string} ua - 待判断的 UA，默认当前 userAgent
 */
export const isWeibo = (ua = UA) => /\bweibo\b/i.test(ua);
/**
 * @function isWeixin
 * @param {string} ua - 待判断的 UA，默认当前 userAgent
 */
export const isWeixin = (ua = UA) => /micromessenger\//i.test(ua);
export const isWB = isWeibo;
export const isWX = isWeixin;
export const isWechat = isWeixin;
export const isMatrix = matrix;
/**
 * @function isQQ
 * @param {string} ua - 待判断的 UA，默认当前 userAgent
 */
export const isQQ = (ua = UA) => /QQ\//.test(ua);
/**
 * @function isWebkit
 * @param {string} ua - 待判断的 UA，默认当前 userAgent
 */
export const isWebkit = (ua = UA) => /Web[kK]it[/]{0,1}([\d.]+)/.test(ua);
/**
 * @function isMac
 * @param {string} ua - 待判断的 UA，默认当前 userAgent
 */
export const isMac = (ua = UA) => /\(Macintosh; Intel /.test(ua);
export const isOSX = isMac;
/**
 * @function isChrome
 * @param {string} ua - 待判断的 UA，默认当前 userAgent
 */
export const isChrome = (ua = UA) => /Chrome\/([\d.]+)/.test(ua) || /CriOS\/([\d.]+)/.test(ua);
/**
 * @function isIE
 * @param {string} ua - 待判断的 UA，默认当前 userAgent
 */
// eslint-disable-next-line
export const isIE = (ua = UA) => /MSIE\s([\d.]+)/.test(ua) || /Trident\/[\d](?=[^\?]+).*rv:([0-9.].)/.test(ua);

export const isWebView = (ua = UA) => !isChrome(ua) && /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/.test(ua);
/**
 * @function isWebview
 * @param {string} ua - 待判断的 UA，默认当前 userAgent
 */
export const isWebview = isWebView;
/**
 * @function isSafari
 * @param {string} ua - 待判断的 UA，默认当前 userAgent
 */
export const isSafari = (ua = UA) =>
    isWebView(ua) || /Version\/([\d.]+)([^S](Safari)|[^M]*(Mobile)[^S]*(Safari))/.test(ua);
/**
 * @function isWinPhone
 * @param {string} ua - 待判断的 UA，默认当前 userAgent
 */
export const isWinPhone = (ua = UA) => /Windows Phone ([\d.]+)/.test(ua);

export const isWinphone = isWinPhone;
export const isWP = isWinPhone;
/**
 * @function isUC
 * @param {string} ua - 待判断的 UA，默认当前 userAgent
 */
export const isUC = (ua = UA) => / UCBrowser\//.test(ua);
/**
 * @function isBaidubrowser
 * @param {string} ua - 待判断的 UA，默认当前 userAgent
 */
export const isBaidubrowser = (ua = UA) => /baidubrowser/i.test(ua);

export const getUa = () => {
    let browsers = null;
    switch (!0) {
        case isBox():
            browsers = 'bdbox';
            break;
        case isWeixin():
            browsers = 'wechat';
            break;
        case isWeibo():
            browsers = 'webo';
            break;
        case isQQ():
            browsers = 'qq';
            break;
        case isBaidubrowser():
            browsers = 'baidubrowser';
            break;
        case isUC():
            browsers = 'ucbrowser';
            break;
        default:
            browsers = 'others';
            break;
    }
    return browsers;
};
