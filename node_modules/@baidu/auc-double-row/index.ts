/**
 * @file index.ts
 * @author gaohong01
 */

import AucComponent from '@baidu/auc-base/AucComponent';
import styles from './style.module.less';
import {AucDoubleRowData} from './types';
import {WujiImage, WujiIcon} from '@baidu/wuji-san';
import {componentLog} from '@baidu/auc-log';
import {topicVideoThunderLog} from '@baidu/auc-base/topicVideoThunderLog';

export class AucDoubleRow extends AucComponent {
    static template:string = /* html */ `
    <div class="{{wrapperClass}}" on-click="click">
        <wuji-image
            s-bind="{{imageProps}}"
            class="{{styles.doubleRowImage}}"
        ></wuji-image>
        <div class="{{styles.doubleRowTitle}}">
            {{title}}
        </div>
    </div>
    `;
    static components:object = {
        'wuji-image': WujiImage,
        'wuji-icon': WujiIcon
    };
    static computed:object = {
        wrapperClass() {
            return [
                styles.aucDoubleRowWrapper,
                +this.data.get('index') % 2 ===0 ? styles.drmr : '',
                +this.data.get('index') > 1 ? styles.drmt : '',
                this.data.get('visited') ? styles.visited : '',
                this.data.get('columnBackColor') ? styles.columnBackColor : ''
            ];
        }
    };

    initData(): AucDoubleRowData {
        return {
            styles,
            logBaseType: 'double_row_',
            visited: false
        };
    }
    inited() {
    }
    attached(): void {
        this.registerScrollInView().then(() => {
            componentLog(this.data.get('logBaseType'), 'show', this.data.get('logExtraParams'));
            this.data.get('type') === 'video' && this.videoThunderLog('show');
        });
    }
    click() {
        this.data.set('visited', true);
        componentLog(this.data.get('logBaseType'), 'click', this.data.get('logExtraParams'));
        this.data.get('type') === 'video' && this.videoThunderLog('click');
        this.fire('jump', this.data.get('jumpProps'));
    }
    videoThunderLog(type) {
        // 视频切换短小融合需单独打点
        const videoThunderLog = this.data.get('videoThunderLog');
        if (videoThunderLog.resourceType) {
            topicVideoThunderLog(type === 'show' ? 'show' : 'click', {
                rid: this.data.get('rid'),
                ...videoThunderLog,
                topic_id: this.data.get('topicId')
            });
        }
    }
}

export default AucDoubleRow;
