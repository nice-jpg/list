/**
 * @file 版本比较
 * @author weijiaxun <weijiaxun@baidu.com>
 */

enum CompareResult {
    equl = 0,
    bigger = 1,
    smaller = -1
}

/**
 * 版本比较；
 * @memberOf Bdbox.utils
 * @name version_compare
 * @param  {string} version1 第一个版本号
 * @param  {string} version2 第二个版本号
 * @return {nubmer} num version1 == version2返回0；version1 > version2返回1；小于返回-1
 */
export function versionCompare(version1: string | number, version2: string | number): CompareResult {
    const a = version1.toString().split('.');
    const b = version2.toString().split('.');
    const len = Math.max(a.length, b.length);

    for (let i = 0; i < len; i++) {
        if ((a[i] && !b[i] && parseInt(a[i], 10) > 0) || (parseInt(a[i], 10) > parseInt(b[i], 10))) {
            return CompareResult.bigger;
        }
        else if ((b[i] && !a[i] && parseInt(b[i], 10) > 0) || (parseInt(a[i], 10) < parseInt(b[i], 10))) {
            return CompareResult.smaller;
        }
    }
    return CompareResult.equl;
}
