/**
 * @file 尝试调起失败处理
 * @author zhangsiyuan(zhangsiyuan@baidu.com)
 */

import {InvokeType} from '../../config/app/InvokeType';
import {Status} from '../../config/Status';
import {IS_ANDROID, IS_IOS} from '../detect/os';
import {invokeAndroidMarket} from './invokeAndroidMarket';
import {InnerInvokeConfig} from '../../api/invokeApp';
import {sendH5ErrLog} from '../log/errorLog';

export async function handleInvokeFailed(options: InnerInvokeConfig, invokeType: InvokeType): Promise<Status> {
    // 之所以sendH5Errlog不在最后处理
    // 是因为跳页面就销毁上下文，打点一定要在跳转前发出
    if (invokeType === InvokeType.ULINK) {
        sendH5ErrLog(options, Status.INVOKE_ULINK_FAIL);
        return Promise.reject(Status.INVOKE_ULINK_FAIL);
    }
    if (options.toStore) {
        if (IS_ANDROID && invokeType !== InvokeType.ANDROID_MARKET) {
            return invokeAndroidMarket(options);
        }
        else if (IS_IOS && options.iosStoreUrl) {
            sendH5ErrLog(options, Status.APPSTORE_SUCCESS);
            location.href = options.iosStoreUrl;
            return Status.APPSTORE_SUCCESS;
        }
    }
    if (IS_ANDROID && options.apkUrl) {
        sendH5ErrLog(options, Status.APK_SUCCESS);
        location.href = options.apkUrl;
        return Status.APK_SUCCESS;
    }
    if (options.failedUrl) {
        sendH5ErrLog(options, Status.FAILEDURL_SUCCESS);
        location.href = options.failedUrl;
        return Status.FAILEDURL_SUCCESS;
    }
    // 前面已经处理过android去market的场景
    // 还能进入这里，说明安卓调起应用商店失败了
    if (options.toStore && IS_ANDROID && invokeType === InvokeType.ANDROID_MARKET) {
        sendH5ErrLog(options, Status.INVOKE_APPSTORE_FAIL);
        return Promise.reject(Status.INVOKE_APPSTORE_FAIL);
    }

    sendH5ErrLog(options, Status.INVOKE_FAIL);
    return Promise.reject(Status.INVOKE_FAIL);
}
