/**
 * @file deeplink map
 * @author zhangsiyuan(zhangsiyuan@baidu.com)
 */

import {stringifyQuery, toGlobalFunc, toQueryString} from '@baidu/eop-utils';
import {Browser} from './browserMap';

type GetScheme = (appUrl: string, cbName: any) => string;

interface DeeplinkConfig {
    getScheme: GetScheme;
    successCode: number;
}

// 手百
const boxDeeplinkConfig: DeeplinkConfig = {
    getScheme(appUrl, callback) {
        return 'baiduboxapp://v7/vendor/ad/deeplink?'
            + `${toQueryString(stringifyQuery({
                params: {appUrl},
            }))}`
            + `&callback=${toGlobalFunc(callback)}`;
    },
    successCode: 0,
};
// 百度看看
const baiduboxvision: DeeplinkConfig = {
    getScheme(appUrl, callback) {
        return 'baiduboxvision://v7/vendor/ad/deeplink?'
            + `${toQueryString(stringifyQuery({
                params: {appUrl},
            }))}`
            + `&callback=${toGlobalFunc(callback)}`;
    },
    successCode: 0,
};
// 全民
const bdminivideo: DeeplinkConfig = {
    getScheme(appUrl, callback) {
        return 'bdminivideo://growth/launch3rdApp?'
            + toQueryString(stringifyQuery({
                callback: callback,
                params: {
                    scheme: appUrl,
                },
            }, true));
    },
    successCode: 0,
};
export const deeplinkConfigMap = {
    baiduboxapp: boxDeeplinkConfig,
    baiduboxlite: boxDeeplinkConfig,
    tomas: boxDeeplinkConfig,
    baiduboxvision,
    // 好看的端能力launch3rdApp有问题，调起失败也会返回成功的信息
    // 暂时搁置不处理
    bdminivideo,
};
export type DeeplinkApp = keyof typeof deeplinkConfigMap;

// 类型保护
// Browser => DeeplinkApp
export function isDeeplinkApp(browser: Browser): browser is DeeplinkApp {
    return Object.keys(deeplinkConfigMap).includes(browser);
}
