/**
 * @file invoke
 * @author zhangsiyuan(zhangsiyuan@baidu.com)
 */
import { AppConfigName, AppName } from '../config/app/appConfigMap';
import { Browser } from '../config/app/browserMap';
import { Brand } from '../config/app/brandMap';
import { Status } from '../config/Status';
import { Os } from '../utils/detect/getHostInfo';
export interface InvokeConfig {
    appName: AppConfigName;
    token?: string;
    scheme?: string;
    toStore?: boolean;
    toYYB?: boolean;
    ulink?: string;
    timeout?: number;
    iosStoreUrl?: string;
    apkUrl?: string;
    failedUrl?: string;
    useDeeplink?: boolean;
    useNotTryList?: boolean;
    checkTokenCopied?: boolean;
    statRatio?: 0 | 10 | 20 | 50 | 100;
}
declare type Overwrite<T, U> = {
    [P in Exclude<keyof T, keyof U>]: T[P];
} & U;
export interface InnerInvokeConfig extends Overwrite<Required<InvokeConfig>, {
    appName: AppName;
}> {
    browser: Browser;
    brand: Brand;
    os: Os;
    isHitStat: boolean;
    pkgName: string;
    marketScheme?: string;
}
export declare function invokeApp({ appName, token, scheme, toStore, toYYB, ulink, timeout, useDeeplink, apkUrl, failedUrl, useNotTryList, checkTokenCopied, iosStoreUrl, statRatio, }: InvokeConfig): Promise<Status>;
export interface InvokeTpConfig {
    token?: string;
    scheme: string;
    pkgName: string;
    failedUrl: string;
    iosStoreUrl?: string;
    apkUrl?: string;
    toStore?: boolean;
    toYYB?: boolean;
    ulink?: string;
    timeout?: number;
    checkTokenCopied?: boolean;
}
export declare function invokeTpApp({ token, scheme, toStore, toYYB, ulink, timeout, apkUrl, failedUrl, checkTokenCopied, iosStoreUrl, pkgName, }: InvokeTpConfig): Promise<Status>;
export {};
