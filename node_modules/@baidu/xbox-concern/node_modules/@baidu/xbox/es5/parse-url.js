"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _query2json = _interopRequireDefault(require("./query2json"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/**
 * 解析 url，返回 url 和 query
 * @function parseUrl
 * @param {string} input - 需要解析的地址
 * @param {boolean} [parseQueryString = false] - 是否解析 query 为 object
 * @return {object} 返回{url,query}对象
 * @example
 * parseUrl('http://baidu.com?abc=1', true);
 *   {
 *       url: 'http://baidu.com',
 *       query: {
 *           abc: 1
 *       }
 *   }
 *   parseUrl('http://baidu.com?abc=1')
 *   {
 *       url: 'http://baidu.com',
 *       query: 'abc=1'
 *   }
 */
var _default = function _default(input) {
  var parseQueryString = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var _input$split = input.split('?'),
      _input$split2 = _slicedToArray(_input$split, 2),
      url = _input$split2[0],
      _input$split2$ = _input$split2[1],
      query = _input$split2$ === void 0 ? '' : _input$split2$;

  return {
    url: url,
    query: parseQueryString ? (0, _query2json.default)(query) : query
  };
};

exports.default = _default;