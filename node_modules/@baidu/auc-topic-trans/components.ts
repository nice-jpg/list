/**
 * 此文件处理从业务数据结构到基础组件结构的数据转换
 */

import {
    transitionBigImageIcon,
    transitionWidget,
    transitionLabel,
    transJumpProps,
    getBaseImageProps,
    transitionDoubleRow,
    transitionBigVideo
} from '@baidu/auc-base/dataTransition';
import {AucOneImageTextData} from '@baidu/auc-one-image-text/types';
import {AucThreeImageTextData} from '@baidu/auc-three-image-text/types';
import {AucBigImageTextData} from '@baidu/auc-big-image-text/types';
import {AucTitleData} from '@baidu/auc-title/types';
import '@baidu/wuji-icons/svg/d20-capsule-video-f-30.svg';
import '@baidu/wuji-icons/svg/d20-capsule-img-f-30.svg';
import '@baidu/wuji-icons/svg/x-d20-videoplay.svg';
import '@baidu/wuji-icons/svg/x-d20-live.svg';
import {getBaseComponentLogExtra, getBaseVideoThunderLog} from './componentLogExtra';
import {durationTrans} from '@baidu/auc-base/utils';

const image1Trans = (newsData:any, columnType:string, columnIndex:number):AucOneImageTextData => {
    const data = newsData.data;

    let imageProps:any = getBaseImageProps({image: data.image});

    if (data.type === 'video') {
        imageProps.labelText = data.duration;
        imageProps.labelIcon = 'd20-capsule-video-f-30';
    } else if (data.type === 'gif') {
        imageProps.labelText = data.duration;
    }

    return {
        title: data.title,
        widgetItems: transitionWidget(newsData),
        image: data.image,
        labelProp: transitionLabel(newsData),
        imageProps,
        jumpProps: transJumpProps(newsData),
        logExtraParams: getBaseComponentLogExtra(newsData, columnType, columnIndex),
        type: data.type || '',
        rid: data.rid ? data.rid : data.nid,
        videoThunderLog: getBaseVideoThunderLog(newsData, columnType, columnIndex)
    };
};

const image3Trans = (newsData:any, columnType:string, columnIndex:number):AucThreeImageTextData => {
    const data = newsData.data;
    const imgList = data.items.map(({image}) => getBaseImageProps({src: image}));

    // GIF
    if (data.type === 'gif') {
        imgList.forEach(imgItem => {
            imgItem.labelText = data.duration;
        });
    }
    // 图集
    else if (data.type === 'image') {
        imgList[imgList.length - 1].labelText = data.duration;
        imgList[imgList.length - 1].labelIcon = 'd20-capsule-img-f-30';
    }

    imgList[0].borderRadius = {
        tr: false,
        br: false
    };

    imgList[1].borderRadius = {
        tl: false,
        tr: false,
        bl: false,
        br: false
    };

    imgList[2].borderRadius = {
        tl: false,
        bl: false
    };

    return {
        title: data.title,
        imgList,
        widgetItems: transitionWidget(newsData),
        jumpProps: transJumpProps(newsData),
        labelProp: transitionLabel(newsData),
        logExtraParams: getBaseComponentLogExtra(newsData, columnType, columnIndex)
    };
};

export const bigimageTrans = (newsData:any, columnType:string, columnIndex:number):AucBigImageTextData => {
    const data = newsData.data;

    let isLive = false;
    let isPlayBack = false;
    let isPreload = false;

    if (newsData.layout === 'livevideo') {
        if (data.title_prefix === 'live') {
            isLive = true;
        } else if (data.title_prefix === 'playback') {
            isPlayBack = true;
        } else if (data.title_prefix === 'preload') {
            isPreload = true;
        }
    } else if (newsData.tplType === 'large') {
        if (data.livetype === 'livevideo') {
            isLive = true;
        } else if (data.livetype === 'playback') {
            isPlayBack = true;
        }
    }
    return {
        title: data.title,
        widgetItems: transitionWidget(newsData),
        imageProps: transitionBigImageIcon(newsData),
        labelProp: transitionLabel(newsData),
        jumpProps: transJumpProps(newsData),
        isLive,
        isPlayBack,
        isPreload,
        nid: data.nid,
        type: data.type || '',
        logExtraParams: getBaseComponentLogExtra(newsData, columnType, columnIndex),
        videoData: transitionBigVideo(newsData),
        rid: data.rid ? data.rid : data.nid,
        videoThunderLog: getBaseVideoThunderLog(newsData, columnType, columnIndex)
    }
};

const titleonlyTrans = (newsData:any, columnType:string, columnIndex:number):AucTitleData => {
    const data = newsData.data;

    return {
        title: data.title,
        widgetItems: transitionWidget(newsData),
        labelProp: transitionLabel(newsData),
        jumpProps: transJumpProps(newsData),
        logExtraParams: getBaseComponentLogExtra(newsData, columnType, columnIndex)
    };
};

// 单图动态对应类型
const singleImageType = ['single_image', 'single_wide_image', 'single_vertical_image', 'video', 'vertical_video'];
export const transitionStar = (params, columnType, columnIndex) => {
    const layout = params.layout;
    if (layout) {
        let data = {
            ...params.data,
            images: []
        };
        // serverbox接口返回
        if (layout === 'star_bigimage') {
            let singleImageParams:any = {};
            // 大图：大图图文、大图视频
            // url 处理
            if (singleImageType.includes(data.type)) {
                singleImageParams.type = data.type;
                if (data.items[0].coverimage) {
                    singleImageParams.src = data.items[0].coverimage;
                } else {
                    singleImageParams.src = data.items[0].image;
                }

                // 图片比例处理
                singleImageParams.ratio = '1:1';
                if (['single_wide_image'].includes(data.type)) {
                    singleImageParams.ratio = '3:2';
                } else if (['single_vertical_image'].includes(data.type)) {
                    singleImageParams.ratio = '3:4';
                } else if (['vertical_video'].includes(data.type)) {
                    singleImageParams.ratio = '3:4';
                } else if (data.type === 'video') {
                    singleImageParams.ratio = '3:2';
                }

                // 脚标&按钮处理
                if (['video', 'vertical_video'].includes(data.type)) {
                    singleImageParams.maskIcon = 'x-d20-videoplay';
                    singleImageParams.maskIconSize = 144;
                    if (data.durantion) {
                        singleImageParams.labelText = data.durantion;
                    }
                    singleImageParams.type = 'video';
                }
                if (data.items[0].text) {
                    singleImageParams.labelText = data.items[0].text;
                }
                data.images.push(singleImageParams);
            } else if (data.type === 'multi_image') {
                data.items.forEach((item)=>{
                    let image:any = {
                        src: item.coverimage ? item.coverimage : item.image,
                        ratio: '1:1',
                        type: 'multi_image'
                    };
                    if (item.text) {
                        image.labelText = item.text;
                    }
                    data.images.push(image)
                })
            }
        }
        data.shareImageUrl = data.images && data.images[0] && data.images[0].src;
        return {
            ...data,
            logExtraParams: getBaseComponentLogExtra(params, columnType, columnIndex),
            videoThunderLog: getBaseVideoThunderLog(params, columnType, columnIndex)
        };
    } else {
        // feedserver接口返回
    }

};

// 双列模板
export const transitionDobuleRow = (newsData:any, columnType:string, columnIndex:number) => {
    const data = newsData.data;
    return {
        title: data.title,
        widgetItems: transitionWidget(newsData),
        imageProps: transitionDoubleRow(newsData),
        labelProp: transitionLabel(newsData),
        jumpProps: transJumpProps(newsData),
        logExtraParams: getBaseComponentLogExtra(newsData, columnType, columnIndex),
        type: data.type || '',
        rid: data.rid ? data.rid : data.nid,
        videoThunderLog: getBaseVideoThunderLog(newsData, columnType, columnIndex)
    }
}

// 百度百科
export const transitionBaike = (newsData:any, columnType:string, columnIndex:number) => {
    const data = newsData.data;
    const layout = newsData.layout;
    let imageProps:any = data.image ? getBaseImageProps({
        src: data.image,
        ratio: '3:2',
        radius: 'J_X15'
    }) : {};

    if (data.duration) {
        imageProps.labelText = durationTrans(data.duration);
        imageProps.labelIcon = 'd20-capsule-video-f-30';
    }

    return {
        layout,
        title: data.title,
        description: data.description,
        imageProps,
        jumpProps: transJumpProps(newsData),
        logExtraParams: {
            column_type: columnType,
            column_id: columnIndex + '',
            nid: newsData.id,
            res_type: 'baike'
        },
        rid: newsData.id,
        logo: data.logo || '',
        videoCmd: data.video_cmd || '',
        type: data.type
    }
}

export const transitionZhenMing = (newsData: any, columnType: string, columnIndex: number) => {
    const data = newsData.data;
    const layout = newsData.layout;
    let imageProps: any = {
        width: 222,
        src: data.image,
        ratio: "1:1",
    };
    if (+data.videoDuration && data.type === 'video') {
        imageProps.labelText = durationTrans(data.videoDuration);
        imageProps.labelIcon = 'd20-capsule-video-f-30';
    }

    return {
        layout,
        description: data.description,
        jumpProps: transJumpProps(newsData),
        logExtraParams: {
            column_type: columnType,
            column_id: columnIndex + '',
            nid: newsData.id,
            res_type: 'zhengming'
        },
        rid: newsData.id,
        camp: data.camp || '',
        pointData: {
            cmd: data.cmd || '',
            commentcmd: data.commentcmd || '',
            camp: `${data.camp}`|| '',
            auabs: data.auabs,
            vflag: `${data.vflag}`,
            auimage: data.auimage,
            userName: newsData.id.indexOf('dt') >= 0 ? data.auname : data.source,
            auhomepagecmd: data.auhomepagecmd,
            auhomepageurl: data.auhomepageurl,
            praisenum: +data.praisenum,
            rid: data.rid,
            isliked: `${data.isliked}`,
            comment: data.comment,
            comment_num: data.comment_num,
            link: data.link,
            type: data.type,
            title: data.title,
            image: data.image,
            imageProps,
            videoCmd: data.video_cmd || '',
        }
    }
};

// 一图秒懂
export const transitionMiaodong = (newsData:any, columnType:string, columnIndex:number) => {
    const data = newsData.data;
    let imageProps:any = getBaseImageProps({
        src: data.crop_picture,
        ratio: '16:9',
        radius: 'J_X15',
        labelText: '长图'
    });
    
    return {
        layout: newsData.layout,
        title: data.column_desc,
        imageProps: imageProps,
        fullPicture: data.full_picture, // 全图
        logExtraParams: {
            column_type: columnType,
            column_id: columnIndex + '',
            nid: data.crop_picture,
            res_type: 'miaodong'
        }
    }
};

// 辟谣栏目
export const transitionRefuteRumor = (newsData:any, columnType:string, columnIndex:number) => {
    const data = newsData.data;
    
    return {
        ...data,
        layout: newsData.layout,
        logExtraParams: {
            column_type: columnType,
            column_id: columnIndex + '',
            nid: data.rid ? data.rid : data.nid,
            res_type: 'new_rumor'
        }
    }
}

export default (newsData:any, columnType:string, columnIndex:number) => {
    switch (newsData.layout) {
        case 'image1':
            return image1Trans(newsData, columnType, columnIndex);
        case 'image3':
            return image3Trans(newsData, columnType, columnIndex);
        case 'bigimage':
        case 'livevideo':
            return bigimageTrans(newsData, columnType, columnIndex);
        case 'titleonly':
            return titleonlyTrans(newsData, columnType, columnIndex);
        case 'star_bigimage':
        case 'star_text':
            return transitionStar(newsData, columnType, columnIndex);
        case 'smallimage':
            return transitionDobuleRow(newsData, columnType, columnIndex);
        case 'txtimg':
            return transitionBaike(newsData, columnType, columnIndex);
        case 'fullimg':
            return transitionMiaodong(newsData, columnType, columnIndex);
        case 'debate': 
            return transitionZhenMing(newsData, columnType, columnIndex);
        case 'fulltxt':
            return transitionRefuteRumor(newsData, columnType, columnIndex);
        default:
            return newsData;
    }
};
