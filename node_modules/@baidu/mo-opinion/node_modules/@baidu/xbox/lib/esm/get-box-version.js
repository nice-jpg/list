/**
 * @file 获取手百版本
 * @author wangyongqing01
 */
import { globalObject } from './get-global-object';
import { isBox } from './is-box';
import { isMatrix } from './is-matrix';
import { UA } from './ua';
/**
 * 获取手百的版本号
 *
 * @param [subName=''] 手百矩阵产品标识，取值如：''|lite|pro|info
 * @param ua 传入的 userAgent，如果不传则取 navigator.userAgent
 * @return 返回手百的版本号
 * @example
 * getBoxVersion('lite') // 2.0.1
 * getBoxVersion() // 11.1.0
 */
export function getBoxVersion(subName = '', ua = UA) {
    if (subName === 'main') {
        subName = '';
    }
    if (globalObject === null || globalObject === void 0 ? void 0 : globalObject.baiduboxapp_version) {
        return globalObject.baiduboxapp_version;
    }
    if (isBox(subName, ua) || isMatrix(subName, ua)) {
        let res = /(baiduboxapp|baiduboxvision)\/([\d.]+)/.exec(ua);
        if (res) {
            return res[2];
        }
        else if ((res = /([\d+.]+)_(?:diordna|enohpi)_/.exec(ua))) {
            // 老版本手百
            return res[1].split('.').reverse().join('.');
        }
    }
    return '0';
}
/**
 * 获取大版本号
 */
export function getMainVersion(str, subName = '', ua = UA) {
    str = str || getBoxVersion(subName, ua);
    if (str && typeof str === 'string') {
        let match = /\d+\.\d+/.exec(str);
        if (match) {
            return match[0];
        }
    }
    return 0;
}
/**
 * 获取手百版本，不建议使用，因为不区分手百矩阵产品
 */
export function getVersion() {
    console.warn(`[xbox/getVersion]不建议使用，因为不能区分是什么版本手百
请使用 getBoxVersion(subName) 方法
    `);
    const pro = getBoxVersion('pro');
    const lite = getBoxVersion('lite');
    const info = getBoxVersion('info');
    const mission = getBoxVersion('mission');
    const main = getBoxVersion();
    return pro || info || lite || mission || main;
}
