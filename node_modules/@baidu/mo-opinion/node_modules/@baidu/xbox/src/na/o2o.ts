/**
 * @file 调起o2o框架，支持轻应用（直达号）调起
 * @author wangyongqing01
 * @version $Id: o2o.js 289534 2016-04-07 06:00:51Z yupeng07 $
 */

import {each} from '../each';
import {isPlainObject} from '../is';
import {isIOS, isAndroid} from '../os';
import {command} from './android/invoke';
import {invokeP} from './invoke';

import type {KeyValue} from '../is';

const encode = encodeURIComponent;

/**
 * 调起o2o框架
 *
 * @deprecated
 * @param url 调起的页面url
 * @param opt 调起的参数
 * @param schemeHead 协议头
 *
 * @example
 * ```js
 * // 例如：调起o2o打开百度首页
 * o2o('http://m.baidu.com', {color:'0000ff'});
 * // 调起o2o框架，打开首页，并且指定顶框黑条颜色改变成0000ff(16进制颜色值)
 * o2o('http://m.baidu.com', {color:'0000ff'});
 * // 调起直达号
 * o2o('http://m.baidu.com', {appid:xxxx})
 * ```
 */
export function o2o(url: string | KeyValue, opt?: KeyValue, schemeHead?: string) {
    if (isPlainObject(url)) {
        opt = url as KeyValue;
        url = opt.url as string;
        delete opt.url;
    }

    // iOS 调起o2o框架，（非安卓调起可以方便查看调用参数）
    if (isIOS() || (0 && !isAndroid())) {
        let obj: KeyValue = {
            openurl: encode(url as string),
            minver: '5.3.0.0',
            isla: 0,
            opentype: 1,
            append: 0,
            rbtnstyle: 2,
        };
        if (opt && isPlainObject(opt)) {
            const alias: Record<string, string> = {
                color: 'barcolor',
            };
            each(opt, (value, key) => {
                key = alias[key] || key;
                obj[key] = value;
            });
        }
        if (obj.appid) {
            obj.isla = 1;
        }

        invokeP('easybrowse', obj, schemeHead);
        return;
    }

    // 安卓调起o2o框架
    // android 需要统计各种O2O打开时长，扩展了几个 O2O 框架，需要传 component 参数来区分，以及版本信息，参数不能向下兼容。
    // 当参数存在 component 时，不设置 class，因为端需要做统计使用的 class 不一样。
    // 为了统一以后都只传 component 参数就OK。为了兼容之前的代码如果为空时 class 保持不变。
    // 2016.04.07
    const cclass = opt?.component || 'com.baidu.searchbox.wallet.WalletServiceActivity';
    const minver = opt?.miv_v || opt?.minver || '16783629';

    let intentParts = [`S.bdsb_light_start_url=${encode(url as string)}`];
    if (opt && isPlainObject(opt)) {
        // android intent中不能传递不认参数，不然会报错，因为他们只是透传 intent，没有处理，所以要把多余参数去掉。
        // 2016.04.07
        // 惊了（只移除个min_v，但是注释没提哪些参数不认，这个坑需要实测）
        delete opt.min_v;

        const alias: Record<string, string> = {
            color: 'i.extra_actionbar_color_id',
            appid: 'S.bdsb_wallet_appid',
        };

        each(opt, function (value, key) {
            if (key === 'color') {
                value = parseInt(`0x${value}`, 16) | 0xff000000;
            }

            key = alias[key] || key;
            intentParts.push(`${key}=${value}`);
        });
    }
    const intent = `intent:#Intent;${intentParts.join(';')};end`;

    command(intent, '0', cclass as string, minver as string);
}
