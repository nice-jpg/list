import {Component} from 'san';
import styles from './style.module.less';
import {aucStarHeaderTypes} from './types';
import {WujiAvatar, WujiButton, WujiGrid} from '@baidu/wuji-san';
import {request} from './request';
import concern from '@baidu/xbox-concern';
import {baseSubData, getFocusStatusApi, FOLLOWTOAST, FOLLOWERRNO} from './const';
import {jump} from "@baidu/auc-base/jump";

export class aucStarHeader extends Component {
    static template:string = `
    <wuji-row column="12" class="{{styles.aucStarHeadContent}}">
        <div class="{{styles.aucAuthorLeft}}">
            <div class="{{styles.aucAuthorImg}} {{landType ===1 ? styles.aucAuthorImgMourn : ''}}" on-click="toAuthorPage($event)">
                <wuji-avatar
                src="{{auimage}}"
                size="126"
                vip="{{vip}}"
                ></wuji-avatar>
            </div>
            <div class="{{styles.aucAuthorInfo}}" on-click="toAuthorPage($event)">
                <div class="{{styles.aucAuthorName}}">
                    <span>{{auname}}</span>
                </div>
                <div class="{{styles.aucAuthorAbs}}">
                    <span>{{auabs}}</span>
                </div>
            </div>
        </div>
        <wuji-button
            text="{{isFollow ? '已关注' : '关注'}}"
            height="84"
            color="{{isFollow ? 'light-gray' : 'blue'}}"
            theme="outline"
            radius="J_X06"
            class="{{styles.aucFollowBtn}}"
            on-click="focus($event)"
            loading="{{isLoading}}"
        ></wuji-button>
    </wuji-row>
    `;
    static components:object = {
        'wuji-avatar': WujiAvatar,
        'wuji-button': WujiButton,
        'wuji-col': WujiGrid.Col,
        'wuji-row': WujiGrid.Row
    };
    concernApi:any = null;

    initData(): aucStarHeaderTypes {
        return {
            styles,
            auhomepageurl: '', // 跳转url
            auhomepagecmd: {}, // 头部跳转cmd
            auimage: '', // 头像imgurl
            auimageflag: '', // v标url
            auname: '', // 名称
            auabs: '', // 简介
            vip: '0',
            isVisited: false,
            isFollow: false,
            isLoading: true,
            aumrid: '',
            followtype: ''
        };
    }
    static computed = {
        wrapClass() {
            return [
                styles.aucArrow,
                styles[this.data.get('arrowType')]
            ];
        }
    };
    inited(): void {
        this.data.get('landType') === 1 && this.data.set('vip', +this.data.get('vip') ? '1' : '0')
    }

    attached(): void {
        this.getFocusStatus();
        this.concernApi = concern({
            id: 'topic_star',
            ops: {
                type: this.data.get('followtype'),
                isaladin: 0,
                onLine: true
            }
        });
    }
    
    focus(e): void {
        if (/_refluxos=a8/.test(window.location.search)) {
            return;
        }
        e.event.stopPropagation();
        let params = {
            ...baseSubData,
            op_type: !this.data.get('isFollow') ? 'add' : 'cancel',
            third_id: this.data.get('aumrid'),
            type: this.data.get('followtype'),
            sid: ''
        };
        this.fire('log', this.data.get('isFollow') ? 'dt_unfollow_click' : 'dt_follow_click');
        let isFollow = this.data.get('isFollow');
        this.data.set('isLoading', true);
        this.concernApi.subscribe(params, data => {
            let toastType = 'fail';
            this.data.set('isLoading', false);
            if (data.errno === 0) {
                toastType = 'succ';
                this.data.set('isFollow', !isFollow);
            }
            this.concernApi.toast({
                type: 'tips',
                text: FOLLOWTOAST[toastType][+isFollow]
            });
        }, data => {
            this.data.set('isLoading', false);
            if (data.errno === FOLLOWERRNO.FOLLOWLIMIT) {
                this.concernApi.toast({
                    type: 'tips',
                    text: data.errmsg || FOLLOWTOAST.fail[0]
                });
            }
        });
    }

    getFocusStatus() :void {
        let params = {
            ...baseSubData,
            third_id: this.data.get('aumrid'),
            type: this.data.get('followtype')
        };
        this.data.set('isLoading', true);
        request(getFocusStatusApi, params).then((res)=>{
            if (res.errno === 0){
                this.data.set('isLoading', false);
                if (res && res.data && res.data.items && res.data.items.length) {
                    /*已关注*/
                    this.data.set('isFollow', true);
                } else {
                    this.data.set('isFollow', false);
                }
            } else {
                this.data.set('isLoading', false);
                this.data.set('isFollow', false);
            }
        }, () => {
            this.getFocusStatus();
        });
    }
    toAuthorPage(e) {
        this.fire('log', 'dt_avatar_click');
        jump({
            cmd: this.data.get('auhomepagecmd'),
            link: this.data.get('auhomepageurl')
        });
        e.preventDefault();
        e.stopPropagation();
    }
}

export default aucStarHeader;
