import {
    isIOS,
    isAndroid,
    isMainBox,
    iosInvoke,
    androidInvoke,
    getGlobalFunc,
    getRandomName,
    invokeP,
    versionCompare,
    version,
    type
} from './utils';

export default class PluginAPI {
    constructor(id, playerInstance) {
        this._player = playerInstance;
        this.id = id;
    }
    getPlayerInstance() {
        return this._player;
    }
    getVideoInstance() {
        return this._player.video;
    }
    setVideoInstance(v) {
        this._player.video = v;
    }
    getRoot() {
        return this._player._root;
    }
    getMode() {
        return this._player._mode;
    }
    setMode(mode) {
        this._player._mode = mode;
    }
    getPlayerOption(key) {
        return key ? this._player.options[key] : this._player.options;
    }
    setPlayerOption(key, value) {
        if (key) {
            this._player.options[key] = value;
        }
        else if (type(value) === 'object') { // 不传key时，默认做配置合并
            Object.assign(this._player.options, value);
        }
    }
    getPlayerController(key) {
        return key ? this._player._controller[key] : this._player._controller;
    }
    setPlayerController(key, value) {
        this._player._controller[key] = value;
    }
    getBoxTools() {
        return {
            isIOS,
            isAndroid,
            isMainBox,
            iosInvoke,
            androidInvoke,
            getGlobalFunc,
            getRandomName,
            invokeP,
            versionCompare,
            version
        };
    }
    on(key, cb) {
        this._player.on(key, cb);
    }
    once(key, cb) {
        this._player.once(key, cb);
    }
    emit(key, cb) {
        this._player.emit(key, cb);
    }
    off(key, cb) {
        this._player.off(key, cb);
    }
}

