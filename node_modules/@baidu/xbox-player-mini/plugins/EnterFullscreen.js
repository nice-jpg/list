export default class EnterFullscreen {
    constructor(api, pluginOptions) {
        this.api = api;
        this.pluginOptions = pluginOptions;
    }
    /**
     * 进入全频
     * run为本插件对应的方法实际执行的函数
     */
    run(di) {
        if (this.api.getMode() === 'na') {
            return this.naRun(di);
        }
        this.h5Run(di);
    }
    naRun(di) {
        const direction = di === undefined ? this.api.getPlayerOption('direction') : di;
        this.api.setPlayerOption('direction', direction);
        const {isIOS, isAndroid, invokeP} = this.api.getBoxTools();
        if (isIOS()) {
            // 根据的类型判断进入那种全屏
            let {playerControlType, fullScreenType, containerId} = this.api.getPlayerOption();
            if (playerControlType === 2) {
                fullScreenType = 'windowFullScreen';
            }
            const scHead = fullScreenType === 'windowFullScreen'
                ? 'video/slrEnterFullWindowScreen' : 'video/slrEnterFullCustomScreen';
            invokeP(scHead, {params: {containerId, direction}});
        }
        else if (isAndroid()) {
            this.h5Run();
        }
    }
    h5Run(di) {
        const video = this.api.getVideoInstance();
        const root = this.api.getRoot();
        let requestFullscreen = root.requestFullscreen || root.webkitRequestFullScreen
            || root.mozRequestFullScreen || root.msRequestFullscreen;
        if (requestFullscreen) {
            requestFullscreen.call(root);
        }
        else if (video.webkitSupportsFullscreen) {
            video.webkitEnterFullscreen();
        }
    }
}
