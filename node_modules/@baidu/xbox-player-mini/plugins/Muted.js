export default class Muted {
    constructor(api, pluginOptions) {
        this.api = api;
        this.pluginOptions = pluginOptions;
    }
    /**
      * 是否静音
      */
    get() {
        // 安卓端内核video.muted会直接将音量设置为0，因此内部维护muted不再更改video.muted值
        if (this.api.getMode() === 'na') {
            // 创建播放器后初始化，通过事件更改状态，此处直接取即可
            return this.api.getPlayerOption('muted');
        }
        const video = this.api.getVideoInstance();
        return video ? video.muted : '';
    }
    set(isTrue) {
        const {isIOS, isAndroid, invokeP} = this.api.getBoxTools();
        const containerId = this.api.getPlayerOption('containerId');
        const video = this.api.getVideoInstance();
        if (this.api.getMode() === 'na') {
            if (isIOS()) {
                // 依赖muted事件更新muted值
                invokeP('video/slrSetMuted', {
                    params: {
                        containerId,
                        muted: +isTrue
                    }
                });
            }
            else if (isAndroid()) {
                video.zeusVideoExt = JSON.stringify({
                    id: containerId, // 唯一标识，必选
                    name: 'h5samelayer', // 播放器类型，默认h5samelayer
                    action: 'setMute',
                    data: {muted: +isTrue}
                }); 
            }
            return;
        }
        video && (video.muted = isTrue);
        this.api.setPlayerOption('muted', isTrue);
    }
}
