/**
 * @file index.ts
 * @author leizhihao
 */

import {Component} from 'san';
import styles from './style.module.less';
import {BeancurdCubeData} from './types';
import {beancurdCubeItem} from './item';

export default class BeancurdCube extends Component {
    static template:string = /* html */ `
    <div s-if="isShow" class="{{styles.BeancurdCube}} {{beancurdCubeClass}}">            
        <template s-for="item, index in divData">
            <beancurd-cube-item
                item="{{item}}"
                page-ode="{{pageMode}}"
                index="{{index}}"
                on-bcclick="handleClick"
            ></beancurd-cube-item>
        </template>
    </div>
    `;
    static components:object = {
        'beancurd-cube-item': beancurdCubeItem
    };

    static computed:object = {
        isShow() {
            return this.data.get('divData').length > 1 && this.data.get('divData').length < 7 ? true : false;
        },
        beancurdCubeClass() {
            return this.data.get('isBigEvent') ? styles.beancurdCubeBigEvent : '';
        }
    };

    initData(): BeancurdCubeData {
        return {
            styles,
            divType: 0,
            divLine: 0,
            divData: [],
        };
    }

    inited(): void {
        this.filterData();
    }

    attached(): void {
    }

    filterData(): void {
        const divData = this.data.get('divData');
        if (divData.length === 2) {
            divData[0].isBig = true;
            divData[0].needMr = true;
            divData[1].isBig = true;
        } else if (divData.length === 3) {
            divData[0].isBig = false;
            divData[0].needMr = true;
            divData[1].isBig = false;
            divData[1].needMr = true;
            divData[2].isBig = false;
        } else if (divData.length === 4) {
            divData[0].isBig = true;
            divData[0].needMr = true;
            divData[0].needMb = true;
            divData[1].isBig = true;
            divData[1].needMb = true;
            divData[2].isBig = true;
            divData[2].needMr = true;
            divData[3].isBig = true;
        } else if (divData.length === 5) {
            divData[0].isBig = false;
            divData[0].needMr = true;
            divData[0].needMb = true;
            divData[1].isBig = false;
            divData[1].needMr = true;
            divData[1].needMb = true;
            divData[2].isBig = false;
            divData[2].needMb = true;
            divData[3].isBig = true;
            divData[3].needMr = true;
            divData[4].isBig = true;
        } else if (divData.length === 6) {
            divData[0].isBig = false;
            divData[0].needMr = true;
            divData[0].needMb = true;
            divData[1].isBig = false;
            divData[1].needMr = true;
            divData[1].needMb = true;
            divData[2].isBig = false;
            divData[2].needMb = true;
            divData[3].isBig = false;
            divData[3].needMr = true;
            divData[4].isBig = false;
            divData[4].needMr = true;
            divData[5].isBig = false;
        }
        this.data.set('divData', divData);
    }

    handleClick(index): void {
        this.fire('jump', index);
    }
}
