import {Component} from 'san';
import styles from './style.module.less';
import {aucStarImageAreaTypes} from './types';
import {WujiImage} from '@baidu/wuji-san';
import {env} from '@baidu/auc-base/env';
import {openImage} from '@baidu/auc-base/openImage';

export class aucStarImageArea extends Component {
    static template:string = `
    <div class="{{styles.aucStarImageArea}}">
        <div class="{{styles.imageWrapper}}">
            <wuji-image 
                s-for="image,index in images"
                s-bind="{{image}}"
                lazy="{{true}}"
                class="{{imageTypeMap(image)}} {{image.imgClass}}"
                on-click="imagesClick(index, $event)"
            ></wuji-image>
        </div>
    </div>
    `;
    static components:object = {
        'wuji-image': WujiImage
    };

    initData(): aucStarImageAreaTypes {
        return {
            styles,
            images: []
        };
    }
    static computed = {

    };
    inited(): void {
        this.fitlerImage();
    }
    attached(): void {
        this.watch('images', () =>{
            this.fitlerImage();
        });
    }
    imagesClick(index, e): void {
        e.event && e.event.stopPropagation();
        e.event && e.event.preventDefault();        
        if (/_refluxos=a8/.test(window.location.search)) {
            return;
        }
        let imageList = [];
        const images = this.data.get('images');
        images.forEach((image)=>{
            imageList.push(image.src);
        });
        if (images.length === 1 && images[0].type === 'video' || env.isXiaoMiBaiPai || env.isMatrix) {
            this.fire('jump-detail');
        } else if (env.isBoxSeries) {
            openImage({
                nid: this.data.get('nid'),
                imageList,
                index
            });
        } else {
            this.fire('out-jump');
        }
    }
    fitlerImage(): void {
        if (this.data.get('images').length === 2) {
            this.data.get('images')[0].borderRadius = {
                tr: false,
                br: false
            };
            this.data.get('images')[0].imgClass=[styles.colmr];
            this.data.get('images')[1].borderRadius = {
                tl: false,
                bl: false
            };
        } else if (this.data.get('images').length === 3) {
            this.data.get('images')[0].borderRadius = {
                tr: false,
                br: false
            };
            this.data.get('images')[0].imgClass=[styles.colmr];
            this.data.get('images')[1].borderRadius = {
                tl: false,
                tr: false,
                bl: false,
                br: false
            };
            this.data.get('images')[1].imgClass=[styles.colmr];
            this.data.get('images')[2].borderRadius = {
                tl: false,
                bl: false
            };
        } else if (this.data.get('images').length === 4) {
            this.data.get('images')[0].borderRadius = {
                tr: false,
                br: false,
                bl: false
            };
            this.data.get('images')[0].imgClass=[styles.colmr, styles.colmb];
            this.data.get('images')[1].borderRadius = {
                tl: false,
                bl: false,
                br: false
            };
            this.data.get('images')[1].imgClass=[styles.colmrMax, styles.colmb];
            this.data.get('images')[2].borderRadius = {
                tl: false,
                tr: false,
                br: false
            };
            this.data.get('images')[2].imgClass=[styles.colmr];
            this.data.get('images')[3].borderRadius = {
                tl: false,
                tr: false,
                bl: false
            };
        } else if (this.data.get('images').length === 5) {
            this.data.get('images')[0].borderRadius = {
                tr: false,
                br: false,
                bl: false
            };
            this.data.get('images')[0].imgClass=[styles.colmr, styles.colmb];
            this.data.get('images')[1].borderRadius = {
                tl: false,
                tr: false,
                bl: false,
                br: false
            };
            this.data.get('images')[1].imgClass=[styles.colmr, styles.colmb];
            this.data.get('images')[2].borderRadius = {
                tl: false,
                bl: false,
                br: false
            };
            this.data.get('images')[2].imgClass=[styles.colmb];
            this.data.get('images')[3].borderRadius = {
                tl: false,
                tr: false,
                br: false
            };
            this.data.get('images')[3].imgClass=[styles.colmr];
            this.data.get('images')[4].borderRadius = {
                tl: false,
                tr: false,
                bl: false,
                br: false
            };
        } else if (this.data.get('images').length === 6) {
            this.data.get('images')[0].borderRadius = {
                tr: false,
                br: false,
                bl: false
            };
            this.data.get('images')[0].imgClass=[styles.colmr, styles.colmb];
            this.data.get('images')[1].borderRadius = {
                tl: false,
                tr: false,
                bl: false,
                br: false
            };
            this.data.get('images')[1].imgClass=[styles.colmr, styles.colmb];
            this.data.get('images')[2].borderRadius = {
                tl: false,
                bl: false,
                br: false
            };
            this.data.get('images')[2].imgClass=[styles.colmb];
            this.data.get('images')[3].borderRadius = {
                tl: false,
                tr: false,
                br: false
            };
            this.data.get('images')[3].imgClass=[styles.colmr];
            this.data.get('images')[4].borderRadius = {
                tl: false,
                tr: false,
                bl: false,
                br: false
            };
            this.data.get('images')[4].imgClass=[styles.colmr];
            this.data.get('images')[5].borderRadius = {
                tl: false,
                tr: false,
                bl: false,
            };
        } else if (this.data.get('images').length === 7) {
            this.data.get('images')[0].borderRadius = {
                tr: false,
                br: false,
                bl: false
            };
            this.data.get('images')[0].imgClass=[styles.colmr, styles.colmb];
            this.data.get('images')[1].borderRadius = {
                tl: false,
                tr: false,
                bl: false,
                br: false
            };
            this.data.get('images')[1].imgClass=[styles.colmr, styles.colmb];
            this.data.get('images')[2].borderRadius = {
                tl: false,
                bl: false,
                br: false
            };
            this.data.get('images')[2].imgClass=[styles.colmb];
            this.data.get('images')[3].borderRadius = {
                tl: false,
                tr: false,
                br: false,
                bl: false
            };
            this.data.get('images')[3].imgClass=[styles.colmr, styles.colmb];
            this.data.get('images')[4].borderRadius = {
                tl: false,
                tr: false,
                bl: false,
                br: false
            };
            this.data.get('images')[4].imgClass=[styles.colmr, styles.colmb];
            this.data.get('images')[5].borderRadius = {
                tl: false,
                tr: false,
                bl: false,
                br: false
            };
            this.data.get('images')[5].imgClass=[styles.colmb];
            this.data.get('images')[6].borderRadius = {
                tl: false,
                tr: false,
                br: false
            };
        } else if (this.data.get('images').length === 8) {
            this.data.get('images')[0].borderRadius = {
                tr: false,
                br: false,
                bl: false
            };
            this.data.get('images')[0].imgClass=[styles.colmr, styles.colmb];
            this.data.get('images')[1].borderRadius = {
                tl: false,
                tr: false,
                bl: false,
                br: false
            };
            this.data.get('images')[1].imgClass=[styles.colmr, styles.colmb];
            this.data.get('images')[2].borderRadius = {
                tl: false,
                bl: false,
                br: false
            };
            this.data.get('images')[2].imgClass=[styles.colmb];
            this.data.get('images')[3].borderRadius = {
                tl: false,
                tr: false,
                br: false,
                bl: false
            };
            this.data.get('images')[3].imgClass=[styles.colmr, styles.colmb];
            this.data.get('images')[4].borderRadius = {
                tl: false,
                tr: false,
                bl: false,
                br: false
            };
            this.data.get('images')[4].imgClass=[styles.colmr, styles.colmb];
            this.data.get('images')[5].borderRadius = {
                tl: false,
                tr: false,
                bl: false,
                br: false
            };
            this.data.get('images')[5].imgClass=[styles.colmb];
            this.data.get('images')[6].borderRadius = {
                tl: false,
                tr: false,
                br: false
            };
            this.data.get('images')[6].imgClass=[styles.colmr];
            this.data.get('images')[7].borderRadius = {
                tl: false,
                tr: false,
                br: false,
                bl: false
            };
        } else if (this.data.get('images').length === 9) {
            this.data.get('images')[0].borderRadius = {
                tr: false,
                br: false,
                bl: false
            };
            this.data.get('images')[0].imgClass=[styles.colmr, styles.colmb];
            this.data.get('images')[1].borderRadius = {
                tl: false,
                tr: false,
                bl: false,
                br: false
            };
            this.data.get('images')[1].imgClass=[styles.colmr, styles.colmb];
            this.data.get('images')[2].borderRadius = {
                tl: false,
                bl: false,
                br: false
            };
            this.data.get('images')[2].imgClass=[styles.colmb];
            this.data.get('images')[3].borderRadius = {
                tl: false,
                tr: false,
                br: false,
                bl: false
            };
            this.data.get('images')[3].imgClass=[styles.colmr, styles.colmb];
            this.data.get('images')[4].borderRadius = {
                tl: false,
                tr: false,
                bl: false,
                br: false
            };
            this.data.get('images')[4].imgClass=[styles.colmr, styles.colmb];
            this.data.get('images')[5].borderRadius = {
                tl: false,
                tr: false,
                bl: false,
                br: false
            };
            this.data.get('images')[5].imgClass=[styles.colmb];
            this.data.get('images')[6].borderRadius = {
                tl: false,
                tr: false,
                br: false
            };
            this.data.get('images')[6].imgClass=[styles.colmr];
            this.data.get('images')[7].borderRadius = {
                tl: false,
                tr: false,
                br: false,
                bl: false
            };
            this.data.get('images')[7].imgClass=[styles.colmr];
            this.data.get('images')[8].borderRadius = {
                tl: false,
                tr: false,
                bl: false
            };
        }
    }
    imageTypeMap({type}) {
        if (type === 'multi_image') {
            return styles.aucStarImage;
        }
        if (type === 'video') {
            styles.aucStarSingleVideo
        }
        return styles.aucStarSingleImage;
    }
}

export default aucStarImageArea;
