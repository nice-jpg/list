/**
 * @file color mixins
 * @author wuji.baidu-int.com
 */

// 默认模式色值
@function color-default($code) {
    @return get-value($code, $Default_Cam, $Bussiness_Color);
}

// 暗黑模式色值
@function color-dark($code) {
    @return get-value($code, $Dark_Cam, $Bussiness_Color);
}

// 夜间模式色值
@function color-night($code) {
    @return get-value($code, $Night_Cam, $Bussiness_Color);
}

// mixin: 生成背景颜色
@mixin wuji-background-color($code) {
    $color-default: color-default($code);
    background-color: $color-default;

    @if $multi-mode and $dark-mode {
        $color-dark: color-dark($code);

        @if $color-dark and $color-dark != $color-default {
            .#{$selector-dark} & {
                background-color: $color-dark;
            }
        }
    }

    @if $multi-mode and $night-mode {
        $color-night: color-night($code);

        @if $color-night and $color-night != $color-default {
            .#{$selector-night} & {
                background-color: $color-night;
            }
        }
    }

    @if $multi-mode and $selector-default != '' {
        .#{$selector-default} & {
            background-color: $color-default;
        }
    }
}

// mixin: 添加区分模式的背景图片(可置于全局mixin中)
@mixin wuji-background-image($src: null, $src-dark: null, $src-night: null) {
    @if $src != null {
        background-image: url($src);
    }

    @if $multi-mode {
        @if $src-dark != null and $dark-mode and $src != $src-dark {
            .#{$selector-dark} & {
                background-image: url($src-dark);
            }
        }

        @if $src-night != null and $night-mode and $src != $src-night {
            .#{$selector-night} & {
                background-image: url($src-night);
            }
        }
    }
}

// mixin: 生成背景颜色
@mixin wuji-background($code) {
    @include wuji-background-color($code);
}

// mixin: 生成描边颜色
@mixin wuji-border-color($code, $position: around) {
    $color-default: color-default($code);
    $prop: if($position == around, 'border-color', 'border-#{$position}-color');
    #{$prop}: $color-default;

    @if $multi-mode and $dark-mode {
        $color-dark: color-dark($code);

        @if $color-dark and $color-dark != $color-default {
            .#{$selector-dark} & {
                #{$prop}: $color-dark;
            }
        }
    }

    @if $multi-mode and $night-mode {
        $color-night: color-night($code);

        @if $color-night and $color-night != $color-default {
            .#{$selector-night} & {
                #{$prop}: $color-night;
            }
        }
    }

    @if $multi-mode and $selector-default != '' {
        .#{$selector-default} & {
            #{$prop}: $color-default;
        }
    }
}

// mixin: 生成描边颜色 [移至line/mixin.scss，条件为length($params) == 3]
// @mixin wuji-border($code, $position: around) {
//     @include wuji-border-color($code, $position);
// }

// mixin: 生成上描边颜色
@mixin wuji-border-top-color($code) {
    @include wuji-border-color($code, top);
}

// mixin: 生成右描边颜色
@mixin wuji-border-right-color($code) {
    @include wuji-border-color($code, right);
}

// mixin: 生成下描边颜色
@mixin wuji-border-bottom-color($code) {
    @include wuji-border-color($code, bottom);
}

// mixin: 生成左描边颜色
@mixin wuji-border-left-color($code) {
    @include wuji-border-color($code, left);
}

// mixin: 生成文本颜色
@mixin wuji-color($code) {
    $color-default: color-default($code);
    color: $color-default;

    @if $multi-mode and $dark-mode {
        $color-dark: color-dark($code);

        @if $color-dark and $color-dark != $color-default {
            .#{$selector-dark} & {
                color: $color-dark;
            }
        }
    }

    @if $multi-mode and $night-mode {
        $color-night: color-night($code);

        @if $color-night and $color-night != $color-default {
            .#{$selector-night} & {
                color: $color-night;
            }
        }
    }

    @if $multi-mode and $selector-default != '' {
        .#{$selector-default} & {
            color: $color-default;
        }
    }
}

// mixin: 生成svg填充颜色
@mixin wuji-fill($code, $night-mode: true) {
    $color-default: color-default($code);
    fill: $color-default;

    @if $multi-mode and $dark-mode {
        $color-dark: color-dark($code);

        @if $color-dark and $color-dark != $color-default {
            .#{$selector-dark} & {
                fill: $color-dark;
            }
        }
    }

    @if $multi-mode and $night-mode {
        $color-night: color-night($code);

        @if $color-night and $color-night != $color-default {
            .#{$selector-night} & {
                fill: $color-night;
            }
        }
    }

    @if $multi-mode and $selector-default != '' {
        .#{$selector-default} & {
            fill: $color-default;
        }
    }
}

// mixin: 生成光标颜色
@mixin wuji-caret($code) {
    $color-default: color-default($code);
    caret-color: $color-default;

    @if $multi-mode and $dark-mode {
        $color-dark: color-dark($code);

        @if $color-dark and $color-dark != $color-default {
            .#{$selector-dark} & {
                caret-color: $color-dark;
            }
        }
    }

    @if $multi-mode and $night-mode {
        $color-night: color-night($code);

        @if $color-night and $color-night != $color-default {
            .#{$selector-night} & {
                caret-color: $color-night;
            }
        }
    }

    @if $multi-mode and $selector-default != '' {
        .#{$selector-default} & {
            caret-color: $color-default;
        }
    }
}

// mixin: 生成透明度
@mixin wuji-opacity($code) {
    opacity: map-get($Default_Opacity, $code);
}

// mixin: 根元素注入默认color、background-color, 默认根元素html
@mixin wuji-root(
    $color: CAM_X791,
    $background: CAM_X392,
    $selector-root: $selector-root,
    $selector-dark: $selector-dark,
    $selector-night: $selector-night
) {
    #{$selector-root} {
        color: color-default($color);
        background-color: color-default($background);

        @if $multi-mode and $dark-mode {
            &.#{$selector-dark} {
                color: color-dark($color);
                background-color: color-dark($background);
            }
        }

        @if $multi-mode and $night-mode {
            &.#{$selector-night} {
                color: color-night($color);
                background-color: color-night($background);
            }
        }
    }
}
