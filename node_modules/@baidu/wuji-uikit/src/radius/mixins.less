/**
 * @file radius mixins
 * @author Sheeta(wuhayao@gmail.com)
 */

// @code: J_X*
// @position: around, top-left, top-right, bottom-right, bottom-left
// @pseudo: false, before, after
.wuji-border-radius(@code: undefined, @position: around, @pseudo: false) {
    @raw: getRadius(@code);
    @len: length(@raw);

    & when not (@len = 1) and not (@len = 4) {
        error: e('@{code} value (@{raw}) is invalid');
    }

    & when (@len = 1), (@len = 4) {
        // 设置单个圆角时，降级使用第一个圆角值
        @val: if(@position = around, @raw, extract(@raw, 1));
        // 确定圆角属性
        @prop: if(@position = around, e('border-radius'), e('border-@{position}-radius'));
        @{prop}: addUnit(@val, @dpr, @unit);

        // 伪元素中的圆角如果是通过wuji-line()设置的，因为缩小了@uikit-dpr倍，所以需要在属性值添加倍数调节缩放来抵消处理。
        & when (@pseudo = after), (@pseudo = before) {
            &:@{pseudo} {
                content: '';

                .set-media(1.5, {
                    @{prop}: addUnit(@val, @dpr, @unit * 1.5);
                });

                .set-media(2, {
                    @{prop}: addUnit(@val, @dpr, @unit * 2);
                });

                .set-media(3, {
                    @{prop}: addUnit(@val, @dpr, @unit * 3);
                });
            }
        }
    }
}

// alias
.wuji-radius(@code: undefined, @position: around, @pseudo: false) {
    .wuji-border-radius(@code, @position, @pseudo);
}

// border-top-left-radius
.wuji-border-top-left-radius(@code: undefined, @pseudo: false) {
    .wuji-border-radius(@code, top-left, @pseudo);
}

// border-top-right-radius
.wuji-border-top-right-radius(@code: undefined, @pseudo: false) {
    .wuji-border-radius(@code, top-right, @pseudo);
}

// border-bottom-right-radius
.wuji-border-bottom-right-radius(@code: undefined, @pseudo: false) {
    .wuji-border-radius(@code, bottom-right, @pseudo);
}

// border-bottom-left-radius
.wuji-border-bottom-left-radius(@code: undefined, @pseudo: false) {
    .wuji-border-radius(@code, bottom-left, @pseudo);
}
