/**
 * @file radius mixins
 * @author Sheeta(wuhayao@gmail.com)
 */

// @code: J_X*
// @position: around, top-left, top-right, bottom-right, bottom-left
// @pseudo: false, before, after
@mixin wuji-border-radius($code, $position: around, $pseudo: false) {
    $raw: get-value($code, $H5_Radius, $Bussiness_Radius);
    $len: length($raw);

    @if($len != 1 and $len != 4) {
        @warn "不支持的圆角编码【#{$code}】";
    }

    @else {
        // 设置单个圆角时，降级使用第一个圆角值
        $val: if($position == around, $raw, nth($raw, 1));
        // 确定圆角属性
        $prop: if($position == around, 'border-radius', 'border-#{$position}-radius');
        #{$prop}: add-unit($val);

        // 伪元素中的圆角如果是通过wuji-line()设置的，因为缩小了@uikit-dpr倍，实际上需要抵消处理，所以添加@scale参数来调节缩放
        @if($pseudo == after or $pseudo == before) {
            &:#{$pseudo} {
                content: '';

                // 根据屏幕密度添加样式 1.5/2/3
                @include set-media(1.5) {
                    #{$prop}: add-unit($val, $dpr, $unit * 1.5);
                }

                @include set-media(1.5) {
                    #{$prop}: add-unit($val, $dpr, $unit * 2);
                }

                @include set-media(1.5) {
                    #{$prop}: add-unit($val, $dpr, $unit * 3);
                }
            }
        }
    }
}

// alias
@mixin wuji-radius($code, $position: around, $pseudo: false) {
    @include wuji-border-radius($code, $position, $pseudo);
}

// border-top-left-radius
@mixin wuji-border-top-left-radius($code, $pseudo: false) {
    @include wuji-border-radius($code, top-left, $pseudo);
}

// border-top-right-radius
@mixin wuji-border-top-right-radius($code, $pseudo: false) {
    @include wuji-border-radius($code, top-right, $pseudo);
}

// border-bottom-right-radius
@mixin wuji-border-bottom-right-radius($code, $pseudo: false) {
    @include wuji-border-radius($code, bottom-right, $pseudo);
}

// border-bottom-left-radius
@mixin wuji-border-bottom-left-radius($code, $pseudo: false) {
    @include wuji-border-radius($code, bottom-left, $pseudo);
}
