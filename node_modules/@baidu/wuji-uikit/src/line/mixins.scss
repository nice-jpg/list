/**
 * @file line mixins
 * @author Sheeta(wuhayao@gmail.com)
 *
 * 以下mixin中@position有效值为 [top, right, bottom, left, around]
 */

// 设置线条边框样式
@mixin set-border-styles($code, $position, $color, $hairline: false) {
    @if ($hairline == false) {
        @include wuji-border-width($code, $position);
    }

    @if ($hairline == true) {
        $width-prop: if($position == around, 'border-width', 'border-#{$position}-width');
        #{$width-prop}: if($code == L_X01, 1px, 2px);
    }

    $style-prop: if($position == around, 'border-style', 'border-#{$position}-style');
    #{$style-prop}: solid;

    @if (type-of($color) == color) {
        $color-prop: if($position == around, 'border-color', 'border-#{$position}-color');
        #{$color-prop}: $color;
    }

    @if (type-of($color) != color) {
        @include wuji-border($color, $position);
    }
}

// 设置线条背景颜色
@mixin set-background-color($color) {
    @if (type-of($color) == color) {
        background-color: $color;
    }

    @if (type-of($color) != color) {
        @include wuji-background($color);
    }
}

// hack: 安卓夜间模式1px看不清，通过在伪元素:after上定义rgba颜色后再微调透明度
// @mixin hairline-nightmode() {
//     .#{selector-night} &:after {
//         border-color: rgba(0, 0, 0, .9);
//         background-color: rgba(0, 0, 0, .01);
//         opacity: .3;
//     }
// }

// 单独设置边框宽度属性
@mixin wuji-border-width($code, $position: around) {
    // 确定边框属性
    $prop: if($position == around, 'border-width', 'border-#{$position}-width');
    #{$prop}: add-unit(get-value($code, $H5_Line, $Bussiness_Line), $dpr, $unit);
}
// 单独设置上边框宽度↑
@mixin wuji-border-top-width($code) {
    @include wuji-border-width($code, top);
}
// 单独设置右边框颜色→
@mixin wuji-border-right-width($code) {
    @include wuji-border-width($code, right);
}
// 单独设置下边框颜色↓
@mixin wuji-border-bottom-width($code) {
    @include wuji-border-width($code, bottom);
}
// 单独设置左边框颜色←
@mixin wuji-border-left-width($code) {
    @include wuji-border-width($code, left);
}

// 设置边框样式，参数说明：
// @params: 是cam编码的时候，只生成颜色属性
// @params: 是长度为3的list时，第一项可以是数值或线条编码，第三项可以是颜色值或CAM编码，示例参考eg
// @position: around/top/right/bottom/left
@mixin wuji-border($params, $position: around) {
    @if length($params) == 1 {
        @include wuji-border-color($params, $position);
    }
    @if length($params) == 3 {
        $border-prop: if($position == around, 'border', 'border-#{$position}');
        $width: nth($params, 1);
        $style: nth($params, 2);
        $color: nth($params, 3);

        // 宽度参数不是数字时按编码取值
        @if type-of($width) != number {
            $width: add-unit(get-value($width, $H5_Line, $Bussiness_Line), $dpr, $unit);
        }

        // 颜色参数是色值
        // eg: 1px solid red
        // eg: L_X03 solid red
        @if type-of($color) == color {
            #{$border-prop}: $width $style $color;
        }
        // 颜色参数不是色值时按编码取值
        // eg: 1px solid CAM_X001
        // eg: L_X03 solid CAM_X001
        @else {
            #{$border-prop}: $width $style;
            @include wuji-border-color($color, $position);
        }
    }
}
// 单独设置上边框样式↑
@mixin wuji-border-top($params) {
    @include wuji-border($params, top);
}
// 单独设置右边框样式→
@mixin wuji-border-right($params) {
    @include wuji-border($params, right);
}
// 单独设置下边框样式↓
@mixin wuji-border-bottom($params) {
    @include wuji-border($params, bottom);
}
// 单独设置左边框样式←
@mixin wuji-border-left($params) {
    @include wuji-border($params, left);
}

// 以容器元素border属性实现线条时的样式
// $code: L_X*
// $position: around/top/right/bottom/left
// $color: color/CAM_X*
// $radius: J_X*
@mixin wuji-line($code: L_X03, $position: around, $color: #000, $radius: false) {
    // 判断是否需要添加伪元素
    $pseudo: if(get-value($code, $H5_Line, $Bussiness_Line) < 3, after, false);

    // 线条宽度不小于3时添加边框样式
    @if $pseudo == false {
        @include wuji-border($code solid $color, $position);
    }

    // 线条宽度小于3时添加伪元素
    @else {
        position: relative;
        overflow: visible;

        &:after {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            pointer-events: none;
            transform-origin: 0 0;
            @include wuji-border(if($code == L_X01, 1px, 2px) solid $color, $position);
        }

        @include set-media(1.5) {
            &:after {
                width: 150%;
                height: 150%;
                transform: scale(0.66666667);
            }
        }

        @include set-media(2) {
            &:after {
                width: 200%;
                height: 200%;
                transform: scale(0.5);
            }
        }

        @include set-media(3) {
            &:after {
                width: 300%;
                height: 300%;
                transform: scale(0.33333333);
            }
        }
    }

    // 按圆角编码添加圆角
    @if $radius != false {
        @include wuji-border-radius($radius, around, $pseudo);
    }
}

// 以元素宽高实现线条时的样式
// $code: L_X*
// $color: color/CAM_X*
// $direction: horizontal/vertical
// $width: horizontal时有效
// $height: vertical时有效
@mixin wuji-divider($code: L_X03, $color: transparent, $direction: horizontal, $width: auto, $height: auto) {
    // 线条宽度数值
    $line-size: get-value($code, $H5_Line, $Bussiness_Line);
    // 判断是否需要添加伪元素
    $pseudo: if($line-size < 3, after, false);
    // 线宽属性
    $line-prop: if($direction == horizontal, height, width);
    // 线长属性
    $size-prop: if($direction == horizontal, width, height);
    // 设置线长
    #{$size-prop}: if($size-prop == width, $width, $height);

    // 线条宽度不小于3时添加边框样式
    @if $pseudo == false {
        // 设置线宽
        #{$line-prop}: add-unit($line-size, $dpr, $unit);
        // 添加背景色
        @include set-background-color($color);
    }

    // 线条宽度小于3时添加伪元素，本身占宽度1px
    @else {
        position: relative;
        background-color: transparent;
        #{$line-prop}: 1px;

        // 水平方向按Y轴缩放，垂直方向按X轴缩放
        $scale: if($direction == horizontal, scaleY, scaleX);
        &:after {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            transform-origin: 0 0;
            #{$line-prop}: if($code == L_X01, 1px, 2px);
            #{$size-prop}: 100%;
            @include set-background-color($color);
        }

        @include set-media(1.5) {
            &:after {
                transform: unquote('#{$scale}(0.66666667)');
            }
        }

        @include set-media(2) {
            &:after {
                transform: unquote('#{$scale}(0.5)');
            }
        }

        @include set-media(3) {
            &:after {
                transform: unquote('#{$scale}(0.33333333)');
            }
        }
    }
}
