/**
 * @file 将 query 请求对象字符串化
 * @author weijiaxun <weijiaxun@baidu.com>
 */

import {stringifyArgs} from './stringifyArgs';
import {toGlobalFunc} from './toGlobalFunc';
import {getVariableType} from './getVariableType';

interface Dictionary<T> {
    [key: string]: T;
}

/**
 * 将 query 请求对象中的 value 全部转换成 string 类型
 *
 * @param {Object} query query 对象
 * @param {boolean} stringify 是否使用 JSON.stringify 处理 value 中的对象
 * @return {Object} 转换后的 query 对象
 */
export const stringifyQuery = (query: any = {}, stringify = true): Dictionary<string> => Object
    .keys(query).reduce((result: any, key) => {
        const value = query[key];
        switch (getVariableType(value)) {
            case 'null':
            case 'undefined':
                result[key] = '';
                break;
            case 'array':
                result[key] = stringify
                    ? JSON.stringify(stringifyArgs(value, false))
                    : stringifyArgs(value, false);
                break;
            case 'object':
                result[key] = stringify
                    ? JSON.stringify(stringifyQuery(value, false))
                    : stringifyQuery(value, false);
                break;
            case 'function':
                result[key] = toGlobalFunc(value);
                break;
            default:
                result[key] = (value as string);
        }
        return result;
    }, {});
