"use strict";
/**
 * @file 对象深度merge方法
 * @author yanyiting <yanyiting@baidu.com>
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.extend = void 0;
var is_1 = require("./is");
function merge(target, source) {
    for (var key in source) {
        if ((0, is_1.isPlainObject)(source[key]) || (0, is_1.isArray)(source[key])) {
            if ((0, is_1.isPlainObject)(source[key]) && !(0, is_1.isPlainObject)(target[key])) {
                target[key] = {};
            }
            if ((0, is_1.isArray)(source[key]) && !(0, is_1.isArray)(target[key])) {
                target[key] = [];
            }
            merge(target[key], source[key]);
        }
        else if (!(0, is_1.isUndefined)(source[key])) {
            target[key] = source[key];
        }
    }
}
/**
 * 对象深度 merge，改变目标对象
 *
 * @param target 目标对象
 * @param sources 来源对象
 * @returns 处理后的目标对象
 */
function extend(target) {
    var sources = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        sources[_i - 1] = arguments[_i];
    }
    if ((0, is_1.isBoolean)(target)) {
        target = sources.shift() || {};
    }
    sources.forEach(function (source) {
        merge(target, source);
    });
    return target;
}
exports.extend = extend;
