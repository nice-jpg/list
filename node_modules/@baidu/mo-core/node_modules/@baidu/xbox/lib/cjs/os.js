"use strict";
/**
 * 这里是精简版本的 is
 * @module os
 * @file Created on Mon Nov 26 2018
 * @author wangyongqing <wangyongqing01@baidu.com>
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOSVersion = exports.getOSName = exports.isIOS = exports.isAndroid = void 0;
var ua_1 = require("./ua");
/**
 * 是否是安卓
 *
 * @param ua 默认是 userAgent
 * @return 判断结果
 */
function isAndroid(ua) {
    if (ua === void 0) { ua = ua_1.UA; }
    return /(Android);?[\s/]+([\d.]+)?/.test(ua);
}
exports.isAndroid = isAndroid;
/**
 * 是否是ios
 *
 * @param ua 默认是 userAgent
 * @return 判断结果
 */
function isIOS(ua) {
    if (ua === void 0) { ua = ua_1.UA; }
    return /(iPhone|iPod|iPad)/.test(ua);
}
exports.isIOS = isIOS;
/**
 * 获取系统名称
 *
 * @param ua 默认是 userAgent
 * @return ios/android/unknown
 */
function getOSName(ua) {
    if (ua === void 0) { ua = ua_1.UA; }
    return isIOS(ua) ? 'ios' : isAndroid(ua) ? 'android' : 'unknown';
}
exports.getOSName = getOSName;
/**
 * 获取系统版本
 *
 * @param ua 默认是浏览器 userAgent
 * @return 系统版本
 */
function getOSVersion(ua) {
    if (ua === void 0) { ua = ua_1.UA; }
    var android = /(Android);?\s+([\d.]+)?/.exec(ua);
    if (android) {
        return android[2];
    }
    var iphone = /(iPhone\sOS)\s([\d_]+)/.exec(ua);
    if (iphone) {
        return iphone[2].replace(/_/g, '.');
    }
    return '0';
}
exports.getOSVersion = getOSVersion;
