/**
 * @file 日期格式化
 * @author wangyongqing <wangyongqing01@baidu.com>
 */

import {isType} from './type';
import {typeError} from './type-error';

interface DateConf {
    y: string;
    M: number;
    d: number;
    h: number;
    m: number;
    s: number;
}

/**
 * 日期格式化
 *
 * @param date date 对象
 * @param [pattern = 'yyyy-MM-dd'] 字符串
 * @return 处理后的字符串
 * @example
 * var date = new Date();
 * dateFormat(date, " yyyy年M月d日\n yyyy-MM-dd\n MM-dd-yy\n yyyy-MM-dd hh:mm:ss")
 * 返回：2018年11月10日\n 2018-01-01\n 01-01-18\n 2018-11-12 12:01:02
 */
export function dateFormat(date: Date, pattern = 'yyyy-MM-dd') {
    if (!isType(date, 'date')) {
        throw typeError('date', 'Date', date);
    }

    const conf: DateConf = {
        y: date.getFullYear().toString(), // year
        M: date.getMonth() + 1, // month
        d: date.getDate(), // day
        h: date.getHours(), // hour
        m: date.getMinutes(), // minute
        s: date.getSeconds(), // second
    };

    Object.entries(conf).forEach(([key, val]) => {
        const regex = new RegExp(`(${key}+)`, key === 'y' ? 'gi' : 'g');

        pattern = pattern.replace(regex, match => {
            if (key === 'y') {
                return val.slice(Math.max(0, val.length - match.length));
            }
            return val < 10 && match.length > 1 ? `0${val}` : val;
        });
    });

    return pattern;
}
