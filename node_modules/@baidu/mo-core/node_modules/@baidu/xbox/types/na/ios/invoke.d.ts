/**
 * @file ios invoke
 * @module ios
 */
import type { KeyValue } from '../../is';
/**
 * 校验schema协议
 *
 * @param schema iOS schema 或双端统一调起协议
 * @returns 判断结果
 */
export declare function isSchemaValid(schema: unknown): boolean;
/**
 * 任意 scheme 调起，不校验 baiduboxapp://
 *
 * @param scheme 任意 scheme
 */
export declare function iosInvoke(schema: string): void;
export declare type InvokeCallback = (data: any) => any;
export declare type InvokeParams = KeyValue | InvokeCallback;
/**
 * iosInvokeApp，因为需要创建iframe，所以回调是异步的请求
 *
 * @param action 调用的action，例如downloadnovel
 * @param params 参数对象
 * @param callback 回调函数
 * @example
 * iosInvokeApp('getspeedlogdata', function(cData) {
 *     console.log(cData);
 * });
 * iosInvokeApp('downloadnovel', {
 *     url:'xxxx',
 *     title: 'xxxxxxx'
 * }, function(cData) {
 *     if(cData.error==0){
 *         console.log('success');
 *         alert(cData.result);
 *     }else{
 *         console.log('fail');
 *     }
 * });
 */
export declare function iosInvokeApp(action: string, params?: InvokeParams, callback?: string | InvokeCallback, schemaHead?: string): void;
/**
 * 使用 postMsg 调起
 * BBAMNPJSBridge.postMessage
 *
 * @param schema 调起命令
 */
export declare function postMsgInvoke(schema: string): void;
/**
 * BBAMNPJSBridgeWebViewComponent.postMessage
 *
 * @param scheme 调起命令
 */
export declare function componentInvoke(schema: string): void;
/**
 * iosSyncInvoke
 *
 * @param schema 调起协议
 * @return 返回结果
 */
export declare function iosSyncInvoke(schema: string): any;
/**
 * 带回调的端能力
 *
 * @deprecated
 * @param url 页面地址
 * @param callback 回调函数
 */
export declare function invokeWithCallback(url: string, callback: InvokeCallback): void;
