/**
 * js 加载器
 * @file Created on Thu Nov 22 2018
 * @author wangyongqing <wangyongqing01@baidu.com>
 */
declare type JsonpCallback = () => string;
declare type ErrorCallback = (err: Error, path: string) => void;
declare type SuccessCallback = (data: JSON) => void;
interface LoadJSParams {
    url?: string;
    data?: string;
    before?: (path: string, elem: Element) => unknown;
    success?: SuccessCallback;
    error?: ErrorCallback;
    timeout?: number;
    async?: boolean;
    jsonpCallback?: string | JsonpCallback;
    jsonpCallbackName?: string;
}
/**
 * 加载 JS
 *
 * @param param 参数
 * @example
 *  loadjs({
 *      url,
 *      data,
 *      async,
 *      timeout,
 *      before,
 *      success,
 *      error,
 *      jsonpCallback,
 *      jsonpCallbackName // 传给server的回调函数的名字
 *  })
 */
export declare function loadJS({ url, data, async, timeout, before, success, error, jsonpCallback, jsonpCallbackName, }: LoadJSParams): void;
export {};
