/**
 * @file 组件 carousel 轮播图
 * @author baozhixin <baozhixin@baidu.com>
 */

import './style/index.less';
import {Component, DataTypes} from 'san';

const prefixCls = 's-carousel';

export default class Indicator extends Component {
    // eslint-disable-next-line
    static template = /*html*/ `
        <div s-if="count > 1" class="{{wrapClass}}">
            <span s-if="type === 'num'">{{current}}/{{count}}</span>
            <div s-if="type === 'dot'" s-for="v, k in list" class="dot {{k === index ? 'active' : ''}}"/>
        </div>
    `;

    static dataTypes = {
        index: DataTypes.number,
        count: DataTypes.number,
        type: DataTypes.oneOf(['dot', 'num'])
    };

    static computed = {
        list() {
            return new Array(this.data.get('count'));
        },

        current() {
            const index = this.data.get('index');
            const count = this.data.get('count');
            return index <= 0 ? 1 : index >= count ? count : (index + 1);
        },

        wrapClass() {
            const type = this.data.get('type');
            return [
                `${prefixCls}-indicator`,
                `${prefixCls}-indicator-${type}`
            ];
        }
    };

    initData() {
        return {
            index: 0,
            count: 1,
            type: 'dot'
        };
    }

    inited() {
        const count = this.data.get('count');
        if (count > 5) {
            this.data.set('type', 'num');
        }
    }
}
