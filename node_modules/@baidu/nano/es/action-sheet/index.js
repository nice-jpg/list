/**
 * @file 组件 action-sheet 上拉菜单
 * @author baozhixin <baozhixin@baidu.com>
 */

import './style/index.less';
import {Component, DataTypes} from 'san';
import Icon from '../icon';

const prefixCls = 's-action-sheet';

export default class ActionSheet extends Component {
    // eslint-disable-next-line
    static template = /*html*/ `
        <div s-if="show" class="{{wrapClass}}" on-touchmove="handleTouchmove">
            <div class="${prefixCls}-container">
                <slot name="header"/>
                <div class="${prefixCls}-content">
                    <slot name="content">
                        <div
                            s-for="action, index in actions trackby action.id"
                            class="${prefixCls}-action {{action.class}}"
                            style="color: {{action.color}};"
                            on-click="handleAction(action)"
                        >
                            <s-icon
                                s-if="action.icon"
                                color="{{action.iconColor || action.color}}"
                                size="{{action.iconSize || 'md'}}"
                                type="{{action.icon}}"
                            />
                            {{action.text}}
                        </div>
                    </slot>
                </div>
                <div
                    s-if="closeText"
                    class="${prefixCls}-footer"
                    on-click="handleClose"
                ><span>{{closeText}}</span></div>
            </div>
            <div class="${prefixCls}-mask" on-click="handleMaskClick"/>
        </div>
    `;

    static components = {
        's-icon': Icon
    };

    static dataTypes = {
        actions: DataTypes.array,
        closeText: DataTypes.string,
        layout: DataTypes.oneOf(['grid', 'list']),
        maskClosable: DataTypes.bool,
        round: DataTypes.bool,
        show: DataTypes.bool
    };

    static computed = {
        wrapClass() {
            const round = this.data.get('round');
            return [
                prefixCls,
                round && `${prefixCls}-round`
            ].filter(c => c);
        }
    };

    initData() {
        return {
            actions: [],
            closeText: '取消',
            layout: 'list', // TODO: grid
            maskClosable: true,
            round: true,
            show: false
        };
    }

    handleAction(action) {
        this.fire('action', action);
    }

    handleClose() {
        this.data.set('show', false);
    }

    handleMaskClick() {
        const maskClosable = this.data.get('maskClosable');
        maskClosable && this.handleClose();
    }

    handleTouchmove(e) {
        e.preventDefault();
    }
}
