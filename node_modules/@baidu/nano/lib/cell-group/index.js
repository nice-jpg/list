"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("./style/index.less");

var _san = require("san");

var _icon = _interopRequireDefault(require("../icon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var prefixCls = 's-cell-group';

var CellGroup =
/*#__PURE__*/
function (_Component) {
  _inherits(CellGroup, _Component);

  function CellGroup() {
    _classCallCheck(this, CellGroup);

    return _possibleConstructorReturn(this, _getPrototypeOf(CellGroup).apply(this, arguments));
  }

  _createClass(CellGroup, [{
    key: "initData",
    // eslint-disable-next-line
    value: function initData() {
      return {
        icon: '',
        title: '',
        titleStyle: {},
        gapTop: false,
        gapBottom: false
      };
    }
  }, {
    key: "handleTitleClick",
    value: function handleTitleClick(e) {
      this.fire('title-click', e);
    }
  }]);

  return CellGroup;
}(_san.Component);

exports.default = CellGroup;

_defineProperty(CellGroup, "template",
/*html*/
"\n        <div class=\"{{wrapClass}}\">\n            <slot name=\"title\">\n                <div\n                    s-if=\"title || icon\"\n                    class=\"".concat(prefixCls, "-title\"\n                    style=\"{{titleStyle}}\"\n                    on-click=\"handleTitleClick\"\n                >\n                    <s-icon\n                        s-if=\"icon\"\n                        class=\"").concat(prefixCls, "-icon\"\n                        size=\"xs\"\n                        type=\"{{icon}}\"\n                    />\n                    <span>{{title}}</span>\n                    <div class=\"hairline\"/>\n                </div>\n            </slot>\n            <slot/>\n        </div>\n    "));

_defineProperty(CellGroup, "components", {
  's-icon': _icon.default
});

_defineProperty(CellGroup, "dataTypes", {
  icon: _san.DataTypes.string,
  title: _san.DataTypes.string,
  titleStyle: _san.DataTypes.object,
  gapTop: _san.DataTypes.bool,
  gapBottom: _san.DataTypes.bool
});

_defineProperty(CellGroup, "computed", {
  wrapClass: function wrapClass() {
    var gapTop = this.data.get('gapTop');
    var gapBottom = this.data.get('gapBottom');
    return [prefixCls, gapTop && "".concat(prefixCls, "-gap-top"), gapBottom && "".concat(prefixCls, "-gap-bottom")].filter(function (c) {
      return c;
    });
  }
});