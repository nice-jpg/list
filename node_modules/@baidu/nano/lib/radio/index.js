"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("./style/index.less");

var _san = require("san");

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var prefixCls = 's-radio';
/* eslint-disable max-len */

var svgOuter = 'M30 57c14.912 0 27-12.088 27-27S44.912 3 30 3 3 15.088 3 30s12.088 27 27 27zm0 3C13.431 60 0 46.569 0 30 0 13.431 13.431 0 30 0c16.569 0 30 13.431 30 30 0 16.569-13.431 30-30 30z';
var svgInner = 'M30 0c16.569 0 30 13.431 30 30 0 16.569-13.431 30-30 30C13.431 60 0 46.569 0 30 0 13.431 13.431 0 30 0z';
/* eslint-enable max-len */

var Radio =
/*#__PURE__*/
function (_Component) {
  _inherits(Radio, _Component);

  function Radio() {
    _classCallCheck(this, Radio);

    return _possibleConstructorReturn(this, _getPrototypeOf(Radio).apply(this, arguments));
  }

  _createClass(Radio, [{
    key: "initData",
    // eslint-disable-next-line
    value: function initData() {
      return {
        color: '',
        checked: false,
        disabled: false,
        toggle: false
      };
    }
  }, {
    key: "handleClick",
    value: function handleClick() {
      var _this$data$get = this.data.get(),
          checked = _this$data$get.checked,
          disabled = _this$data$get.disabled,
          toggle = _this$data$get.toggle;

      if (disabled) {
        return;
      }

      var newChecked = toggle ? !checked : checked;
      this.data.set('checked', newChecked);
      this.fire('click', newChecked);
    }
  }]);

  return Radio;
}(_san.Component);

exports.default = Radio;

_defineProperty(Radio, "template",
/*html*/
"\n        <label\n            class=\"{{wrapClass}}\"\n            style=\"{{wrapStyle}}\"\n        >\n            <input\n                class=\"".concat(prefixCls, "-input\"\n                type=\"radio\"\n                checked=\"{{checked}}\"\n                on-click=\"handleClick\"\n            />\n            <span class=\"").concat(prefixCls, "\">\n                <svg\n                    class=\"").concat(prefixCls, "-outer\"\n                    viewBox=\"0 0 60 60\"\n                    role=\"presentation\"\n                ><path d=\"").concat(svgOuter, "\"/></svg>\n                <svg\n                    class=\"").concat(prefixCls, "-inner\"\n                    viewBox=\"0 0 60 60\"\n                    role=\"presentation\"\n                ><path d=\"").concat(svgInner, "\"/></svg>\n            </span>\n            <span class=\"").concat(prefixCls, "-label\">{{label}}</span>\n        </label>\n    "));

_defineProperty(Radio, "dataTypes", {
  color: _san.DataTypes.string,
  checked: _san.DataTypes.bool,
  disabled: _san.DataTypes.bool
});

_defineProperty(Radio, "computed", {
  wrapClass: function wrapClass() {
    var checked = this.data.get('checked');
    var disabled = this.data.get('disabled');
    return ["".concat(prefixCls, "-wrap"), checked && "".concat(prefixCls, "-checked"), disabled && "".concat(prefixCls, "-disabled")].filter(function (c) {
      return c;
    });
  },
  wrapStyle: function wrapStyle() {
    var color = this.data.get('color');
    return color ? {
      'color': color
    } : {};
  }
});