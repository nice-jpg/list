"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = toast;

require("./style/index.less");

var _toast = _interopRequireDefault(require("./toast"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var instance = null;

function toast() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  if (instance) {
    instance.dispose();
  }

  if (typeof options === 'string') {
    options = {
      text: options
    };
  }

  instance = new _toast.default({
    data: options
  });
  instance.attach(document.body);
  return instance;
}

toast.Component = _toast.default;

toast.loading = function (options) {
  if (typeof options === 'string') {
    options = {
      text: options
    };
  }

  var data = _objectSpread({}, options, {
    loading: true
  });

  return toast(data);
};