/**
 * @file 组件 WujiQuickEvaluate 无极-敏捷评估-选项下探
 * @author baozhixin <baozhixin@baidu.com>
 */

import './style/button.less';
import {Component, DataTypes} from 'san';
import Button from '../wuji-button';
import Icon from '../wuji-icon';
import Grid from '../wuji-grid';
import '@baidu/wuji-icons/svg/nimble-accomplished-o-120.svg';

const prefixCls = 'w-qeb';
const THEME2KEY = {
    default: 'day',
    darkmode: 'dark',
    nightmode: 'night',
};

export default class WujiQuickEvaluate extends Component {
    static template = /* html */ `
        <div class="${prefixCls}-wrap {{spacing ? '${prefixCls}-spacing' : ''}}">
            <div s-if="completed" s-ref="content" class="${prefixCls}-content ${prefixCls}-success">
                <wuji-icon
                    type="nimble-accomplished-o-120"
                    size="120"
                    color="#65b12c"
                />
                <div class="tip">{{succTitle}}</div>
            </div>
            <div s-else s-ref="content" class="${prefixCls}-content">
                <div s-if="initTitle" class="${prefixCls}-title">{{initTitle | raw}}</div>
                <div class="${prefixCls}-options-wrap">
                    <template s-for="item, index in items">
                        <div
                            class="${prefixCls}-option {{index === selectedIndex ? 'selected': ''}}"
                            on-click="handleItemClick(index, selectedIndex)"
                        >
                            <img
                                class="${prefixCls}-option-img"
                                src="{{getOptionImage(index, selectedIndex, item, env)}}"
                            />
                            <div class="${prefixCls}-option-txt">{{item.desc}}</div>
                        </div>
                    </template>
                </div>
                <template s-if="selectedItem">
                    <div
                        s-if="selectedItem.subTitle"
                        class="${prefixCls}-subtitle"
                    >{{selectedItem.subTitle | raw}}</div>
                    <wuji-row s-if="selectedItem.subItem && selectedItem.subItem.length" wrap>
                        <wuji-col s-for="item, index in selectedItem.subItem" span="4">
                            <wuji-button
                                class="${prefixCls}-button"
                                text="{{item.name}}"
                                color="{{checkList[index] ? 'dark-gray' : 'light-gray'}}"
                                height="84"
                                radius="J_X15"
                                theme="outline"
                                selected="{{checkList[index]}}"
                                on-click="handleButtonClick(index, checkList, item, selectedItem)"
                            />
                        </wuji-col>
                    </wuji-row>
                    <div s-if="showInput" class="${prefixCls}-input-wrap">
                        <textarea
                            value="{=inputValue=}"
                            class="${prefixCls}-input"
                            placeholder="留下原因吧，我们很关注你的感受"
                            maxlength="{{maxlength}}"
                        />
                        <div
                            s-if="inputValue.length"
                            class="${prefixCls}-input-counter"
                        >{{inputValue.length}}/{{maxlength}}</div>
                    </div>
                </template>
                <div s-if="selectedIndex !== undefined" class="${prefixCls}-submit-wrap">
                    <wuji-button
                        class="${prefixCls}-submit"
                        text="提交"
                        color="dark-gray"
                        round
                        theme="outline"
                        width="327"
                        height="108"
                        on-click="handleSubmit"
                    />
                </div>
            </div>
        </div>
    `;

    static components = {
        'wuji-row': Grid.Row,
        'wuji-col': Grid.Col,
        'wuji-button': Button,
        'wuji-icon': Icon,
    };

    static dataTypes = {
        initTitle: DataTypes.string,
        succTitle: DataTypes.string,
    };

    static computed = {
        selectedItem() {
            const selectedIndex = this.data.get('selectedIndex');
            const items = this.data.get('items');
            return items[selectedIndex];
        },
    };

    initData() {
        return {
            env: {
                theme: 'default', // default、darkmode、nightmode
            },
            completed: false,
            initTitle: '',
            succTitle: '',
            items: [],
            selectedIndex: undefined,
            checkList: {},
            inputValue: '',
            maxlength: 100,
            spacing: true,
        };
    }

    attached() {
        this.el.style.height = `${this.el.offsetHeight}px`;
    }

    updated() {
        const $content = this.ref('content');
        if ($content) {
            this.el.style.height = `${$content.offsetHeight}px`;
        }
    }

    getOptionImage(index, selectedIndex, item, env) {
        const key1 = index === selectedIndex ? 'imgSelected' : 'img';
        const key2 = THEME2KEY[env.theme] || 'day';
        return item[key1][key2];
    }

    // 一级选项点击
    handleItemClick(index, selectedIndex) {
        this.data.set('checkList', {});
        this.data.set('showInput', false);
        this.data.set('inputValue', '');
        this.data.set('selectedIndex', index === selectedIndex ? undefined : index);
    }

    // 二级选项点击
    handleButtonClick(index, checkList, item, selectedItem) {
        const checked = !checkList[index];
        if (selectedItem.subType > 1) {
            // 多选
            const curCheckList = Object.assign({}, checkList, {[index]: checked});
            const showInput
                = Object.keys(curCheckList).filter(i => {
                    return curCheckList[i] && selectedItem.subItem[i].needInput > 0;
                }).length > 0;
            this.data.set(`checkList[${index}]`, checked);
            this.data.set('showInput', showInput);
        }
        else {
            // 单选
            this.data.set('checkList', {[index]: checked});
            this.data.set('showInput', item.needInput && checked);
        }
    }

    // 点击提交
    handleSubmit(event) {
        this.fire('submit', {event, data: this.data.get()});
    }
}
