/**
 * @file 组件 WujiGrid/col 栅格/列
 * @author baozhixin <baozhixin@baidu.com>
 *
 * Mark: 未监听父组件的属性变化，暂时没必要
 */

import {Component, DataTypes} from 'san';
import pr2rem from '../utils/pr2rem';

const prefixCls = 'w-col';

export default class Col extends Component {
    static template = /* html */ `
        <div class="${prefixCls}" style="{{colStyle}}">
            <slot/>
        </div>
    `;

    static dataTypes = {
        span: DataTypes.oneOfType([
            DataTypes.string,
            DataTypes.number,
        ]),
        offset: DataTypes.oneOfType([
            DataTypes.string,
            DataTypes.number,
        ]),
    };

    static computed = {
        colStyle() {
            let style = {};
            const data = this.data;
            const gutter = data.get('gutter');
            const span = data.get('span');
            const offset = data.get('offset');
            const column = data.get('column');

            if (gutter > 0) {
                const padding = `${pr2rem(gutter / 2)}rem`;
                Object.assign(style, {
                    'padding-left': padding,
                    'padding-right': padding,
                });
            }

            if (!span) {
                Object.assign(style, {
                    '-webkit-box-flex': 1,
                    '-webkit-flex-grow': 1,
                    'flex-grow': 1,
                });
            }
            else {
                const width = (span / column) * 100 + '%';
                Object.assign(style, {
                    '-webkit-box-flex': 0,
                    '-webkit-flex-grow': 0,
                    'flex-grow': 0,
                    '-webkit-flex-basis': width,
                    'flex-basis': width,
                    'max-width': width,
                });
            }

            if (offset > 0 && offset < +column) {
                const left = (offset / +column) * 100 + '%';
                Object.assign(style, {
                    'margin-left': left,
                });
            }

            return style;
        },
    };

    inited() {
        const $parent = this.parentComponent;

        if ($parent && $parent.isGridRow) {
            const {column, gutter} = $parent.data.get();
            this.data.set('column', column);
            this.data.set('gutter', gutter);
        }
    }
}
