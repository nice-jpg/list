/**
 * @file 组件 WujiImageText 无极-左图右文
 * @author baozhixin <baozhixin@baidu.com>
 */

import './style/index.less';
import {Component, DataTypes} from 'san';
import Grid from '../wuji-grid';
import Image from '../wuji-image';
import Title from '../wuji-title';
import Widget from '../wuji-widget';

const prefixCls = 'w-image-text';

export default class WujiImageText extends Component {
    static template = /* html */ `
        <div class="{{wrapClass}}" on-click="handleClick">
            <slot name="header"/>
            <wuji-row gutter="{{gutter}}" wrap="{{false}}" margin="{{spacing ? margin : 0}}">
                <wuji-col s-if="hasImage" class="${prefixCls}-left" span="{{imgColSpan}}">
                    <wuji-img s-bind="imageProps" src="{{image}}" user-select="{{userSelect}}" s-ref="image">
                        <slot s-if="hasMaskSlot" name="imageMask" slot="{{hasMaskSlot ? 'mask': ''}}"></slot>
                    </wuji-img>
                </wuji-col>
                <wuji-col
                    span="{{hasImage ? 12 - imgColSpan : 12}}"
                    class="${prefixCls}-right ${prefixCls}-{{justify}}"
                >
                    <slot name="title">
                        <wuji-title
                            s-if="title || titleProps.text"
                            s-bind="{{titleProps}}"
                            text="{{title || titleProps.text}}"
                            label="{{label}}"
                            labelProps="{{labelProps}}"
                            spacing="{{false}}"
                            size="{{titleSize}}"
                        />
                    </slot>
                    <slot name="detail">
                        <div s-if="discount || price" class="${prefixCls}-price-wrap">
                            <span class="${prefixCls}-price">{{discount || price}}</span>
                            <span s-if="discount" class="${prefixCls}-price-origin">{{price}}</span>
                        </div>
                    </slot>
                </wuji-col>
            </wuji-row>
            <slot name="footer"/>
            <wuji-widget
                s-if="widgets && widgets.length > 0"
                items="{{widgets}}"
                spacing
                dislike="{{dislike}}"
                has-margin-top="{{false}}"
                on-dislike="dislike"
            />
            <div s-if="hairline" class="${prefixCls}-hairline"/>
        </div>
    `;

    static components = {
        'wuji-row': Grid.Row,
        'wuji-col': Grid.Col,
        'wuji-img': Image,
        'wuji-title': Title,
        'wuji-widget': Widget,
    };

    static dataTypes = {
        title: DataTypes.string,
        label: DataTypes.string,
        price: DataTypes.string,
        discount: DataTypes.string,
        image: DataTypes.string,
        imageProps: DataTypes.object,
        dislike: DataTypes.bool,
        gutter: DataTypes.number,
        margin: DataTypes.number,
        spacing: DataTypes.bool,
        hairline: DataTypes.bool,
        justify: DataTypes.oneOf([
            'center',
            'flex-start',
            'flex-end',
            'space-between',
            'space-around',
        ]),
    };

    static computed = {
        wrapClass() {
            return [
                prefixCls,
            ].filter(c => c);
        },
        hasImage() {
            const image = this.data.get('image');
            const imageProps = this.data.get('imageProps');
            return (imageProps && imageProps.src) || image;
        },
    };

    initData() {
        return {
            title: '',
            price: '',
            discount: '123元',
            dislike: false,
            imageProps: {},
            margin: 51,
            spacing: true,
            userSelect: true,
            justify: 'flex-start',
            hairline: false,
            imgColSpan: 3,
        };
    }

    handleClick(event) {
        this.fire('click', {event, data: this.data.get()});
    }

    dislike(event) {
        this.fire('dislike', {event, data: this.data.get()});
    }
}
