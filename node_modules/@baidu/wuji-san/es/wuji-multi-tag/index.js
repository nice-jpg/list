/**
 * @file 组件 WujiMultiTag 无极-多标签入口
 * @author raowenjuan <raowenjuan@baidu.com>
 */

import './style/index.less';
import {Component, DataTypes} from 'san';
import Icon from '../wuji-icon';
import '@baidu/wuji-icons/svg/d20-search-o-66.svg';

const prefixCls = 'w-multi-tag';

export default class WujiMultiTag extends Component {
    static template = /* html */ `
        <div class="${prefixCls}-wrap">
            <span class="${prefixCls}-desc" s-if="desc">{{desc}}</span>
            <div class="${prefixCls}-item type-{{showType}}" s-for="item, index in tags">
                <div class="${prefixCls}-icon-wrap" s-if="showType === 2">
                    <wuji-icon type="d20-search-o-66" size="42"/>
                </div>
                <span
                    class="${prefixCls}-tag"
                    on-click="handleClick($event, item)">{{ item.value | format(showType) }}</span>
            </div>
        </div>
    `;

    static components = {
        'wuji-icon': Icon,
    };

    static dataTypes = {
        showType: DataTypes.oneOf([
            1,
            2,
            3,
        ]),
        tags: DataTypes.array,
    };

    static filters = {
        format(tag, showType) {
            const tags = this.data.get('tags');
            const len = tags.length;
            // 如果是第三种类型，2个入口则限制字数为6，3/4个入口限制字数为4；否则都限制为4
            return showType === 3 && len <= 2 ? tag.substring(0, 6) : tag.substring(0, 4);
        },
    };

    static computed = {
        showType() {
            const type = this.data.get('type');
            return parseInt(type, 10);
        },
    };

    handleClick(event, item) {
        this.fire('click', {event, data: item});
    }

    initData() {
        return {
            // 枚举值 1: 第一个tag为纯文字 2: 基于1的基础上 其他tag带搜索按钮 3: 全为面底_圆矩样式
            type: 1,
        };
    }
}
