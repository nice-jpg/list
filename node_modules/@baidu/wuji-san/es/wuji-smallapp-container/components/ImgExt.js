/**
 * @file ImgExt
 * @author baozhixin@baidu.com
 *
 * TODO: 图标梳理清楚后替换为wuji-icon
 */

import {Component} from 'san';
import WujiLabel from '../../wuji-label';
import '@baidu/wuji-icons/svg/live-newreview-f-30.svg';
import '@baidu/wuji-icons/svg/live-newtrailer-f-30.svg';

const ICONINSLOT = 'icon-in-slot';
const TYPE2COLOR = {
    capsule: 'gray',
    live: 'red',
    review: 'gray',
    preview: 'blue',
};
const TYPE2ICON = {
    live: ICONINSLOT, // 这里是给动效图标占位的
    review: 'live-newreview-f-30',
    preview: 'live-newtrailer-f-30',
};

class ImgExt extends Component {
    static template = /* html */ `
        <div class="imgExtContainer">
            <div s-if="videoType" class="videoWrap">
                <div class="labelWrap">
                    <wuji-label s-bind="getLabelProps(videoInfo, videoType)">
                        <svg s-if="videoType === 'live'" slot="icon" viewBox="0 0 30 30" class="liveIcon">
                            <rect class="line line1" x="0" y="3" width="6" height="24" rx="3"/>
                            <rect class="line line2" x="12" y="3" width="6" height="24" rx="3"/>
                            <rect class="line line3" x="24" y="3" width="6" height="24" rx="3"/>
                        </svg>
                    </wuji-label>
                </div>
                <div s-if="textInfo" class="videoText">{{textInfo}}</div>
            </div>
            <div s-else class="imgIconWrap">
                <img s-if="showBigIcon" src="{{bigIcon}}" class="bigIcon"/>
                <wuji-label
                    s-if="info || icon"
                    s-bind="getLabelProps(info, 'capsule', icon && !showBigIcon)"
                    class="capsule"
                >
                    <img slot="icon" src="{{icon}}" class="capsuleIcon"/>
                </wuji-label>
            </div>
        </div>
    `;

    static components = {
        'wuji-label': WujiLabel,
    };

    static computed = {
        showBigIcon() {
            const bigIcon = this.data.get('bigIcon');
            const ext = this.data.get('ext');
            if (
                bigIcon
                && ext.templateType
                && ext.templateType === 'vertical'
                && ext.resourceType
                && ext.resourceType !== 'wenda'
                && ext.resourceType !== 'gallery'
            ) {
                return true;
            }
            return false;
        },
    };

    getLabelProps(text, type = 'capsule', showCapsuleIcon) {
        let iconName = TYPE2ICON[type];
        if (showCapsuleIcon && type === 'capsule') {
            iconName = ICONINSLOT;
        }
        let h = type === 'capsule' ? 54 : 57;
        let w = type === 'capsule' ? (iconName ? 'K17' : 'K18') : 'K5';
        return {
            text,
            icon: iconName,
            color: TYPE2COLOR[type],
            theme: 'filled',
            h,
            w,
        };
    }
}

export default ImgExt;
