/**
 * @file 组件 WujiRate 无极-评分
 * @author baozhixin <baozhixin@baidu.com>
 */

import './style/index.less';
import {Component, DataTypes} from 'san';
import Icon from '../wuji-icon';

import '@baidu/wuji-icons/svg/score-star-f-30.svg';
import '@baidu/wuji-icons/svg/score-star-o-30.svg';

const prefixCls = 'w-rate';

function getStarStatus(score, index, allowHalf) {
    if (+score >= index) {
        return 'full';
    }

    if (Math.round(score) >= index && !allowHalf) {
        return 'full';
    }

    if (+score + 0.5 >= index && allowHalf) {
        return 'half';
    }

    return 'void';
}

export default class WujiRate extends Component {
    static template = /* html */ `
        <div class="{{wrapClass}}">
            <div
                s-if="text && textPosition === 'left'"
                class="${prefixCls}-text"
            >{{text}}</div>
            <div class="${prefixCls}-list">
                <div
                    s-for="star, index in list"
                    class="${prefixCls}-item"
                    on-click="select(index)"
                >
                    <wuji-icon
                        s-if="star !== 'full'"
                        type="score-star-o-30"
                    />
                    <wuji-icon
                        s-if="star !== 'void'"
                        type="score-star-f-30"
                        class="{{star === 'half' && '${prefixCls}-half'}}"
                    />
                </div>
            </div>
            <div
                s-if="text && textPosition === 'right'"
                class="${prefixCls}-text"
            >{{text}}</div>
        </div>
    `;

    static components = {
        'wuji-icon': Icon,
    };

    static dataTypes = {
        allowHalf: DataTypes.bool,
        count: DataTypes.number,
        disabled: DataTypes.bool,
        score: DataTypes.oneOfType([
            DataTypes.number,
            DataTypes.string,
        ]),
        size: DataTypes.oneOf([
            'sm',
            'md',
        ]),
        text: DataTypes.string,
        textPosition: DataTypes.oneOf([
            'left',
            'right',
        ]),
    };

    static computed = {
        list() {
            const data = this.data;
            const count = data.get('count');
            const score = data.get('score');
            const allowHalf = data.get('allowHalf');

            const list = [];
            for (let i = 1; i <= count; i++) {
                list.push(getStarStatus(score, i, allowHalf));
            }

            return list;
        },
        wrapClass() {
            const size = this.data.get('size');
            return [
                `${prefixCls}-wrap`,
                `${prefixCls}-${size}`,
            ];
        },
    };

    initData() {
        return {
            allowHalf: true,
            count: 5,
            disabled: false,
            size: 'sm',
            score: 0,
            text: '',
            textPosition: 'right',
        };
    }

    select(index) {
        const disabled = this.data.get('disabled');
        if (disabled) {
            return;
        }

        this.data.set('score', index + 1);
    }
}
