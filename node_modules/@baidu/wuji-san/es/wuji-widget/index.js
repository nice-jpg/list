/**
 * @file 组件 WujiWidget 无极-挂件
 * @author baozhixin <baozhixin@baidu.com>
 */

import './style/index.less';
import {Component, DataTypes} from 'san';
import Icon from '../wuji-icon';
import Image from '../wuji-image';

import '@baidu/wuji-icons/svg/dislike-o-36.svg';

const prefixCls = 'w-widget';

export default class WujiWidget extends Component {
    static template = /* html */ `
        <div class="{{wrapClass}}">
            <div class="${prefixCls}-items">
                <template s-for="item, index in items">
                    <wuji-image
                        s-if="item.type === 'image'"
                        class="${prefixCls}-item ${prefixCls}-image"
                        s-bind="item"
                    />
                    <div
                        s-else
                        class="${prefixCls}-item {{item.type || 'normal'}}"
                    >{{item.text}}</div>
                </template>
            </div>
            <div
                s-if="dislike"
                class="${prefixCls}-dislike"
                on-click="dislike"
                on-touchstart="handleTouchstart"
            >
                <wuji-icon
                    type="dislike-o-36"
                    size="{{36}}"
                />
            </div>
        </div>
    `;

    static components = {
        'wuji-icon': Icon,
        'wuji-image': Image,
    };

    static dataTypes = {
        dislike: DataTypes.bool,
        hasMarginTop: DataTypes.bool,
        hasMarginBottom: DataTypes.bool,
        items: DataTypes.arrayOf(
            DataTypes.shape({
                type: DataTypes.oneOf([
                    'normal',
                    'image',
                    'label',
                ]),
                text: DataTypes.string,
            })
        ),
    };

    static computed = {
        wrapClass() {
            const data = this.data;
            const hasMarginTop = data.get('hasMarginTop');
            const hasMarginBottom = data.get('hasMarginBottom');
            const spacing = data.get('spacing');
            return [
                prefixCls,
                hasMarginTop && `${prefixCls}-mt`,
                hasMarginBottom && `${prefixCls}-mb`,
                spacing && `${prefixCls}-mx`,
            ].filter(c => c);
        },
    };

    initData() {
        return {
            items: [],
            dislike: false,
            hasMarginTop: true,
            hasMarginBottom: false,
            spacing: false,
        };
    }

    dislike(event) {
        event.stopPropagation();
        this.fire('dislike', {event});
    }

    handleTouchstart(event) {
        event.preventDefault();
    }
}
