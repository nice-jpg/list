"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _san = require("san");

var _wujiButton = _interopRequireDefault(require("../../wuji-button"));

var _wujiRate = _interopRequireDefault(require("../../wuji-rate"));

var _Coupon = _interopRequireDefault(require("./Coupon"));

var _List2d = _interopRequireDefault(require("./List2d"));

var _Progress = _interopRequireDefault(require("./Progress"));

var _Tags = _interopRequireDefault(require("./Tags"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Detail = /*#__PURE__*/function (_Component) {
  _inherits(Detail, _Component);

  var _super = _createSuper(Detail);

  function Detail() {
    _classCallCheck(this, Detail);

    return _super.apply(this, arguments);
  }

  return Detail;
}(_san.Component);

_defineProperty(Detail, "template",
/* html */
"\n        <div class=\"detailContainer\">\n            <template s-for=\"content in formatList\">\n                <div s-if=\"content.twoItemGrid\" class=\"{{content.class}}\">\n                    <div class=\"gridContainer\">\n                        <template s-for=\"item in content.formatItems\">\n                            <led-list2d s-if=\"item.type === 'list2d'\" s-bind=\"item.data\"/>\n                            <wuji-button s-if=\"item.type === 'button'\" s-bind=\"item.data\" width=\"240\" can-bubble/>\n                        </template>\n                    </div>\n                </div>\n                <div s-else class=\"lineWrap {{content.class}}\">\n                    <template s-for=\"item in content.formatItems\">\n                        <img s-if=\"item.type === 'icon'\" s-bind=\"item.data\"/>\n                        <div s-if=\"item.type === 'text'\" s-bind=\"item.data\">{{item.data.text}}</div>\n                        <led-coupon s-if=\"item.type === 'coupon'\" s-bind=\"item.data\"/>\n                        <led-list2d s-if=\"item.type === 'list2d'\" s-bind=\"item.data\"/>\n                        <led-progress s-if=\"item.type === 'progress'\" s-bind=\"item.data\"/>\n                        <led-tags s-if=\"item.type === 'tags'\" s-bind=\"item.data\"/>\n                        <wuji-button s-if=\"item.type === 'button'\" s-bind=\"item.data\" width=\"240\" can-bubble/>\n                        <wuji-star s-if=\"item.type === 'star'\" s-bind=\"item.data\"/>\n                    </template>\n                </div>\n            </template>\n        </div>\n    ");

_defineProperty(Detail, "components", {
  'led-coupon': _Coupon["default"],
  'led-list2d': _List2d["default"],
  'led-progress': _Progress["default"],
  'led-tags': _Tags["default"],
  'wuji-button': _wujiButton["default"],
  'wuji-star': _wujiRate["default"]
});

var _default = Detail;
exports["default"] = _default;