"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _san = require("san");

var _wujiLabel = _interopRequireDefault(require("../../wuji-label"));

require("@baidu/wuji-icons/svg/live-newreview-f-30.svg");

require("@baidu/wuji-icons/svg/live-newtrailer-f-30.svg");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var ICONINSLOT = 'icon-in-slot';
var TYPE2COLOR = {
  capsule: 'gray',
  live: 'red',
  review: 'gray',
  preview: 'blue'
};
var TYPE2ICON = {
  live: ICONINSLOT,
  // 这里是给动效图标占位的
  review: 'live-newreview-f-30',
  preview: 'live-newtrailer-f-30'
};

var ImgExt = /*#__PURE__*/function (_Component) {
  _inherits(ImgExt, _Component);

  var _super = _createSuper(ImgExt);

  function ImgExt() {
    _classCallCheck(this, ImgExt);

    return _super.apply(this, arguments);
  }

  _createClass(ImgExt, [{
    key: "getLabelProps",
    value: function getLabelProps(text) {
      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'capsule';
      var showCapsuleIcon = arguments.length > 2 ? arguments[2] : undefined;
      var iconName = TYPE2ICON[type];

      if (showCapsuleIcon && type === 'capsule') {
        iconName = ICONINSLOT;
      }

      var h = type === 'capsule' ? 54 : 57;
      var w = type === 'capsule' ? iconName ? 'K17' : 'K18' : 'K5';
      return {
        text: text,
        icon: iconName,
        color: TYPE2COLOR[type],
        theme: 'filled',
        h: h,
        w: w
      };
    }
  }]);

  return ImgExt;
}(_san.Component);

_defineProperty(ImgExt, "template",
/* html */
"\n        <div class=\"imgExtContainer\">\n            <div s-if=\"videoType\" class=\"videoWrap\">\n                <div class=\"labelWrap\">\n                    <wuji-label s-bind=\"getLabelProps(videoInfo, videoType)\">\n                        <svg s-if=\"videoType === 'live'\" slot=\"icon\" viewBox=\"0 0 30 30\" class=\"liveIcon\">\n                            <rect class=\"line line1\" x=\"0\" y=\"3\" width=\"6\" height=\"24\" rx=\"3\"/>\n                            <rect class=\"line line2\" x=\"12\" y=\"3\" width=\"6\" height=\"24\" rx=\"3\"/>\n                            <rect class=\"line line3\" x=\"24\" y=\"3\" width=\"6\" height=\"24\" rx=\"3\"/>\n                        </svg>\n                    </wuji-label>\n                </div>\n                <div s-if=\"textInfo\" class=\"videoText\">{{textInfo}}</div>\n            </div>\n            <div s-else class=\"imgIconWrap\">\n                <img s-if=\"showBigIcon\" src=\"{{bigIcon}}\" class=\"bigIcon\"/>\n                <wuji-label\n                    s-if=\"info || icon\"\n                    s-bind=\"getLabelProps(info, 'capsule', icon && !showBigIcon)\"\n                    class=\"capsule\"\n                >\n                    <img slot=\"icon\" src=\"{{icon}}\" class=\"capsuleIcon\"/>\n                </wuji-label>\n            </div>\n        </div>\n    ");

_defineProperty(ImgExt, "components", {
  'wuji-label': _wujiLabel["default"]
});

_defineProperty(ImgExt, "computed", {
  showBigIcon: function showBigIcon() {
    var bigIcon = this.data.get('bigIcon');
    var ext = this.data.get('ext');

    if (bigIcon && ext.templateType && ext.templateType === 'vertical' && ext.resourceType && ext.resourceType !== 'wenda' && ext.resourceType !== 'gallery') {
      return true;
    }

    return false;
  }
});

var _default = ImgExt;
exports["default"] = _default;