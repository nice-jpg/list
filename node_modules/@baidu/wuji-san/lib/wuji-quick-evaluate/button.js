"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

require("./style/button.less");

var _san = require("san");

var _wujiButton = _interopRequireDefault(require("../wuji-button"));

var _wujiIcon = _interopRequireDefault(require("../wuji-icon"));

var _wujiGrid = _interopRequireDefault(require("../wuji-grid"));

require("@baidu/wuji-icons/svg/nimble-accomplished-o-120.svg");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var prefixCls = 'w-qeb';
var THEME2KEY = {
  "default": 'day',
  darkmode: 'dark',
  nightmode: 'night'
};

var WujiQuickEvaluate = /*#__PURE__*/function (_Component) {
  _inherits(WujiQuickEvaluate, _Component);

  var _super = _createSuper(WujiQuickEvaluate);

  function WujiQuickEvaluate() {
    _classCallCheck(this, WujiQuickEvaluate);

    return _super.apply(this, arguments);
  }

  _createClass(WujiQuickEvaluate, [{
    key: "initData",
    value: function initData() {
      return {
        env: {
          theme: 'default' // default、darkmode、nightmode

        },
        completed: false,
        initTitle: '',
        succTitle: '',
        items: [],
        selectedIndex: undefined,
        checkList: {},
        inputValue: '',
        maxlength: 100,
        spacing: true
      };
    }
  }, {
    key: "attached",
    value: function attached() {
      this.el.style.height = "".concat(this.el.offsetHeight, "px");
    }
  }, {
    key: "updated",
    value: function updated() {
      var $content = this.ref('content');

      if ($content) {
        this.el.style.height = "".concat($content.offsetHeight, "px");
      }
    }
  }, {
    key: "getOptionImage",
    value: function getOptionImage(index, selectedIndex, item, env) {
      var key1 = index === selectedIndex ? 'imgSelected' : 'img';
      var key2 = THEME2KEY[env.theme] || 'day';
      return item[key1][key2];
    } // 一级选项点击

  }, {
    key: "handleItemClick",
    value: function handleItemClick(index, selectedIndex) {
      this.data.set('checkList', {});
      this.data.set('showInput', false);
      this.data.set('inputValue', '');
      this.data.set('selectedIndex', index === selectedIndex ? undefined : index);
    } // 二级选项点击

  }, {
    key: "handleButtonClick",
    value: function handleButtonClick(index, checkList, item, selectedItem) {
      var checked = !checkList[index];

      if (selectedItem.subType > 1) {
        // 多选
        var curCheckList = Object.assign({}, checkList, _defineProperty({}, index, checked));
        var showInput = Object.keys(curCheckList).filter(function (i) {
          return curCheckList[i] && selectedItem.subItem[i].needInput > 0;
        }).length > 0;
        this.data.set("checkList[".concat(index, "]"), checked);
        this.data.set('showInput', showInput);
      } else {
        // 单选
        this.data.set('checkList', _defineProperty({}, index, checked));
        this.data.set('showInput', item.needInput && checked);
      }
    } // 点击提交

  }, {
    key: "handleSubmit",
    value: function handleSubmit(event) {
      this.fire('submit', {
        event: event,
        data: this.data.get()
      });
    }
  }]);

  return WujiQuickEvaluate;
}(_san.Component);

exports["default"] = WujiQuickEvaluate;

_defineProperty(WujiQuickEvaluate, "template",
/* html */
"\n        <div class=\"".concat(prefixCls, "-wrap {{spacing ? '").concat(prefixCls, "-spacing' : ''}}\">\n            <div s-if=\"completed\" s-ref=\"content\" class=\"").concat(prefixCls, "-content ").concat(prefixCls, "-success\">\n                <wuji-icon\n                    type=\"nimble-accomplished-o-120\"\n                    size=\"120\"\n                    color=\"#65b12c\"\n                />\n                <div class=\"tip\">{{succTitle}}</div>\n            </div>\n            <div s-else s-ref=\"content\" class=\"").concat(prefixCls, "-content\">\n                <div s-if=\"initTitle\" class=\"").concat(prefixCls, "-title\">{{initTitle | raw}}</div>\n                <div class=\"").concat(prefixCls, "-options-wrap\">\n                    <template s-for=\"item, index in items\">\n                        <div\n                            class=\"").concat(prefixCls, "-option {{index === selectedIndex ? 'selected': ''}}\"\n                            on-click=\"handleItemClick(index, selectedIndex)\"\n                        >\n                            <img\n                                class=\"").concat(prefixCls, "-option-img\"\n                                src=\"{{getOptionImage(index, selectedIndex, item, env)}}\"\n                            />\n                            <div class=\"").concat(prefixCls, "-option-txt\">{{item.desc}}</div>\n                        </div>\n                    </template>\n                </div>\n                <template s-if=\"selectedItem\">\n                    <div\n                        s-if=\"selectedItem.subTitle\"\n                        class=\"").concat(prefixCls, "-subtitle\"\n                    >{{selectedItem.subTitle | raw}}</div>\n                    <wuji-row s-if=\"selectedItem.subItem && selectedItem.subItem.length\" wrap>\n                        <wuji-col s-for=\"item, index in selectedItem.subItem\" span=\"4\">\n                            <wuji-button\n                                class=\"").concat(prefixCls, "-button\"\n                                text=\"{{item.name}}\"\n                                color=\"{{checkList[index] ? 'dark-gray' : 'light-gray'}}\"\n                                height=\"84\"\n                                radius=\"J_X15\"\n                                theme=\"outline\"\n                                selected=\"{{checkList[index]}}\"\n                                on-click=\"handleButtonClick(index, checkList, item, selectedItem)\"\n                            />\n                        </wuji-col>\n                    </wuji-row>\n                    <div s-if=\"showInput\" class=\"").concat(prefixCls, "-input-wrap\">\n                        <textarea\n                            value=\"{=inputValue=}\"\n                            class=\"").concat(prefixCls, "-input\"\n                            placeholder=\"\u7559\u4E0B\u539F\u56E0\u5427\uFF0C\u6211\u4EEC\u5F88\u5173\u6CE8\u4F60\u7684\u611F\u53D7\"\n                            maxlength=\"{{maxlength}}\"\n                        />\n                        <div\n                            s-if=\"inputValue.length\"\n                            class=\"").concat(prefixCls, "-input-counter\"\n                        >{{inputValue.length}}/{{maxlength}}</div>\n                    </div>\n                </template>\n                <div s-if=\"selectedIndex !== undefined\" class=\"").concat(prefixCls, "-submit-wrap\">\n                    <wuji-button\n                        class=\"").concat(prefixCls, "-submit\"\n                        text=\"\u63D0\u4EA4\"\n                        color=\"dark-gray\"\n                        round\n                        theme=\"outline\"\n                        width=\"327\"\n                        height=\"108\"\n                        on-click=\"handleSubmit\"\n                    />\n                </div>\n            </div>\n        </div>\n    "));

_defineProperty(WujiQuickEvaluate, "components", {
  'wuji-row': _wujiGrid["default"].Row,
  'wuji-col': _wujiGrid["default"].Col,
  'wuji-button': _wujiButton["default"],
  'wuji-icon': _wujiIcon["default"]
});

_defineProperty(WujiQuickEvaluate, "dataTypes", {
  initTitle: _san.DataTypes.string,
  succTitle: _san.DataTypes.string
});

_defineProperty(WujiQuickEvaluate, "computed", {
  selectedItem: function selectedItem() {
    var selectedIndex = this.data.get('selectedIndex');
    var items = this.data.get('items');
    return items[selectedIndex];
  }
});