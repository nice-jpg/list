"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _san = require("san");

var _wujiIcon = _interopRequireDefault(require("../wuji-icon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var prefixCls = 'w-label';
var validColor = ['red', 'yellow', 'orange', 'blue', 'green', 'black', 'gray', 'light-gray', 'purple', 'white', 'pink'];
var validH = [42, 48, 51, 54, 57, 60];
var validW = ['K1', 'K2', 'K3', 'K4', 'K5', 'K6', 'K7', 'K8', 'K9', 'K10', 'K11', 'K14', 'K17', 'K18'];
var validTheme = ['filled', 'outline', 'outline-filled', 'twotone', 'ext1', 'ext2'];

var WujiLabel = /*#__PURE__*/function (_Component) {
  _inherits(WujiLabel, _Component);

  var _super = _createSuper(WujiLabel);

  function WujiLabel() {
    _classCallCheck(this, WujiLabel);

    return _super.apply(this, arguments);
  }

  _createClass(WujiLabel, [{
    key: "initData",
    value: function initData() {
      return {
        color: 'red',
        icon: '',
        iconProps: {},
        h: 57,
        w: 'K4',
        round: true,
        text: '标签',
        text2: '',
        theme: 'outline'
      };
    }
  }, {
    key: "handleClick",
    value: function handleClick(event) {
      this.fire('click', {
        event: event
      });
    }
  }]);

  return WujiLabel;
}(_san.Component);

exports["default"] = WujiLabel;

_defineProperty(WujiLabel, "template",
/* html */
"\n        <div class=\"{{wrapClass}}\" on-click=\"handleClick\">\n            <div s-if=\"iconProps.name || icon\" class=\"".concat(prefixCls, "-icon\">\n                <slot name=\"icon\">\n                    <wuji-icon s-bind=\"iconProps\" type=\"{{icon}}\" size=\"auto\"/>\n                </slot>\n            </div>\n            <div s-if=\"text && text2\" class=\"").concat(prefixCls, "-text-wrap\">\n                <div class=\"").concat(prefixCls, "-text text1\">\n                    <span>{{text}}</span>\n                </div>\n                <div class=\"").concat(prefixCls, "-line\"/>\n                <div class=\"").concat(prefixCls, "-text text2\">\n                    <span>{{text2}}</span>\n                </div>\n            </div>\n            <div s-elif=\"text\" class=\"").concat(prefixCls, "-text\">\n                <span s-if=\"prefixText\" class=\"prefix-text\">{{prefixText}}</span>\n                <span>{{text}}</span>\n            </div>\n        </div>\n    "));

_defineProperty(WujiLabel, "validColor", validColor);

_defineProperty(WujiLabel, "validH", validH);

_defineProperty(WujiLabel, "validW", validW);

_defineProperty(WujiLabel, "components", {
  'wuji-icon': _wujiIcon["default"]
});

_defineProperty(WujiLabel, "dataTypes", {
  color: _san.DataTypes.oneOf(validColor),
  icon: _san.DataTypes.string,
  h: _san.DataTypes.oneOfType([_san.DataTypes.number, _san.DataTypes.string]),
  w: _san.DataTypes.oneOf(validW),
  radius: _san.DataTypes.oneOf(['J_X06', 'J_X11', 'J_X16', 'J_X25']),
  round: _san.DataTypes.bool,
  text: _san.DataTypes.string,
  type: _san.DataTypes.oneOf(validTheme),
  theme: _san.DataTypes.oneOf(validTheme),
  inherit: _san.DataTypes.bool
});

_defineProperty(WujiLabel, "computed", {
  wrapClass: function wrapClass() {
    var data = this.data;
    var color = data.get('color');
    var radius = data.get('radius');
    var round = radius === 'J_X06' || data.get('round');
    var theme = data.get('type') || data.get('theme');
    var h = data.get('h');
    var w = data.get('w').toLowerCase();
    var inherit = data.get('inherit');
    return [prefixCls, color && "".concat(prefixCls, "-").concat(color), round && "".concat(prefixCls, "-round"), inherit && "".concat(prefixCls, "-inherit"), radius === 'J_X11' && "".concat(prefixCls, "-jx11"), radius === 'J_X16' && "".concat(prefixCls, "-jx16"), radius === 'J_X25' && "".concat(prefixCls, "-jx25"), h && "".concat(prefixCls, "-h").concat(h), w && "".concat(prefixCls, "-").concat(w), "".concat(prefixCls, "-").concat(theme)].filter(function (c) {
      return c;
    });
  }
});