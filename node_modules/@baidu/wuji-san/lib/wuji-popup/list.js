"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

require("./style/list.less");

var _san = require("san");

var _wujiIcon = _interopRequireDefault(require("../wuji-icon"));

var _wujiButton = _interopRequireDefault(require("../wuji-button"));

require("@baidu/wuji-icons/svg/popupmenu-selected-o-48.svg");

require("@baidu/wuji-icons/svg/arrow-goto-o-48.svg");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var prefixCls = 'w-popup-options';

var WujiPopupList = /*#__PURE__*/function (_Component) {
  _inherits(WujiPopupList, _Component);

  var _super = _createSuper(WujiPopupList);

  function WujiPopupList() {
    _classCallCheck(this, WujiPopupList);

    return _super.apply(this, arguments);
  }

  _createClass(WujiPopupList, [{
    key: "initData",
    value: function initData() {
      return {
        type: 'list'
      };
    }
  }, {
    key: "handleSelect",
    value: function handleSelect(event, item) {
      this.fire('select', {
        event: event,
        value: item.value
      });
    }
  }, {
    key: "handleButtonClick",
    value: function handleButtonClick(event) {
      this.fire('button-click', {
        event: event
      });
    }
  }]);

  return WujiPopupList;
}(_san.Component);

exports["default"] = WujiPopupList;

_defineProperty(WujiPopupList, "template",
/* html */
"\n        <div s-if=\"options\" class=\"".concat(prefixCls, " ").concat(prefixCls, "-{{type}}\">\n            <div\n                s-for=\"item in options\"\n                class=\"").concat(prefixCls, "-items {{item.value === value ? 'selected' : ''}}\"\n                on-click=\"handleSelect($event, item)\"\n            >\n                <div class=\"options-left\">\n                    <template s-if=\"item.icon\">\n                        <wuji-icon\n                            s-if=\"type === 'iconList'\"\n                            class=\"options-icon\"\n                            type=\"{{item.icon}}\"\n                        />\n                        <span\n                            s-else\n                            class=\"options-avatar\"\n                            style=\"background-image: url({{item.icon}})\"\n                        />\n                    </template>\n                    <div class=\"options-text {{item.subTitle? 'options-text-title': ''}}\">\n                        <span>{{item.text}}</span>\n                        <span s-if=\"item.subTitle\" class=\"options-subtitle\">\n                            {{item.subTitle}}\n                        </span>\n                    </div>\n                </div>\n                <wuji-icon type=\"{{iconType}}\" class=\"options-selected\"/>\n            </div>\n            <div s-if=\"type === 'answer'\" class=\"options-button\">\n                <wuji-button\n                    text=\"{{buttonText}}\"\n                    theme=\"outline\"\n                    color=\"dark-gray\"\n                    height=\"114\"\n                    on-click=\"handleButtonClick\"\n                />\n            </div>\n        </div>\n    "));

_defineProperty(WujiPopupList, "components", {
  'wuji-icon': _wujiIcon["default"],
  'wuji-button': _wujiButton["default"]
});

_defineProperty(WujiPopupList, "computed", {
  iconType: function iconType() {
    return this.data.get('type') === 'iconList' ? 'arrow-goto-o-48' : 'popupmenu-selected-o-48';
  }
});