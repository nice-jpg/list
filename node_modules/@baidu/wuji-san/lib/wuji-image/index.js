"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _san = require("san");

var _wujiIcon = _interopRequireDefault(require("../wuji-icon"));

var _wujiLabel = _interopRequireDefault(require("../wuji-label"));

var _wujiLiveStatus = _interopRequireDefault(require("../wuji-live-status"));

var _isNumeric = _interopRequireDefault(require("../utils/is-numeric"));

var _pr2rem = _interopRequireDefault(require("../utils/pr2rem"));

require("@baidu/wuji-icons/svg/defaultpic-logo-87.svg");

var _lazyWatch = _interopRequireDefault(require("../utils/lazy-watch"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var prefixCls = 'w-image';

var WujiImage = /*#__PURE__*/function (_Component) {
  _inherits(WujiImage, _Component);

  var _super = _createSuper(WujiImage);

  function WujiImage() {
    _classCallCheck(this, WujiImage);

    return _super.apply(this, arguments);
  }

  _createClass(WujiImage, [{
    key: "initData",
    value: function initData() {
      return {
        banner: false,
        defaultIconSize: 87,
        labelIcon: '',
        prefixText: '',
        labelText: '',
        maskIcon: '',
        ratio: '3:2',
        round: false,
        src: '',
        userSelect: false,
        showDefault: true,
        imgSrc: '',
        lazy: false,
        lazyOffset: 0
      };
    }
  }, {
    key: "attached",
    value: function attached() {
      var _this = this;

      var oldSrc = this.data.get('src');
      this.initLazyWatch();
      this.loadImage(oldSrc);
      this.watch('src', function (newSrc) {
        if (oldSrc !== newSrc) {
          _this.initLazyWatch();

          _this.loadImage(newSrc);
        }
      });
    }
  }, {
    key: "loadImage",
    value: function loadImage(src) {
      var _this2 = this;

      if (!src) {
        return;
      }

      var img = new Image();
      img.src = src;

      img.onerror = function (error) {
        return _this2.fire('error', {
          event: error,
          data: _this2.data.get()
        });
      };
    }
  }, {
    key: "initLazyWatch",
    value: function initLazyWatch() {
      var _this3 = this;

      var wrapper = this.el;
      var lazy = this.data.get('lazy');
      var src = this.data.get('src');

      if (!src) {
        return;
      }

      if (lazy) {
        wrapper && _lazyWatch["default"].add({
          ele: wrapper,
          offset: this.data.get('lazyOffset')
        }).then(function (_) {
          _this3.data.set('imgSrc', _this3.data.get('src'));
        });
      } else {
        this.data.set('imgSrc', this.data.get('src'));
      }
    }
  }, {
    key: "handleClick",
    value: function handleClick(event) {
      this.fire('click', {
        event: event
      });
    }
  }, {
    key: "handleMaskClick",
    value: function handleMaskClick(event) {
      this.fire('mask-click', {
        event: event
      });
    }
  }, {
    key: "handleLabelClick",
    value: function handleLabelClick(event) {
      this.fire('label-click', {
        event: event
      });
    }
  }, {
    key: "handleTouch",
    value: function handleTouch(event, eventType) {
      event.stopPropagation();
      this.fire(eventType, {
        event: event,
        data: this.data.get()
      });
    }
  }, {
    key: "detached",
    value: function detached() {
      // 在detach时去掉元素的监听
      _lazyWatch["default"].remove(this.el);
    }
  }]);

  return WujiImage;
}(_san.Component);

exports["default"] = WujiImage;

_defineProperty(WujiImage, "template",
/* html */
"\n        <div\n            class=\"{{wrapClass}}\"\n            style=\"{{wrapStyle}}\"\n            on-click=\"handleClick\"\n            on-touchstart=\"handleTouch($event, 'touchstart')\"\n            on-touchmove=\"handleTouch($event, 'touchmove')\"\n            on-touchend=\"handleTouch($event, 'touchend')\"\n        >\n            <div s-if=\"showDefault\" class=\"".concat(prefixCls, "-default\">\n                <wuji-icon\n                    s-if=\"defaultIcon !== false && defaultIconSize !== 0\"\n                    class=\"").concat(prefixCls, "-default-icon\"\n                    type=\"{{defaultIcon || 'defaultpic-logo-87'}}\"\n                    size=\"{{defaultIconSize}}\"\n                />\n            </div>\n            <div class=\"").concat(prefixCls, "\" style=\"{{imgStyle}}\">\n                <img s-if=\"userSelect && src\" src=\"{{imgSrc}}\" class=\"").concat(prefixCls, "-raw\"/>\n            </div>\n            <div class=\"").concat(prefixCls, "-mask\" on-click=\"handleMaskClick\">\n                <slot name=\"mask\">\n                    <wuji-icon\n                        s-if=\"maskIcon\"\n                        class=\"").concat(prefixCls, "-mask-icon\"\n                        type=\"{{maskIcon}}\"\n                        size=\"{{maskIconSize}}\"\n                    />\n                </slot>\n            </div>\n            <div s-if=\"liveStatusProps\" class=\"").concat(prefixCls, "-live-status\">\n                <wuji-live-status s-bind=\"liveStatusProps\" />\n            </div>\n            <div class=\"").concat(prefixCls, "-label\" on-click=\"handleLabelClick\">\n                <wuji-label\n                    s-if=\"labelText\"\n                    icon=\"{{labelIcon}}\"\n                    prefix-text=\"{{prefixText}}\"\n                    text=\"{{labelText}}\"\n                    color=\"gray\"\n                    theme=\"filled\"\n                    h=\"54\"\n                    w=\"{{labelIcon ? 'K17' : 'K18'}}\"\n                />\n            </div>\n        </div>\n    "));

_defineProperty(WujiImage, "components", {
  'wuji-icon': _wujiIcon["default"],
  'wuji-label': _wujiLabel["default"],
  'wuji-live-status': _wujiLiveStatus["default"]
});

_defineProperty(WujiImage, "dataTypes", {
  backgroundSize: _san.DataTypes.oneOf(['cover', 'contain', 'fill']),
  banner: _san.DataTypes.bool,
  defaultIcon: _san.DataTypes.string,
  defaultIconSize: _san.DataTypes.oneOf([0, 66, 87, 'half']),
  labelIcon: _san.DataTypes.string,
  prefixText: _san.DataTypes.string,
  labelText: _san.DataTypes.string,
  maskIcon: _san.DataTypes.string,
  maskIconSize: _san.DataTypes.oneOf([84, 144, 156]),
  round: _san.DataTypes.bool,
  src: _san.DataTypes.string,
  ratio: _san.DataTypes.oneOf(['1:1', '3:1', '3:2', '3:4', '4:3', '5:1', '5:2', '9:16', '16:9', 'auto']),
  ratioValue: _san.DataTypes.oneOfType([_san.DataTypes.number, _san.DataTypes.string]),
  radius: _san.DataTypes.oneOf(['J_X02', 'J_X03', 'J_X06', 'J_X07', 'J_X10', 'J_X15', 'J_X17', 'J_X18', 'J_X19', 'J_X21', 'J_X22']),
  width: _san.DataTypes.number,
  height: _san.DataTypes.number,
  borderRadius: _san.DataTypes.oneOfType([_san.DataTypes.string, _san.DataTypes.shape({
    tl: _san.DataTypes.bool,
    tr: _san.DataTypes.bool,
    bl: _san.DataTypes.bool,
    br: _san.DataTypes.bool
  })]),
  lazy: _san.DataTypes.bool,
  lazyOffset: _san.DataTypes.number,
  userSelect: _san.DataTypes.bool,
  showDefault: _san.DataTypes.bool,
  liveStatusProps: _san.DataTypes.object
});

_defineProperty(WujiImage, "computed", {
  wrapClass: function wrapClass() {
    var data = this.data;
    var radius = data.get('radius');
    var banner = radius === 'J_X07' || data.get('banner');
    var round = radius === 'J_X06' || data.get('round');
    return ["".concat(prefixCls, "-wrap"), banner && "".concat(prefixCls, "-banner"), !banner && round && "".concat(prefixCls, "-round"), radius === 'J_X03' && "".concat(prefixCls, "-jx03"), radius === 'J_X10' && "".concat(prefixCls, "-jx10"), radius === 'J_X15' && "".concat(prefixCls, "-jx15"), radius === 'J_X17' && "".concat(prefixCls, "-jx17"), radius === 'J_X18' && "".concat(prefixCls, "-jx18"), radius === 'J_X19' && "".concat(prefixCls, "-jx19"), radius === 'J_X21' && "".concat(prefixCls, "-jx21"), radius === 'J_X22' && "".concat(prefixCls, "-jx22")].filter(function (c) {
      return c;
    });
  },
  wrapStyle: function wrapStyle() {
    var style = {};
    var data = this.data;
    var borderRadius = data.get('borderRadius');
    var ratio = data.get('ratio');
    var ratioValue = data.get('ratioValue');
    var width = data.get('width');
    var height = data.get('height');

    if ((0, _isNumeric["default"])(width) && width > 0) {
      style.width = "".concat((0, _pr2rem["default"])(width), "rem");
    }

    if ((0, _isNumeric["default"])(height) && height > 0) {
      style.height = "".concat((0, _pr2rem["default"])(height), "rem");
    } else if (ratioValue === undefined && ratio === 'auto') {
      style.height = '100%';
    }

    if (borderRadius && typeof borderRadius === 'string') {
      style['border-radius'] = borderRadius;
    } else if (borderRadius) {
      if (borderRadius.tl === false) {
        style['border-top-left-radius'] = 0;
      }

      if (borderRadius.tr === false) {
        style['border-top-right-radius'] = 0;
      }

      if (borderRadius.bl === false) {
        style['border-bottom-left-radius'] = 0;
      }

      if (borderRadius.br === false) {
        style['border-bottom-right-radius'] = 0;
      }
    }

    return style;
  },
  imgStyle: function imgStyle() {
    var style = {};
    var data = this.data;
    var height = data.get('height');
    var ratio = data.get('ratio');
    var ratioValue = data.get('ratioValue');
    var lazy = data.get('lazy');
    var imgSrc = lazy ? data.get('imgSrc') : data.get('src');
    var backgroundSize = data.get('backgroundSize');

    if ((0, _isNumeric["default"])(height) && height > 0 || !ratio || ratio === 'auto') {
      style.height = '100%';
      style['padding-top'] = 0;
    } else if ((0, _isNumeric["default"])(ratioValue) && ratioValue > 0) {
      style['padding-top'] = "".concat((100 / ratioValue).toFixed(2), "%");
    } else {
      var v = ratio.split(':');
      style['padding-top'] = "".concat(v[1] / v[0] * 100, "%");
    }

    if (imgSrc) {
      style['background-image'] = "url(".concat(imgSrc, ")");
    }

    if (backgroundSize) {
      style['background-size'] = backgroundSize === 'fill' ? '100% 100%' : backgroundSize;
    }

    return style;
  }
});