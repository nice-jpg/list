"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _san = require("san");

var _wujiIcon = _interopRequireDefault(require("../wuji-icon"));

require("@baidu/wuji-icons/svg/d20-search-o-66.svg");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var prefixCls = 'w-multi-tag';

var WujiMultiTag = /*#__PURE__*/function (_Component) {
  _inherits(WujiMultiTag, _Component);

  var _super = _createSuper(WujiMultiTag);

  function WujiMultiTag() {
    _classCallCheck(this, WujiMultiTag);

    return _super.apply(this, arguments);
  }

  _createClass(WujiMultiTag, [{
    key: "handleClick",
    value: function handleClick(event, item) {
      this.fire('click', {
        event: event,
        data: item
      });
    }
  }, {
    key: "initData",
    value: function initData() {
      return {
        // 枚举值 1: 第一个tag为纯文字 2: 基于1的基础上 其他tag带搜索按钮 3: 全为面底_圆矩样式
        type: 1
      };
    }
  }]);

  return WujiMultiTag;
}(_san.Component);

exports["default"] = WujiMultiTag;

_defineProperty(WujiMultiTag, "template",
/* html */
"\n        <div class=\"".concat(prefixCls, "-wrap\">\n            <span class=\"").concat(prefixCls, "-desc\" s-if=\"desc\">{{desc}}</span>\n            <div class=\"").concat(prefixCls, "-item type-{{showType}}\" s-for=\"item, index in tags\">\n                <div class=\"").concat(prefixCls, "-icon-wrap\" s-if=\"showType === 2\">\n                    <wuji-icon type=\"d20-search-o-66\" size=\"42\"/>\n                </div>\n                <span\n                    class=\"").concat(prefixCls, "-tag\"\n                    on-click=\"handleClick($event, item)\">{{ item.value | format(showType) }}</span>\n            </div>\n        </div>\n    "));

_defineProperty(WujiMultiTag, "components", {
  'wuji-icon': _wujiIcon["default"]
});

_defineProperty(WujiMultiTag, "dataTypes", {
  showType: _san.DataTypes.oneOf([1, 2, 3]),
  tags: _san.DataTypes.array
});

_defineProperty(WujiMultiTag, "filters", {
  format: function format(tag, showType) {
    var tags = this.data.get('tags');
    var len = tags.length; // 如果是第三种类型，2个入口则限制字数为6，3/4个入口限制字数为4；否则都限制为4

    return showType === 3 && len <= 2 ? tag.substring(0, 6) : tag.substring(0, 4);
  }
});

_defineProperty(WujiMultiTag, "computed", {
  showType: function showType() {
    var type = this.data.get('type');
    return parseInt(type, 10);
  }
});