"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _san = require("san");

var _wujiIcon = _interopRequireDefault(require("../wuji-icon"));

require("@baidu/wuji-icons/svg/score-star-f-30.svg");

require("@baidu/wuji-icons/svg/score-star-o-30.svg");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var prefixCls = 'w-rate';

function getStarStatus(score, index, allowHalf) {
  if (+score >= index) {
    return 'full';
  }

  if (Math.round(score) >= index && !allowHalf) {
    return 'full';
  }

  if (+score + 0.5 >= index && allowHalf) {
    return 'half';
  }

  return 'void';
}

var WujiRate = /*#__PURE__*/function (_Component) {
  _inherits(WujiRate, _Component);

  var _super = _createSuper(WujiRate);

  function WujiRate() {
    _classCallCheck(this, WujiRate);

    return _super.apply(this, arguments);
  }

  _createClass(WujiRate, [{
    key: "initData",
    value: function initData() {
      return {
        allowHalf: true,
        count: 5,
        disabled: false,
        size: 'sm',
        score: 0,
        text: '',
        textPosition: 'right'
      };
    }
  }, {
    key: "select",
    value: function select(index) {
      var disabled = this.data.get('disabled');

      if (disabled) {
        return;
      }

      this.data.set('score', index + 1);
    }
  }]);

  return WujiRate;
}(_san.Component);

exports["default"] = WujiRate;

_defineProperty(WujiRate, "template",
/* html */
"\n        <div class=\"{{wrapClass}}\">\n            <div\n                s-if=\"text && textPosition === 'left'\"\n                class=\"".concat(prefixCls, "-text\"\n            >{{text}}</div>\n            <div class=\"").concat(prefixCls, "-list\">\n                <div\n                    s-for=\"star, index in list\"\n                    class=\"").concat(prefixCls, "-item\"\n                    on-click=\"select(index)\"\n                >\n                    <wuji-icon\n                        s-if=\"star !== 'full'\"\n                        type=\"score-star-o-30\"\n                    />\n                    <wuji-icon\n                        s-if=\"star !== 'void'\"\n                        type=\"score-star-f-30\"\n                        class=\"{{star === 'half' && '").concat(prefixCls, "-half'}}\"\n                    />\n                </div>\n            </div>\n            <div\n                s-if=\"text && textPosition === 'right'\"\n                class=\"").concat(prefixCls, "-text\"\n            >{{text}}</div>\n        </div>\n    "));

_defineProperty(WujiRate, "components", {
  'wuji-icon': _wujiIcon["default"]
});

_defineProperty(WujiRate, "dataTypes", {
  allowHalf: _san.DataTypes.bool,
  count: _san.DataTypes.number,
  disabled: _san.DataTypes.bool,
  score: _san.DataTypes.oneOfType([_san.DataTypes.number, _san.DataTypes.string]),
  size: _san.DataTypes.oneOf(['sm', 'md']),
  text: _san.DataTypes.string,
  textPosition: _san.DataTypes.oneOf(['left', 'right'])
});

_defineProperty(WujiRate, "computed", {
  list: function list() {
    var data = this.data;
    var count = data.get('count');
    var score = data.get('score');
    var allowHalf = data.get('allowHalf');
    var list = [];

    for (var i = 1; i <= count; i++) {
      list.push(getStarStatus(score, i, allowHalf));
    }

    return list;
  },
  wrapClass: function wrapClass() {
    var size = this.data.get('size');
    return ["".concat(prefixCls, "-wrap"), "".concat(prefixCls, "-").concat(size)];
  }
});