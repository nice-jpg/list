"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _san = require("san");

var _wujiIcon = _interopRequireDefault(require("../wuji-icon"));

require("@baidu/wuji-icons/svg/d20-inputbox-delete-f-48.svg");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var prefixCls = 'w-input';

var WujiInput = /*#__PURE__*/function (_Component) {
  _inherits(WujiInput, _Component);

  var _super = _createSuper(WujiInput);

  function WujiInput() {
    _classCallCheck(this, WujiInput);

    return _super.apply(this, arguments);
  }

  _createClass(WujiInput, [{
    key: "initData",
    value: function initData() {
      return {
        inputValue: '',
        icon: '',
        error: '',
        showClear: false,
        showPlaceholder: true,
        maxlength: 20,
        labelText: '',
        placeholder: ''
      };
    }
  }, {
    key: "triggerFocus",
    value: function triggerFocus() {
      var $input = this.ref('wuji-input');
      $input.focus();
    } // 事件类型:  input, focus, blur, clear, icon

  }, {
    key: "handleEvent",
    value: function handleEvent(e, eventType) {
      e.preventDefault();
      e.stopPropagation();
      var value = this.data.get('inputValue').trim();

      if (eventType === 'clear') {
        this.data.set('inputValue', '');
        this.triggerFocus();
      }

      if (eventType === 'input') {
        this.data.set('showPlaceholder', false);
      } // 输入文字的长度


      var ingValue = e.data ? value + e.data : value;

      if (!ingValue.length) {
        this.data.set('showPlaceholder', true);
      }

      this.fire(eventType, {
        event: e,
        inputValue: value
      });
    }
  }]);

  return WujiInput;
}(_san.Component);

exports["default"] = WujiInput;

_defineProperty(WujiInput, "template",
/* html */
"\n        <div class=\"".concat(prefixCls, "-wrap\">\n            <label class=\"").concat(prefixCls, "-label\">\n                <span s-if=\"labelText\"\n                    class=\"").concat(prefixCls, "-text\">\n                    {{labelText}}\n                </span>\n                <div class=\"").concat(prefixCls, "-content\">\n                    <span s-if=\"showPlaceholder\" class=\"").concat(prefixCls, "-placeholder\">\n                        {{placeholder}}\n                    </span>\n                    <input\n                        s-ref=\"wuji-input\"\n                        class=\"").concat(prefixCls, "-input\"\n                        value=\"{=inputValue=}\"\n                        maxlength=\"{{maxlength}}\"\n                        autocomplete=\"off\"\n                        on-blur=\"handleEvent($event, 'blur')\"\n                        on-focus=\"handleEvent($event, 'focus')\"\n                        on-input=\"handleEvent($event, 'input')\"\n                        on-click=\"triggerFocus\"\n                    />\n                </div>\n                <span s-if=\"showClear\"\n                    class=\"").concat(prefixCls, "-clear\"\n                    on-click=\"handleEvent($event, 'clear')\"\n                >\n                    <wuji-icon type=\"d20-inputbox-delete-f-48\"/>\n                </span>\n                <span s-if=\"unit\"\n                    class=\"").concat(prefixCls, "-unit\">\n                    {{unit}}\n                </span>\n                <span s-if=\"icon\"\n                    class=\"").concat(prefixCls, "-icon\"\n                    on-click=\"handleEvent($event, 'icon')\"\n                >\n                    <wuji-icon type=\"{{icon}}\"/>\n                </span>\n            </label>\n            <div s-if=\"error\" class=\"").concat(prefixCls, "-error\">{{error}}</div>\n        </div>\n    "));

_defineProperty(WujiInput, "components", {
  'wuji-icon': _wujiIcon["default"]
});

_defineProperty(WujiInput, "dataTypes", {
  inputValue: _san.DataTypes.string,
  unit: _san.DataTypes.string,
  icon: _san.DataTypes.string,
  error: _san.DataTypes.string,
  labelText: _san.DataTypes.string,
  showClear: _san.DataTypes.bool,
  showPlaceholder: _san.DataTypes.bool,
  maxlength: _san.DataTypes.number,
  placeholder: _san.DataTypes.string
});

_defineProperty(WujiInput, "computed", {
  showClear: function showClear() {
    return this.data.get('inputValue.length') > 0;
  }
});