"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _san = require("san");

var _pr2rem = _interopRequireDefault(require("../utils/pr2rem"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var prefixCls = 'w-row';

var Row = /*#__PURE__*/function (_Component) {
  _inherits(Row, _Component);

  var _super = _createSuper(Row);

  function Row() {
    _classCallCheck(this, Row);

    return _super.apply(this, arguments);
  }

  _createClass(Row, [{
    key: "inited",
    value: function inited() {
      this.isGridRow = true;
    }
  }, {
    key: "initData",
    value: function initData() {
      return {
        column: 12,
        gutter: 24,
        margin: 51,
        padding: 0,
        align: 'stretch',
        justify: 'flex-start',
        wrap: false
      };
    }
  }, {
    key: "handleScroll",
    value: function handleScroll(event) {
      this.fire('scroll', {
        event: event
      });
    }
  }]);

  return Row;
}(_san.Component);

exports["default"] = Row;

_defineProperty(Row, "template",
/* html */
"\n        <div\n            class=\"{{mayRoot ? '".concat(prefixCls, "-root' : rowClass}}\"\n            style=\"{{!mayRoot && rowStyle}}\"\n            on-scroll=\"handleScroll\"\n        >\n            <div s-if=\"mayRoot\" class=\"{{rowClass}}\" style=\"{{rowStyle}}\" on-scroll=\"handleScroll\">\n                <slot/>\n            </div>\n            <slot s-else/>\n        </div>\n    "));

_defineProperty(Row, "dataTypes", {
  column: _san.DataTypes.oneOf([12, 24, '12', '24']),
  margin: _san.DataTypes.oneOfType([_san.DataTypes.string, _san.DataTypes.number]),
  padding: _san.DataTypes.oneOfType([_san.DataTypes.string, _san.DataTypes.number]),
  gutter: _san.DataTypes.oneOfType([_san.DataTypes.string, _san.DataTypes.number]),
  align: _san.DataTypes.oneOf(['baseline', 'center', 'flex-start', 'flex-end', 'stretch']),
  justify: _san.DataTypes.oneOf(['center', 'flex-start', 'flex-end', 'space-between', 'space-around', 'space-evenly']),
  wrap: _san.DataTypes.bool,
  scrollable: _san.DataTypes.bool
});

_defineProperty(Row, "computed", {
  rowClass: function rowClass() {
    var data = this.data;
    var align = data.get('align').replace(/(flex|space)-/, '');
    var justify = data.get('justify').replace(/(flex|space)-/, '');
    var column = +data.get('column');
    var wrap = data.get('wrap');
    var scrollable = data.get('scrollable');
    return [prefixCls, align && "".concat(prefixCls, "-align-").concat(align), justify && "".concat(prefixCls, "-justify-").concat(justify), scrollable && "".concat(prefixCls, "-scrollable"), !scrollable && wrap && "".concat(prefixCls, "-wrap"), column === 24 && "".concat(prefixCls, "-24n")].filter(function (c) {
      return c;
    });
  },
  rowStyle: function rowStyle() {
    var style = {};
    var data = this.data;
    var scrollable = data.get('scrollable');
    var baseMargin = scrollable ? 0 : data.get('margin');
    var basePadding = scrollable ? 51 : data.get('padding');
    var gutter = data.get('gutter');
    var margin = (0, _pr2rem["default"])(baseMargin - gutter / 2);
    var padding = (0, _pr2rem["default"])(basePadding);

    if (margin !== 0) {
      style.margin = "0 ".concat(margin, "rem");
    }

    if (padding > 0) {
      style.padding = "0 ".concat(padding, "rem");
    }

    return style;
  },
  mayRoot: function mayRoot() {
    var data = this.data;
    var margin = data.get('margin');
    var gutter = data.get('gutter');
    var scrollable = data.get('scrollable');
    return scrollable || gutter && margin < gutter / 2;
  }
});