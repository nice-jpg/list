"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _san = require("san");

var _wujiIcon = _interopRequireDefault(require("../wuji-icon"));

var _wujiImage = _interopRequireDefault(require("../wuji-image"));

require("@baidu/wuji-icons/svg/dislike-o-36.svg");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var prefixCls = 'w-widget';

var WujiWidget = /*#__PURE__*/function (_Component) {
  _inherits(WujiWidget, _Component);

  var _super = _createSuper(WujiWidget);

  function WujiWidget() {
    _classCallCheck(this, WujiWidget);

    return _super.apply(this, arguments);
  }

  _createClass(WujiWidget, [{
    key: "initData",
    value: function initData() {
      return {
        items: [],
        dislike: false,
        hasMarginTop: true,
        hasMarginBottom: false,
        spacing: false
      };
    }
  }, {
    key: "dislike",
    value: function dislike(event) {
      event.stopPropagation();
      this.fire('dislike', {
        event: event
      });
    }
  }, {
    key: "handleTouchstart",
    value: function handleTouchstart(event) {
      event.preventDefault();
    }
  }]);

  return WujiWidget;
}(_san.Component);

exports["default"] = WujiWidget;

_defineProperty(WujiWidget, "template",
/* html */
"\n        <div class=\"{{wrapClass}}\">\n            <div class=\"".concat(prefixCls, "-items\">\n                <template s-for=\"item, index in items\">\n                    <wuji-image\n                        s-if=\"item.type === 'image'\"\n                        class=\"").concat(prefixCls, "-item ").concat(prefixCls, "-image\"\n                        s-bind=\"item\"\n                    />\n                    <div\n                        s-else\n                        class=\"").concat(prefixCls, "-item {{item.type || 'normal'}}\"\n                    >{{item.text}}</div>\n                </template>\n            </div>\n            <div\n                s-if=\"dislike\"\n                class=\"").concat(prefixCls, "-dislike\"\n                on-click=\"dislike\"\n                on-touchstart=\"handleTouchstart\"\n            >\n                <wuji-icon\n                    type=\"dislike-o-36\"\n                    size=\"{{36}}\"\n                />\n            </div>\n        </div>\n    "));

_defineProperty(WujiWidget, "components", {
  'wuji-icon': _wujiIcon["default"],
  'wuji-image': _wujiImage["default"]
});

_defineProperty(WujiWidget, "dataTypes", {
  dislike: _san.DataTypes.bool,
  hasMarginTop: _san.DataTypes.bool,
  hasMarginBottom: _san.DataTypes.bool,
  items: _san.DataTypes.arrayOf(_san.DataTypes.shape({
    type: _san.DataTypes.oneOf(['normal', 'image', 'label']),
    text: _san.DataTypes.string
  }))
});

_defineProperty(WujiWidget, "computed", {
  wrapClass: function wrapClass() {
    var data = this.data;
    var hasMarginTop = data.get('hasMarginTop');
    var hasMarginBottom = data.get('hasMarginBottom');
    var spacing = data.get('spacing');
    return [prefixCls, hasMarginTop && "".concat(prefixCls, "-mt"), hasMarginBottom && "".concat(prefixCls, "-mb"), spacing && "".concat(prefixCls, "-mx")].filter(function (c) {
      return c;
    });
  }
});