/**
 * @file TimeLogger
 *
 * @author changyuqing@baidu.com
 */

export class TimeLogger {
    /**
     * @constructor TimeLogger
     * @param  {Object} [options]  打点设置，覆盖全局设置
     * @param  {boolean} [options.ifHeartbeatTime]  是否通过心跳打点
     * @param  {number} [options.duration]  心跳打点的间隔，单位s
     * @param  {Function} [options.logFn]  向外抛事件的函数
     */
    constructor({
                    ifHeartbeatTime = true,
                    duration = 3,
                    logFn = () => { }
                }) {
        this.starttime = Date.now(); // 开始时间
        this.ifHeartbeatTime = ifHeartbeatTime; // 是否心跳打点
        this.logFn = logFn; // 打点方法
        this.intervalId = null;
        this.duration = duration;
        this.flag = 'STOP';// 状态有 RUNNING STOP AUTO_STOP
    }

    sendLog() {
        if (this.ifHeartbeatTime) {
            this.logFn({
                starttime: this.starttime,
                duration: this.duration
            });
        } else {
            let endtime = Date.now();
            this.logFn({
                starttime: this.starttime,
                duration: (endtime - this.starttime) / 1000,
                endtime: endtime
            });
        }
    }

    start() {
        if (this.flag !== 'RUNNING') {
            this.flag = 'RUNNING';
            this.starttime = Date.now();
            if (this.ifHeartbeatTime) {
                this.sendLog();
                this.intervalId = setInterval(() => {
                    this.sendLog();
                }, this.duration * 1000);
            }
        }
    }

    stop() {
        if (this.flag === 'RUNNING') {
            if (this.ifHeartbeatTime) {
                this.sendLog();
                clearInterval(this.intervalId);
                this.intervalId = null;
            } else {
                this.sendLog();
            }
            this.flag = 'STOP';
        }
    }

    autoStop() {
        if (this.flag === 'RUNNING') {
            this.stop();
            this.flag = 'AUTO_STOP';
        }
    }
}