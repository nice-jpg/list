/**
 * @file send 方法
 * @author wangbing11(wangbing11@baidu.com)
 */

import {renderUrl} from './utils';

const createImg = function (src) {
    let img = document.createElement('img');
    img.width = 1;
    img.height = 1;
    img.src = src;
    return img;
};

// 回调函数等待时间
const callbackWaitingTime = 100;

/**
 * 使用图片来发请求
 *
 * @param {string} url 上报服务地址
 * @param {Object} param 上报的数据
 * @return {Promise} 结束回调
 */
function imgPing(url, param) {
    return new Promise((resolve, reject) => {
        // 生成URL
        url = renderUrl(url, {
            data: param
        });
        let img = createImg(url);
        let isCallbacked = false;

        // 等待 100 ms， 100ms后如果回调函数还没有执行，就立即执行回调
        setTimeout(function () {
            if (!isCallbacked) {
                resolve();
                isCallbacked = true;
            }
        }, callbackWaitingTime);
        img.onload = img.onerror = function () {
            img = null;
            // 上报成功后，如果回调函数还没有执行，就执行回调函数
            if (!isCallbacked) {
                resolve();
                isCallbacked = true;
            }
        };
    });

}

/**
 * 使用Navigator.sendBeacon来发请求
 *
 * @param {string} url 上报服务地址
 * @param {Object} param 上报的数据
 * @param {Object} options 上报格式
 * @return {Promise} 结束回调
 */
function beaconSend(url, param, options) {
    return new Promise((resolve, reject) => {
        const isDataInBody = options.sendMethod === 'post';
        let isSendSuccess;
        if (isDataInBody) {
            isSendSuccess = window.navigator.sendBeacon(renderUrl(url, {
                data: param
            }));
        } else {
            isSendSuccess = window.navigator.sendBeacon(url, 'data=' + encodeURIComponent(JSON.stringify(param)))
        }

        // 生成URL
        if (isSendSuccess) {
            resolve();
        } else {
            reject();
        }
    });
}

function xhrSend(url, param, options = {}) {
    const method = options.sendMethod === 'post' ? 'POST' : 'GET';
    url = method === 'POST' ? url : renderUrl(url, {
        data: param
    });
    return new Promise((resolve, reject) => {
        let oReq = new XMLHttpRequest();
        oReq.addEventListener('loadend', () => {
            if (oReq.status === 200) {
                resolve();
            } else {
                reject();
            }
        });
        oReq.open(method, url);
        oReq.withCredentials = true;
        if (method === 'POST') {
            oReq.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            oReq.send('data=' + encodeURIComponent(JSON.stringify(param)));
        } else {
            oReq.send();
        }
    });
}

/**
 * 使用图片来发请求
 *
 * @param {string} url 上报服务地址
 * @param {Object} param 上报的数据
 * @param {Object} [options] 额外参数
 * @param {Object} [options.useSendBeacon] 是否使用sendBeancon
 * @param {boolean} [options.useXhr] 是否使用useXhr
 * @param {string} [options.sendMethod] post/get
 * @return {Promise} 结束回调
 */
export function smartSend(url, param, options = {}) {
    if (options.useXhr) {
        return xhrSend(url, param, options);
    }
    // 与数据RD沟通，待数据组升级后可启用-在好看和全民端sendBeacon无效
    if (typeof window.navigator.sendBeacon === 'function' && options.useSendBeacon) {
        return beaconSend(url, param, options);
    }
    return imgPing(url, param);
}
