/**
 * js 加载器
 * @file Created on Thu Nov 22 2018
 * @author wangyongqing <wangyongqing01@baidu.com>
 */

import {guid} from '../guid';
import {isFunction, isString} from '../is';
import {json2query} from '../json2query';
import {loadFile} from './load-file';

type JsonpCallback = () => string;
type ErrorCallback = (err: Error, path: string) => void;
type SuccessCallback = (data: JSON) => void;
interface LoadJSParams {
    url?: string;
    data?: string;
    before?: (path: string, elem: Element) => unknown;
    success?: SuccessCallback;
    error?: ErrorCallback;
    timeout?: number;
    async?: boolean;
    jsonpCallback?: string | JsonpCallback;
    jsonpCallbackName?: string;
}

/**
 * 加载 JS
 *
 * @param param 参数
 * @example
 *  loadjs({
 *      url,
 *      data,
 *      async,
 *      timeout,
 *      before,
 *      success,
 *      error,
 *      jsonpCallback,
 *      jsonpCallbackName // 传给server的回调函数的名字
 *  })
 */
export function loadJS({
    url = '',
    data,
    async,
    timeout = 2e4,
    before,
    success,
    error,
    jsonpCallback,
    jsonpCallbackName,
}: LoadJSParams) {
    if (typeof data === 'object') {
        data = json2query(data);
    }
    if (data) {
        url += (url.includes('?') ? '&' : '?') + data;
    }
    url = url.replace(/[&?]{1,2}/, '?');

    let callbackName = isFunction(jsonpCallback)
        ? (jsonpCallback as JsonpCallback)()
        : isString(jsonpCallback)
            ? (jsonpCallback as string)
            : '_boxjsonp' + guid();

    let originalCallback = (window as any)[callbackName];

    // 返回的数据
    let responseData: any = null;
    let cb = (e: Error, p: string) => {
        if (e) {
            error && error(e, p);
        }
        else {
            success && success(responseData);
        }

        // window[callbackName] = originalCallback;
        Object.assign(window, {
            [callbackName]: originalCallback,
        });
        if (responseData && isFunction(originalCallback)) {
            originalCallback(responseData);
        }

        originalCallback = responseData = undefined;
    };

    // window[callbackName] = (...args) => {
    //     responseData = args;
    // };
    Object.assign(window, {
        [callbackName]: (data: any) => {
            responseData = data;
        },
    });

    // 当data的某个属性的值恰好以'?'开头，比如data:{content:'?', callback:'?'}，经过json2query后'content=?&callback=?'
    // 此时不能直接替换/=\?/，可根据传参优先处理
    if (jsonpCallbackName) {
        url += '&' + jsonpCallbackName + '=' + callbackName;
    }
    else if (url.includes('=?')) {
        url = url.replace('=?', '=' + callbackName);
    }
    loadFile(url, cb, {timeout, async, before});
}
