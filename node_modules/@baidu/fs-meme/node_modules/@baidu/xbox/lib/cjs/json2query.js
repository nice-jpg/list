"use strict";
/**
 * @file 将对象转成url，但是没有添加对数组支持
 * @author wangyongqing <wangyongqing01@baidu.com>
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.json2query = exports.mapArray = void 0;
var is_1 = require("./is");
var type_1 = require("./type");
var get_global_func_1 = require("./get-global-func");
var strict_uri_encode_1 = require("./strict-uri-encode");
function mapArray(args) {
    return args.map(function (arg) {
        switch ((0, type_1.getType)(arg)) {
            case 'function':
                return (0, get_global_func_1.getGlobalFunc)(arg);
            default:
                return arg;
        }
    });
}
exports.mapArray = mapArray;
/**
 * 将对象转成url，但是没有添加对数组、对象支持，直接 JSON.stringify 输出
 *
 * @param json 待处理的json对象
 * @param [encode = false] 是否 encodeURI 对象/数组字符串
 * @return 处理之后的结果
 * @example
 * json2query({
 *       a: 1,
 *       b: 'string'
 *  });
 * //'a=1&b=string'
 * json2query({
 *       a: 1,
 *       b: 'string',
 *       c: [1, 2, 3]
 *   });
 * //'a=1&b=string&c=[1,2,3]'
 * json2query({
 *       a: 1,
 *       b: 'string',
 *       c: [1, 2, 3]
 *   }, true);
 * //'a=1&b=string&c=%5B1%2C2%2C3%5D'
 */
function json2query(json, encode) {
    if (encode === void 0) { encode = false; }
    if ((0, is_1.isString)(json)) {
        return json;
    }
    var arr = [];
    var keys = Object.keys(json);
    keys.forEach(function (key) {
        var val = json[key];
        // 处理非 string/number/boolean
        if ((0, is_1.isNil)(val)) {
            val = '';
        }
        else if ((0, is_1.isArray)(val)) {
            val = JSON.stringify(mapArray(val));
        }
        else if ((0, is_1.isPlainObject)(val)) {
            // 这里不再遍历处理，对于深层的 callback 需要注意了
            val = JSON.stringify(val);
        }
        else if ((0, is_1.isFunction)(val)) {
            val = (0, get_global_func_1.getGlobalFunc)(val);
        }
        arr.push(key + "=" + (encode ? (0, strict_uri_encode_1.uriEncode)(val) : val));
    });
    return arr.join('&');
}
exports.json2query = json2query;
