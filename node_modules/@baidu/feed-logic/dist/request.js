import axios from 'axios';
import QS from 'qs';
axios.defaults.timeout = 5000;
axios.defaults.withCredentials = true;
axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';
axios.interceptors.response.use(response => {
    if (response.status === 200) {
        return Promise.resolve(response);
    }
    return Promise.reject(response);
}, error => {
    return Promise.reject(error.response);
});
/**
 * get方法，对应get请求
 * @param {String} url [请求的url地址]
 * @param {Object} params [请求时携带的参数]
 */
export function get(url, params) {
    return new Promise((resolve, reject) => {
        axios
            .get(url, {
            params: params,
        })
            .then((res) => {
            if (res.status === 200 && res.data) {
                const data = res.data;
                if (!+data.errno) {
                    resolve(data.ret || {});
                }
                else {
                    reject(data);
                }
            }
            else {
                reject(res.data);
            }
        })
            .catch((err) => {
            reject(err);
        });
    });
}
/**
 * post方法，对应post请求
 * @param {String} url [请求的url地址]
 * @param {Object} params [请求时携带的参数]
 */
export function post(url, data, params = {}) {
    return new Promise((resolve, reject) => {
        axios
            .post(url, QS.stringify(data), {
            params,
        })
            .then((res) => {
            if (res.status === 200 && res.data) {
                const data = res.data;
                if (!+data.errno) {
                    resolve(data.ret || {});
                }
                else {
                    reject(data);
                }
            }
            else {
                reject(res.data);
            }
        })
            .catch((err) => {
            reject(err);
        });
    });
}
