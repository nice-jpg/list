import {JumpProps} from "./types/jumpProps";

const numberFormatter = (val: number|string) => {
    let unit:string = '';
    val = +val;
    if (val >= 100000000) {
        val = Math.floor(val / 100000000);
        unit = '亿';
    } else if (val >= 10000) {
        val = Math.floor(val / 10000);
        unit = '万';
    }
    return {
        val,
        unit,
        str: val + unit
    };
};

// 组件下方附属信息数据处理
export const transitionWidget = (newsData) => {
    const {data} = newsData;
    const {type, miniapp_icon, source} = data;
    // 小程序/小游戏处理
    if (type === 'miniapp' || type === 'miniappgame') {
        return [
            {
                type: 'image',
                src: miniapp_icon,
                round: true,
                width: 42,
                height: 42,
                showDefault: false
            },
            {
                text: source
            },
            {
                text: '智能小程序'
            }
        ];
    }
    // 直播数据处理
    else if (newsData.layout === 'livevideo') {
        return [{
            text: data.starname
        }];
    }
    else {
        const result = [];

        // 只要后端传回来含有需要展示的字段，都会被处理，处理顺序及逻辑源于重构前代码
        const tagResolverList = [{
            param: 'tag',
            resolver: (data) => {
                return {
                    text: data.tag
                };
            }
        }, {
            param: 'source',
            resolver: (data) => {
                return {
                    text: data.source
                };
            }
        }, {
            param: 'recommendReason',
            resolver: (data) => {
                return {
                    text: data.recommendReason
                }
            }
        }, {
            param: 'domainIcon',
            resolver: (data) => {
                return {
                    type: 'image',
                    url: data.domainIcon,
                    round: true,
                    width: 42,
                    height: 42,
                    showDefault: false
                };
            }
        }, {
            param: 'playTimes',
            resolver: (data) => {
                return {
                    text: numberFormatter(data.playTimes).str + '播放'
                };
            }
        }, {
            param: 'comment_num',
            resolver: (data) => {
                return {
                    text: numberFormatter(data.comment_num).str + '评论'
                };
            }
        }, {
            param: 'ts',
            resolver: (data) => {
                return {
                    text: data.ts
                };
            }
        }, {
            param: 'ads',
            resolver: (data) => {
                return {
                    text: data.ads
                };
            }
        }, {
            param: 'isbdopen',
            resolver: (_) => {
                return {
                    text: '打开百度APP',
                    color: 'blue'
                };
            }
        }, {
            param: 'read_num',
            resolver: (data) => {
                return {
                    text: numberFormatter(data.read_num).str + '阅读'
                };
            }
        }, {
            param: 'push_time',
            resolver: (data) => {
                return {
                    text: data.push_time
                };
            }
        }];

        tagResolverList.forEach(tagResolver => {
            if (data[tagResolver.param]) {
                result.push(tagResolver.resolver(data));
            }
        });

        return result;
    }
};

export const getBaseImageProps = (data):object => {
    return {
        lazy: true,
        lazyOffset: 400,
        ...data
    };
};

// 跳转字段处理，其实就是将跳转需要用到的字段拿出来单放进一个对象里
export const transJumpProps = (newsData):JumpProps => {
    const data = newsData.data;

    return {
        link: data.link,
        swan: data.swan,
        cmd: data.cmd
    };
};

// 大图标签数据转化
export const transitionBigImageIcon = (newsData) => {
    const data = newsData.data;
    const baseParams = getBaseImageProps({
        src: data.image,
        ratio: '16:9'
    });

    // todo 直播逻辑封装
    if (newsData.layout === 'livevideo' || newsData.tplType === 'large') {
        let isLive = false;
        let isPlayBack = false;
        let isPreload = false;

        if (newsData.layout === 'livevideo') {
            if (data.title_prefix === 'live') {
                isLive = true;
            } else if (data.title_prefix === 'playback') {
                isPlayBack = true;
            } else if (data.title_prefix === 'preload') {
                isPreload = true;
            }
        } else if (newsData.tplType === 'large') {
            if (data.livetype === 'live') {
                isLive = true;
            } else if (data.livetype === 'playback') {
                isPlayBack = true;
            }
        }

        return {
            ...baseParams,
            maskIcon: isPlayBack ? 'x-d20-videoplay' : isLive || isPreload ? 'x-d20-live' : ''
        }
    }
    const iconResolverList = [{
        // 对type字段的处理
        param: 'type',
        resolver: (data) => {
            switch (data.type) {
                case 'video':
                    return {
                        ...baseParams,
                        labelIcon: 'd20-capsule-video-f-30',
                        labelText: data.duration,
                        maskIcon: 'x-d20-videoplay'
                    };
                case 'image':
                    return {
                        ...baseParams,
                        labelIcon: 'd20-capsule-img-f-30',
                        labelText: data.duration
                    };
                case 'gif':
                    return {
                        ...baseParams,
                        labelText: 'GIF'
                    };
                default:
                    return {...baseParams};
            }
        }
    }, {
        // 对cover_img_type字段的处理
        param: 'cover_img_type',
        resolver: (data) => {
            switch (data.type) {
                case 'video':
                    return {
                        src: data.image,
                        labelIcon: 'd20-capsule-video-f-30',
                        labelText: data.duration,
                        maskIcon: 'x-d20-videoplay'
                    };
                default:
                    return {...baseParams};
            }
        }
    }];

    for (let i = 0; i < iconResolverList.length; i++) {
        const {param, resolver} = iconResolverList[i];
        if (data[param]) {
            return resolver(data);
        }
    }
};

// 标题标签数据转化
export const transitionLabel = (newsData) => {
    const data = newsData.data;
    // 图片
    const prefixMap = {
        // minivideo: {
        //     text: '小视频',
        //     color: 'black',
        //     h: 57,
        //     w: 'K4',
        //     theme: 'outline'
        // },
        rumourTrue: {
            theme: 'ext2',
            w: 'K4',
            h: 57,
            color: 'green',
            text: '真',
            text2: '证实'
        },
        rumourFalse: {
            theme: 'ext2',
            h: 57,
            w: 'K4',
            color: 'red',
            text: '假',
            text2: '谣言'
        },
        rumourPending: {
            theme: 'ext2',
            h: 57,
            w: 'K4',
            color: 'red',
            text: '疑',
            text2: '待论证'
        },
        rumour4: {
            theme: 'outline',
            h: 57,
            w: 'K4',
            color: 'red',
            text: '纯属谣言',
        },
        rumour5: {
            theme: 'outline',
            h: 57,
            w: 'K4',
            color: 'red',
            text: '缺乏依据',
        },
        rumour6: {
            theme: 'outline',
            h: 57,
            w: 'K4',
            color: 'red',
            text: '存在误导',
        },
        rumour7: {
            theme: 'outline',
            h: 57,
            w: 'K4',
            color: 'red',
            text: '严重失实',
        },
        rumour8: {
            theme: 'outline',
            h: 57,
            w: 'K4',
            color: 'red',
            text: '过于绝对',
        },
        rumour9: {
            theme: 'outline',
            h: 57,
            w: 'K4',
            color: 'red',
            text: '概率极低',
        },
        rumour10: {
            theme: 'outline',
            h: 57,
            w: 'K4',
            color: 'red',
            text: '作用有限',
        },
        rumour11: {
            theme: 'outline',
            h: 57,
            w: 'K4',
            color: 'red',
            text: '尚无定论',
        },
        rumour12: {
            theme: 'outline',
            h: 57,
            w: 'K4',
            color: 'green',
            text: '确有可能',
        },
        rumour13: {
            theme: 'outline',
            h: 57,
            w: 'K4',
            color: 'green',
            text: '确实有用',
        },
    };
    return prefixMap[data['title_prefix']] || {};
};

// 双列模板数据转化
export const transitionDoubleRow = (newsData) => {
    const data = newsData.data;
    const baseParams = getBaseImageProps({
        src: data.image,
        ratio: '3:2',
        radius: 'J_X15'
    });
    const iconResolverList = [{
        // 对type字段的处理
        param: 'type',
        resolver: (data) => {
            switch (data.type) {
                case 'video':
                    return {
                        ...baseParams,
                        labelIcon: 'd20-capsule-video-f-30',
                        labelText: data.duration,
                        // maskIcon: 'x-d20-videoplay'
                    };
                case 'image':
                    return {
                        ...baseParams,
                        labelIcon: 'd20-capsule-img-f-30',
                        labelText: data.duration
                    };
                case 'gif':
                    return {
                        ...baseParams,
                        labelText: 'GIF'
                    };
                default:
                    return {...baseParams};
            }
        }
    }, {
        // 对cover_img_type字段的处理
        param: 'cover_img_type',
        resolver: (data) => {
            switch (data.type) {
                case 'video':
                    return {
                        src: data.image,
                        // labelIcon: 'd20-capsule-video-f-30',
                        labelText: data.duration,
                        maskIcon: 'x-d20-videoplay'
                    };
                default:
                    return {...baseParams};
            }
        }
    }];

    for (let i = 0; i < iconResolverList.length; i++) {
        const {param, resolver} = iconResolverList[i];
        if (data[param]) {
            return resolver(data);
        }
    }
};

// 播放视频模板
export const transitionBigVideo = (newsData:any, columnType:string, columnIndex:number) => {
    const data = newsData.data;
    if (data.type !== 'video') {
        return {}
    }
    const filterClarityUrl = clarityUrl => {
        let result = {};
        clarityUrl && clarityUrl.forEach(url => {
            !result[url.key] && (result[url.key] = url);
        });
        return result;
    }
    
    return {
        nid: data.rid,
        vid: data.vid,
        clarityUrl: filterClarityUrl(data.clarityUrl),
        pageUrl: data.pageUrl,
        poster: data.image,
        vedioDuration: data.videoDuration,
        isMiniVideo: data.title_prefix === 'minivideo' 
    }
}
