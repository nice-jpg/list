import boxx from '@baidu/auc-base/boxx';

export const getBoxVideoInfo = (vid, pageUrl) => {
    return new Promise((resolove, rejetc) => {
        if (!boxx.canIUse('media.video.readVideoHistoryPlayerInfo')) {
            resolove('fail');
            return;
        }
        if (!vid || !pageUrl) {
            resolove('fail');
            return;
        }
        boxx.call('media.video.readVideoHistoryPlayerInfo', {
            pageUrl,
            vid,
            success(res) {
                if (+res.status === 0) {
                    resolove(res.data.progress);
                } else {
                    resolove('fail');
                }
            },
            fail(err) {
                resolove('fail');
            }
        });
    });
};

export const setBoxVideoInfo = (vid, pageUrl, progress) => {
    return new Promise((resolove, rejetc) => {
        if (!boxx.canIUse('media.video.saveVideoHistoryPlayerInfo')) {
            return;
        }
        if (!vid || !pageUrl) {
            return;
        }
        boxx.call('media.video.saveVideoHistoryPlayerInfo', {
            progress: (progress || 0) + '',
            pageUrl,
            vid,
            success(res) {
                resolove('success');
            },
            fail(res) {
            }
        });
    });
};

export const seekPlayer = (vid, seek) => {
    return new Promise((resolove, rejetc) => {
        if (!boxx.canIUse('media.video.seekPlayer')) {
            return;
        }
        boxx.call('media.video.seekPlayer', {
            seek,
            vid,
            success(res) {
                resolove('success');
            }
        });
    });
};