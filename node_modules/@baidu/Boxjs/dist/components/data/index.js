/**
* @file
* @author renzhonghua
*/

var invoke = require('../../core/invoke');

function parasHandle(obj, type) {
    var name = '';
    var module = '';
    /* istanbul ignore if *//* istanbul ignore next */
    if (type === 'toggle') {
        name = obj.name;
        module = obj.type;
    } else {
        name = obj.name.split('-')[1];
        module = obj.name.split('-')[0];
    }

    var fstring = name.substring(0, 1).toUpperCase();
    var other = name.substring(1);
    var action = type + fstring + other;
    var result = [module, action].join('/');
    return result;
}

return {
    get: function (obj) {
        var result = parasHandle(obj, 'get');
        return invoke(result, obj.data, obj.abtest);
    },
    set: function (obj) {
        /* istanbul ignore next */
        var result = parasHandle(obj, 'set');
        /* istanbul ignore next */
        return invoke(result, obj.data, obj.abtest);
    },
    toggle: function (obj) {
        /* istanbul ignore next */
        var result = parasHandle(obj, 'toggle');
        /* istanbul ignore next */
        var status = 0;
        /* istanbul ignore if *//* istanbul ignore next */
        if (obj.status) {
            status = (parseInt(obj.status, 10) + 1) % 2;
        }
        /* istanbul ignore next */
        var data = obj.data || {};
        /* istanbul ignore next */
        data.status = status + '';
        /* istanbul ignore next */
        return invoke(result, data, obj.abtest);
    }
};
