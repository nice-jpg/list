
var $ = require('@baidu/Boxjs/dist/utils/_bdboxWrapper')
/* eslint-disable */
/**
 * 定位 by yupeng07
 * 功能：
 * 1.getCoord 获取经纬度信息，android 可以获取更多地理位置信息
 * 2.geoDecode 通过经纬度获取详细地理信息
 * 3.transformPosition 坐标系转换
 * 详细见下面Demo。
 **/
var $ = Zepto;
var _version_compare = require('../utils/version_compare');
var _version = require('../utils/getVersion')();
var _os = require('../utils/detect')();
var _androidInvoke = require('../android/invokeApp');
var _iosInvoke = require('../ios/invokeApp');
/**
 * LBS API config
 * @type {Object}
 * 参考：http://developer.baidu.com/map/index.php?title=webapi/guide/webservice-geocoding
 */
var _lbsconfig = {
    url: 'http://api.map.baidu.com/',
    ak: '45f71e25f4f4c916a296ade927381d35',
    output: 'json'
};
/**
 * H5定位API config
 * @type {Object}
 */
var _geoOptions = {
    enableHighAccuracy: true,
    maximumAge: 0,
    timeout: 1000
};
/**
 * 创建全局回调
 * @param  {Function} callback 回调函数
 * @param  {Object}   owner    回调函数的拥有调用者
 * @return {String}            回调函数名
 */
function createWindowCallBack(callback, owner) {
    var name = '__location' + Bdbox.getId() + '_' + Date.now();
    window[name] = function() {
        callback.apply(owner, arguments);
    };
    return name;
}

/////////////////////////////////////////////////////////////////
///
/////////////////////////////////////////////////////////////////
/**
 * 获取经纬度
 * Android可直接返回经纬度以及地理信息。
 * IOS&H5只返回经纬度，如需详细地理位置信息可以调下面的两个 LBS 函数
 * @param  {Object} opt 参数
 * opt.success  成功回调函数
 * opt.error    失败回调函数
 * opt.coor_type 坐标类型 默认bd09 百度墨卡托坐标系：bd09 国测局坐标系：gcj02
 *
 * var _location = require('lifesearch:js/lib/location');
 * _location.getCoord({
 *     coor_type:'bd09',
 *     success: function(data) {
 *         alert(JSON.stringify(data));
 *     },
 *     error:function (e){
 *
 *     }
 * });
 *
 */
function getCoord(opt) {
    var gps = new GPS(opt);
    gps.getCoord();
}
/**
 * 定位类
 * @param {Object} opt 参数
 * opt.success  成功回调函数
 * opt.error    失败回调函数
 * opt.coor_type 坐标类型 默认bd09 百度墨卡托坐标系：bd09 国测局坐标系：gcj02
 */
function GPS(opt) {
    this.success = opt.success;
    this.error = opt.error;
    this.coor_type = opt.coor_type || 'bd09';
    this.timer = null;
}
$.extend(GPS.prototype, {
    getCoord: function() {
        if (Bdbox.$isBox() && _version_compare(_version, '6.0') >= 0) {
            if (_os.android && _version_compare(_version, '6.3') >= 0) {
                /*定位策略：安卓6.3版本框，调用客户端定位接口，如果定位失败在回调函数里调用h5定位API*/
                var ret = _androidInvoke('Bdbox_android_utils', 'location', [JSON.stringify({
                    coor_type: this.coor_type
                }), createWindowCallBack(this.success, this)]);
                if (0 !== ret.error) {
                    /*可能接口注入失败，或者定位策略修改之前的APK，或者FIS_DEBUG环境？*/
                    this.html5Location();
                }
            } else if (_os.ios) {
                _iosInvoke('utils', {
                    "action": "getCurrentLocation",
                    "params": "",
                    "minver": "6.0.0.0"
                }, createWindowCallBack(this.geoSuccess, this));
            }
        } else {
            /*调用h5定位API*/
            this.html5Location();
        }
    },
    AndroidCallback: function(data) {
        if (typeof data !== 'string') {
            return;
        }
        data = JSON.parse(data);
        if (0 === data.st) {
            /*定位成功*/
            data.from = 'android';
            this.success(data);
        } else {
            /*定位失败 && 继续用h5定位API*/
            this.html5Location();
        }
    },
    html5Location: function() {
        if (!navigator.geolocation) {
            console.log('系统不支持定位');
        }
        navigator.geolocation.getCurrentPosition(window[createWindowCallBack(this.geoSuccess, this)], window[createWindowCallBack(this.geoError, this)], _geoOptions);
    },

    geoSuccess: function(data) {
        data.from = 'h5';
        this.timeout && clearTimeout(this.timeout);
        this.success && this.success(data);
    },

    geoError: function(e) {
        this.error && this.error('没有开启error' + JSON.stringify(e));
        this.timeout && clearTimeout(this.timeout);
    }
});

/**
 * 逆地理编码 经纬度->地理详细位置 参考：http://developer.baidu.com/map/index.php?title=webapi/guide/webservice-geocoding
 * @param  {Object} opt 编码参数
 *
 * opt.coords 经纬度坐标，根据经纬度坐标获取地址
 * 格式：38.76623,116.43213 lat<纬度>,lng<经度>
 *
 * opt.coordtype 坐标的类型，opt.coords类型 默认 bd09ll
 * 目前支持的坐标类型包括：
 * bd09ll（百度经纬度坐标）、bd09mc（百度米制坐标）、gcj02ll（国测局经纬度坐标）、wgs84ll（ GPS经纬度）
 *
 * H5定位取得坐标解析为地址名称 iOS坐标类型wgs84ll android框内坐标类型gcj02ll
 * coordtype: 'ios' === _os.name ? 'wgs84ll' : 'gcj02ll',
 *
 * @return {[type]}
 *
 * var _location = require('lifesearch:js/lib/location');
 * _location.geoDecode({
 *     coords: {
 *         latitude: 39.983424,
 *         longitude: 116.322987
 *     },
 *     coordtype: 'wgs84ll',
 *     success: function(data) {
 *         if (0 == data.status) {
 *             console.log(data.result);
 *         } else {
 *             console.log('失败：' + data.status);
 *         }
 *     }
 * });
 */
function geoDecode(opt) {

    var data = {
        ak: _lbsconfig.ak,
        location: [opt.coords.latitude, opt.coords.longitude].join(','),
        coordtype: opt.coordtype || 'bd09ll',
        output: _lbsconfig.output
    };

    $.ajax({
        url: _lbsconfig.url + 'geocoder/v2/',
        data: data,
        dataType: 'jsonp',
        success: function(res) {
            opt.success && opt.success(res);
        },
        error: function(e) {
            opt.error && opt.error(e);
        }
    });
}
/**
 * 坐标系类型转换 把原坐标系左边转换成目标坐标系坐标
 * @param  {Object} opt 转换请求参数，参考：http://developer.baidu.com/map/index.php?title=webapi/guide/changeposition
 *
 * opt.coords 源坐标 必填
 * 格式：经度,纬度;经度,纬度…
 * 限制：最多支持100个
 * 格式举例：
 * 114.21892734521,29.575429778924;
 * 114.21892734521,29.575429778924
 *
 * opt.form 源坐标类型 默认1
 * 1：GPS设备获取的角度坐标，wgs84坐标;
 * 2：GPS获取的米制坐标、sogou地图所用坐标;
 * 3：google地图、soso地图、aliyun地图、mapabc地图和amap地图所用坐标，国测局坐标;
 * 4：3中列表地图坐标对应的米制坐标;
 * 5：百度地图采用的经纬度坐标;
 * 6：百度地图采用的米制坐标;
 * 7：mapbar地图坐标;
 * 8：51地图坐标
 *
 * opt.to 目的坐标类型 默认5
 * 5：bd09ll(百度经纬度坐标);
 * 6：bd09mc(百度米制经纬度坐标);
 *
 * @return {Null}
 *
 * var _location = require('lifesearch:js/lib/location');
 * _location.transformPosition({
 *  coords:['114.21892734521, 29.575429778924', '114.21892734521, 29.575429778924'].join(';'),
 *  form: 1,
 *  to: 6,
 *  success:function(data){
 *      if (0 == data.status) {
 *          console.log(data.result);
 *      }else{
 *          console.log('失败：' + data.status);
 *      }
 *  });
 */
function transformPosition(opt) {
    var data = {
        ak: _lbsconfig.ak,
        coords: opt.coords,
        from: opt.form || 1,
        to: opt.to || 5,
        output: _lbsconfig.output
    };

    $.ajax({
        url: _lbsconfig.url + 'geoconv/v1/?',
        data: data,
        dataType: 'jsonp',
        success: function(res) {
            opt.success && opt.success(res);
        },
        error: function(e) {
            opt.error && opt.error(e);
        }
    });
}

return {
    getCoord: getCoord,
    geoDecode: geoDecode,
    transformPosition: transformPosition
};
