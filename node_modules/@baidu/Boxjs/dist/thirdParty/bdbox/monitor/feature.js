
var $ = require('@baidu/Boxjs/dist/utils/_bdboxWrapper')
var monitor = require('./monitor');
var winElement = window,
    ID,
    docElement = document,
    GIF_URI = '//m.baidu.com/static/searchbox/_analyze/f.gif';
//抽样
// if (Date.now() % 2 === 1) {
//     GIF_URI = 'http://x5.boxrd.baidu.com/test/f.gif';
// }

var Feature = monitor(GIF_URI, {
    customHandler: function(url) {
        //添加id、屏幕宽高、设备像素比
        return url + '&id=' + ID + '&ds=' + (window.screen.width || 0) + 'x' + (window.screen.height || 0) + '&dpr=' + window.devicePixelRatio;
    }
});
var COUNT = 0;

Feature.init = function(id) {
    ID = id;
    _FD.runAllTest();
    var t = setInterval(function() {
        COUNT++;
        if (COUNT > 10) {
            clearInterval(t);
        }
        if ('WebP-lossy' in _FD.f && 'WebP-lossless' in _FD.f && 'WebP-alpha' in _FD.f && 'WebP-animation' in _FD.f) {
            clearInterval(t);
            for (var key in _FD.f) {
                _FD.f[key] = _FD.f[key] ? 1 : 0;
            }
            //发送请求
            Feature.report(_FD.f);
        }
    }, 500);
};

function checkSupportsForCSS(property) {
    var domProperty = '',
        domPrefixes = 'Webkit Moz O ms Khtml webkit moz o khtml'.split(' '),
        cssAttributeNames = [];
    //border-radius ---->  BorderRadius
    if (property.indexOf('-') < 0) {
        domProperty = property.charAt(0).toUpperCase() + property.slice(1);
    } else {
        for (var i = 0, len = property.split('-').length, items = property.split('-'); i < len; i++) {
            domProperty = domProperty + items[i].charAt(0).toUpperCase() + items[i].slice(1);
        }
    }
    cssAttributeNames.push(domProperty.charAt(0).toLowerCase() + domProperty.slice(1));
    for (var i = 0, len = domPrefixes.length; i < len; i++) {
        cssAttributeNames.push(domPrefixes[i] + domProperty);
    }
    for (i = 0; i < cssAttributeNames.length; i++) {
        var attributeName = cssAttributeNames[i];
        if (docElement.body.style[attributeName] !== undefined) {
            return true;
        }
    }
    return false;
}

function checkSupportsForCanvas() {
    var elem = docElement.createElement('canvas');
    var c;
    if (!!(elem.getContext && (c = elem.getContext('2d')))) {
        return $.isFunction(c.fillText) && $.isFunction(c.drawImage) && $.isFunction(c.getImageData) && $.isFunction(c.arc)
    }
    return false;
}

// function checkSupportsForDragAndDrop() {
//     var div = docElement.createElement('div');
//     return ('draggable' in div) || ('ondragstart' in div && 'ondrop' in div);
// }

// function checkSupportsForInputTypes(typeList) {
//     // DO NOT INCLUDE 'TEXT' IN TYPELIST
//     var input = document.createElement('input');
//     for (var i = 0, len = typeList.length; i < len; i++) {
//         if (typeList[i].toLowerCase() == 'text') continue;

//         input.setAttribute('type', typeList[i]);
//         if (input.type == 'text') return false;
//     }
//     return true;
// }
var testText = 'test_text';

function checkSupportsForLocalStorage() {
    try {
        localStorage.setItem(testText, testText);
        localStorage.removeItem(testText);
        return true;
    } catch (e) {
        return false;
    }
}

function checkSupportsForSessionStorage() {
    try {
        sessionStorage.setItem(testText, testText);
        sessionStorage.removeItem(testText);
        return true;
    } catch (e) {
        return false;
    }
}

// function checkSupportsForTemplate() {
//     return 'content' in docElement.createElement('template');
// }

// function checkSupportsForShadowDom() {
//     return 'createShadowRoot' in docElement.createElement('a');
// }

// function checkSupportsForCustomElements() {
//     return 'registerElement' in docElement;
// }

// function checkSupportsForHTMLImports() {
//     return 'import' in docElement.createElement('link');
// }

function checkSupportsForWebPFormat(feature, callback) {
    var kTestImages = {
        lossy: 'UklGRiIAAABXRUJQVlA4IBYAAAAwAQCdASoBAAEADsD+JaQAA3AAAAAA',
        lossless: 'UklGRhoAAABXRUJQVlA4TA0AAAAvAAAAEAcQERGIiP4HAA==',
        alpha: 'UklGRkoAAABXRUJQVlA4WAoAAAAQAAAAAAAAAAAAQUxQSAwAAAARBxAR/Q9ERP8DAABWUDggGAAAABQBAJ0BKgEAAQAAAP4AAA3AAP7mtQAAAA==',
        animation: 'UklGRlIAAABXRUJQVlA4WAoAAAASAAAAAAAAAAAAQU5JTQYAAAD/////AABBTk1GJgAAAAAAAAAAAAAAAAAAAGQAAABWUDhMDQAAAC8AAAAQBxAREYiI/gcA'
    };
    var img = new Image();
    img.onload = function() {
        var result = (img.width > 0) && (img.height > 0);
        callback(feature, result);
    };
    img.onerror = function() {
        callback(feature, false);
    };
    img.src = 'data:image/webp;base64,' + kTestImages[feature];
}

function webPCallback(feature, result) {
    _FD.f['WebP-' + feature] = result;
    return result;
}

/* WebSql */
// function checkSupportsForWebSQL() {
//     return 'openDatabase' in winElement;
// }

/* Timing */
function checkSupportsForNavigationTiming() {
    return 'performance' in winElement && 'timing' in winElement.performance;
}

function checkSupportsForUserTiming() {
    return 'performance' in winElement && 'mark' in winElement.performance;
}

/* JavaScript Feature Detection */
function checkSupportsForES5Array() {
    return !!(Array.prototype &&
        Array.prototype.every &&
        Array.prototype.filter &&
        Array.prototype.forEach &&
        Array.prototype.indexOf &&
        Array.prototype.lastIndexOf &&
        Array.prototype.map &&
        Array.prototype.some &&
        Array.prototype.reduce &&
        Array.prototype.reduceRight &&
        Array.isArray);
}

// function checkSupportsForES6Promises() {
//     return 'Promise' in winElement &&
//         // Some of these methods are missing from
//         // Firefox/Chrome experimental implementations
//         'cast' in winElement.Promise &&
//         'resolve' in winElement.Promise &&
//         'reject' in winElement.Promise &&
//         'all' in winElement.Promise &&
//         'race' in winElement.Promise &&
//         // Older version of the spec had a resolver object
//         // as the arg rather than a function
//         (function() {
//             var resolve;
//             new winElement.Promise(function(r) {
//                 resolve = r;
//             });
//             return typeof resolve === 'function';
//         }());
// }

function checkSupportsForXMLHttpRequest2() {
    var progEv = !!(winElement.ProgressEvent);
    var fdata = !!(winElement.FormData);
    var wCreds = winElement.XMLHttpRequest && 'withCredentials' in new XMLHttpRequest;
    return progEv && fdata && wCreds;
}

function checkGeolocation() {
    return 'geolocation' in navigator;
}

// function checkWebGL() {
//     return !!winElement.WebGLRenderingContext;
// }

function checkSVG() {
    /*jshint -W802 */
    return !!docElement.createElementNS && !!docElement.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect;
}

function checkWorker() {
    return !!winElement.Worker;
}

function checkSocket() {
    return 'WebSocket' in winElement || 'MozWebSocket' in winElement;
}

function checkVideo() {
    var elem = docElement.createElement('video');
    return !!elem.canPlayType;
}

function checkAudio() {
    var elem = docElement.createElement('audio');
    return !!elem.canPlayType;
}

function checkHistory() {
    return !!(winElement.history && history.pushState);
}

function checkFile() {
    return !!(winElement.File && winElement.FileReader);
}

function checkPostMessage() {
    return !!winElement.postMessage;
}

// function checkWebkitNotification() {
//     return !!winElement.webkitNotifications;
// }

function checkRequestAnimationFrame() {
    var vendors = ['webkit', 'moz', 'o', 'ms'];
    var requestAnimationFrame = winElement.requestAnimationFrame;
    for (var x = 0; x < vendors.length && !requestAnimationFrame; ++x) {
        requestAnimationFrame = winElement[vendors[x] + 'RequestAnimationFrame'];
    }
    return !!requestAnimationFrame;
}

function checkCookie() {
    return !!navigator.cookieEnabled;
}
var _FD = {
    f: {},
    /*
     * add Test and set f
     */
    t: function(attr, testFunc, args) {
        this.f[attr] = testFunc.apply(this, [].slice.call(arguments, 2));
    },
    /* Can not return directly.
     * Set f item manually in callback function.
     *
     */
    c: function(testFunc, args) {
        testFunc.apply(this, [].slice.call(arguments, 1));
    },
    runAllTest: function() {
        var that = this;
        that.t('bdrs', checkSupportsForCSS, 'border-radius');
        that.t('bxsd', checkSupportsForCSS, 'box-shadow');
        // that.t('opat', checkSupportsForCSS, 'opacity');
        that.t('txsd', checkSupportsForCSS, 'text-shadow');
        that.t('anim', checkSupportsForCSS, 'animation-name');
        that.t('trsi', checkSupportsForCSS, 'transition');
        that.t('trfm', checkSupportsForCSS, 'transform');

        that.t('cavs', checkSupportsForCanvas); //canvas
        // that.t('dgdp', checkSupportsForDragAndDrop); //drag drop
        // that.t('InputTypes', checkSupportsForInputTypes, ['number', 'date', 'time', 'range', 'url', 'email', 'color']);
        that.t('ls', checkSupportsForLocalStorage); //localStorage
        that.t('ss', checkSupportsForSessionStorage); //SessionStorage
        // that.t('wctem', checkSupportsForTemplate);
        // that.t('wcsdd', checkSupportsForShadowDom);
        // that.t('wccse', checkSupportsForCustomElements);
        // that.t('wchti', checkSupportsForHTMLImports);

        that.c(checkSupportsForWebPFormat, 'lossy', webPCallback);
        that.c(checkSupportsForWebPFormat, 'lossless', webPCallback);
        that.c(checkSupportsForWebPFormat, 'alpha', webPCallback);
        that.c(checkSupportsForWebPFormat, 'animation', webPCallback);

        // that.t('wsql', checkSupportsForWebSQL);

        that.t('natm', checkSupportsForNavigationTiming); //navigationtiming
        that.t('ustm', checkSupportsForUserTiming); //usertiming

        that.t('arra', checkSupportsForES5Array); //ES5Array
        // that.t('prms', checkSupportsForES6Promises); //ES6Promises
        that.t('xhr2', checkSupportsForXMLHttpRequest2); //XMLHttpRequest2

        // that.t('wbgl', checkWebGL); //WebGL
        that.t('geo', checkGeolocation); //geolocation
        that.t('svg', checkSVG); //SVG
        that.t('work', checkWorker); //Worker
        that.t('wbsk', checkSocket); //WebSocket
        that.t('vido', checkVideo); //Video
        that.t('audo', checkAudio); //Audio
        that.t('hsty', checkHistory); //History
        that.t('file', checkFile); //File
        that.t('psmg', checkPostMessage); //PostMessage

        // that.t('wknf', checkWebkitNotification); // webkitNotifications
        that.t('rqaf', checkRequestAnimationFrame); // RequestAnimationFrame
        //测试cookie支持程度
        that.t('cookie', checkCookie);
    }
};


/**
 * 页面js报错上报
 * @memberOf Bdbox.monitor
 * @name  feature
 * @author wangyongqing01
 * @version $Id: feature.js 286585 2016-03-15 11:57:15Z wangyongqing01 $
 * @example
 * //id 监控id
 * Bdbox.monitor.feature('init',[id])
 *
 */
return function() {
    Feature.main.apply(Feature, arguments);
};
