
var $ = require('@baidu/Boxjs/dist/utils/_bdboxWrapper')
//上报js错误
var monitor = require('./monitor');
var getVersion = require('../utils/getVersion');
var GIF_URI = '//m.baidu.com/static/searchbox/_analyze/badjs.gif';
var ID, config = [];
var global = window;
var urlencode = encodeURIComponent;
// var UA = global.navigator;
//level配置
var levels = {
    'debug': 1,
    'info': 2,
    'error': 4,
    'fail': 8
};
var BROWSER_DATA = [
    'boxv=' + getVersion(),
    'isbox=' + ($.isBox ? 1 : 0)
];
var badjs = monitor(GIF_URI, {
    customHandler: function(url) {
        var c = config.join('&');
        var arr = ['&id=' + ID, c, BROWSER_DATA.join('&')];
        if (!c) {
            arr.splice(1, 1);
        }

        return url + arr.join('&');
    }
});


badjs.init = function(id, commonData) {
    if (!id) {
        throw 'Bdbox.monitor.bad need a id';
    }
    ID = id;
    if ($.isObject(commonData)) {
        for (var i in commonData) {
            if (commonData[i]) {
                config.push(i + '=' + urlencode(commonData[i]));
            }
        }
    } else if ($.isString(commonData)) {
        config = [commonData];
    }
};
/**
 * 处理错误
 * @param msg {String} 上报错误信息
 * @param url {String} 该上报信息所属的文件路径
 * @param line {Number} 上报信息所属的文件行号，没有为0
 *@param col {Number} 上报信息所属的文件列号，没有为0
 * @param mid {Number} 上报对应的类型;如果mid === -1，window.onerror专用，其他：1=>js错误，2：网络错误，3：图片请求错误 ，4：样式错误
 * @param level {Number} 上报对应的级别 1 => debug（调试日志）; 2 = > info（流水日志）; 4 => error（错误日志）（默认值） ; 8 => fail（致命错误日志）
 */
function handleError(msg, url, line, col, mid, level) {
    //获取level的值
    if ($.isString(level)) {
        level = levels[level] || 4;
    }

    level = $.isNumber(level) ? level : 4; //默认值
    if ($.isObject(msg) && msg.stack) {
        msg = msg.stack.toString();
    }
    if (!msg) {
        return;
    }
    if (mid === -1) { //window onerror事件处理，增加Script Error前缀
        msg = 'Global js Error:' + msg;
    }

    //上报
    return badjs.report('col=' + (col | 0) + '&level=' + level + '&msg=' + encodeURIComponent(msg) + '&url=' + encodeURIComponent(url) + '&ln=' + line + (mid ? '&mid=' + mid : ''));
}
badjs.error = handleError;

global.onerror = function(msg, url, line, col, error) {
    //没有URL不上报！上报也不知道错误
    if (msg !== 'Script error.' && !url) {
        return true;
    }
    col = col || (window.event && window.event.errorCharacter) || 0;
    if (!!error && !!error.stack) {
        //如果浏览器有堆栈信息
        //直接使用
        msg = error.stack.toString();
    } else if (!!arguments.callee) {
        //尝试通过callee拿堆栈信息
        var ext = [];
        var f = arguments.callee.caller,
            c = 3;
        //这里只拿三层堆栈信息
        while (f && (--c > 0)) {
            ext.push(f.toString());
            if (f === f.caller) {
                break; //如果有环
            }
            f = f.caller;
        }
        msg = ext.join('\n');
    }

    //TODO:兼容win7 下ie10第四个参数为列

    handleError.apply(this, [msg, url, line, col, -1, 4]); //增加onerror badjs 特殊处理
};

/**
 * 页面js报错上报
 * @memberOf Bdbox.monitor
 * @name  badjs
 * @author wangyongqing01
 * @version $Id: bad.js 286585 2016-03-15 11:57:15Z wangyongqing01 $
 * @example
 * //id 监控id
 * //commonData 通用数据对象
 * Bdbox.monitor.badjs('init',[id, commonData])
 *
 */
return function() {
    badjs.main.apply(badjs, arguments);
};
