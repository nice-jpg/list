
var $ = require('@baidu/Boxjs/dist/utils/_bdboxWrapper')
/* eslint-disable */
var version_compare = require('../utils/version_compare');
var getVersion = require('../utils/getVersion');
var getLiteVersion = require('../utils/getLiteVersion');
/**
 * @namespace Bdbox.android
 */
/**
 * @memberOf Bdbox.android
 * @name invokeApp
 * @function
 * @param  {String} name android提供的命名空间
 * @param  {String} func android命名空间下的方法名
 * @param  {Array} args 接受参数
 * @return {Object}      返回对象格式的json
 * @requires common:bdbox/utils/version_compare
 * @requires common:bdbox/utils/getVersion
 * @version  $Id: invokeApp.js 286328 2016-03-14 08:32:28Z wangyongqing01 $
 */
function invokeApp(name, func, args) {
    if (args && !$.isArray(args)) {
        args = Array.prototype.slice.call(arguments, 0).slice(2);
    }
    //如果存在就执行，如果不存在就通过版本号来判断
    if (window[name] && window[name][func]) {
        var result = window[name][func].apply(window[name], args);
        //直接调用
        return {
            error: 0,
            result: result,
            __from: 'js' //打个标记
        };
    }
    var version = getVersion();
    if (version_compare(version, 4.8) >= 0 || $.$isLiteBox() || $.isMissionBox) {
        //调用方法拿4.8版本来判断
        //prompt调用一个不存在的接口，也不会报错，只是调用无效
        //但有错误值
        //2017年04月20日 新增lite版本2.0以上增加lite版本调起
        var back = execCaller(name, func, args);

        back = back ? JSON.parse(back) : {};
        back.__from = 'app';
        return back;
    } else if (version === '4.7.1' || version == '4.7') {
        //需要给4.7加个特殊标记
        //对于4.8出现的接口或者不存在的接口，在4.7内调用
        //会进入下面的逻辑，但是有风险！！！！！
        //4.7~4.7.1对于不存在的接口，使用prompt调用会出现假死状态
        //无法解决，因为无解……
        //只能在使用4.8之后的js接口，在invokeApp之前提前做判断
        //例如：bd_searchbox_interface.sendLog方法是4.8引入的
        //在使用4.7中使用invokeApp调用，会走到的逻辑，然后假死！！！切记！！！！
        var rs = execCaller(name, func, args);

        return {
            error: 0,
            result: rs,
            __from: 'app4.7'
        };
    }
    return {
        error: 200
    };
}

function execCaller(nameSpace, funcName, funcArgs) {
    if (!$.$isBox() && !$.$isLiteBox() && !$.isMissionBox) {
        return {
            error: 201
        };
    } else if (!$.$isAndroid()) {
        return {
            error: 202
        };
    }
    //保证要有[]
    var caller = {
        obj: nameSpace,
        func: funcName,
        args: funcArgs ? funcArgs : []
    };
    try {
        return window.prompt('BdboxApp:' + JSON.stringify(caller));
    } catch (e) {
        return {
            error: 201
        };
    }
}
return invokeApp;
