
var $ = require('@baidu/Boxjs/dist/utils/_bdboxWrapper')
//require("zepto");
var Store = require('./store');
/**
 * API类，支持缓存
 * @class  Api
 * @lends  Bdbox.app.api
 * @param {Object} conf 配置对象，包括name/url/type/store等
 * @author wangyongqing01
 * @version  $Id: api.js 286585 2016-03-15 11:57:15Z wangyongqing01 $
 */
var Api = function (conf) {
    conf = conf || {};
    this.name = conf.name;
    this.url = conf.url;
    this.type = conf.type || 'GET';
    this.config = conf;
    var s = conf.store;

    if ($.isObject(s)) {
        this.store = Store(name, s.expire || 600e3, s.type || 'session');
    } else if (s) {
        this.store = Store(name, 600e3, s);
    } else {
        this.store = {
            set: $.emptyFn,
            get: $.emptyFn
        };
    }
}


/**
 * 发送内容，返回一个ajax对象，可以abort掉请求~
 * @memberOf Bdbox.app.api
 * @function send
 * @param  {Object|string} config   类似Zepto.ajax参数，但是增加key，作为数据缓存的唯一标示
 * @return {Zepto.ajax}           返回zepto.ajax对象
 */

Api.prototype.send = function (key, config, withCache) {
    var defaultData = {
        url: this.url,
        type: this.type,
        data: '',
        dataType: this.config.dataType || 'json'
    };

    var success = config.success;
    config = Zepto.extend(defaultData, config);

    withCache = $.isBoolean(withCache) ? withCache : 1;
    var store = this.store;
    t = this.name + ':' + key;
    if (withCache) {
        var cache = store.get(key);
        if (cache && $.isFunction(success)) {
            success(cache, true);
            return;
        }
    }
    if (success) {
        config.success = function (data) {
            store.set(key, data);
            if ($.isFunction(success)) {
                success(data);
            }
        };
    }
    return Zepto.ajax(config);
};
// Api.prototype.getKey = function(data) {
//     if (data) {
//         //排序,保证顺序
//         if ($.isObject(data)) {
//             var result = [];
//             Object.keys(data).sort().forEach(function(v) {
//                 result.push(v + '=' + data[v]);
//             });
//             return result.join('&');
//         } else {
//             return data;
//         }
//     } else {
//         return 'global';
//     }
// }

/**
 * api类，带有缓存功能store支持
 * @memberOf Bdbox.app
 * @namespace Bdbox.app.api
 * @param  {Object} conf 配置变量
 * @return {Api}        Api对象
 * @example
 * var api = Bdbox.app.api({
 *           name:'loadmore',
 *            url:'/json/a.json',
 *            type: 'get',
 *            store: {
 *                expire: 30e3
 *            }
 *        });
 *  api.send('page1',{
 *           data: {
 *               name: 'jianjie'
 *           },
 *           success: function(data) {
 *               view.dom.html(data.data).addClass('show');
 *               Bdbox.app.emit('hideloading');
 *           },
 *           error: function(err) {
 *               console.log(err);
 *           }
 *       });
 */
return function (name, conf) {
    conf = conf || {};
    conf.name = name;
    return new Api(conf);
}
