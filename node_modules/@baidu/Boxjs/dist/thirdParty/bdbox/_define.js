//AMD模块
var modulesMap = {};
/**
 * define函数第二个参数构造工厂函数
 *
 * @callback factory
 * @param {function} require 根据amdjs规范的require函数
 * @param {function} module 根据amdjs规范的module
 * @param {function} exports 根据amdjs规范的exports
 * @param {function} $ 有别于amdjs规范的Bdbox对象，所以Bdbox模块中的`$`是Bdbox，而不是`Zepto`
 */
/**
 * Bdbox.define方法
 * @name define
 * @memberOf Bdbox
 * @function
 * @description 会暴漏给全局define，AMDjs规范，但是第四个参数为Bdbox
 * @param  {Sting} namespace namespace是模块名称，按照fis规范：`命名空间:xxx/xxx`，例如bdbox的模块都是：`common:bdbox/xxx`
 * @param {factory} factory 构造工厂函数
 * @example
 * //`factory` 默认包含了``require``、``module``、``exports`` 和 ``$`` 四个参数（编写代码时，可以看成全局变量）。
 * //其中``require``、``module``、``exports`` 是符合AMD规范的。**而``$``是``Bdbox``独有的**！！主要为了考虑使用Bdbox对象方便而添加的~
 * //``require``：声明依赖的模块
 * //``module``：模块对象，一般使用``module.exports``导出
 * //``exports``：导出，多个导出情况可以使用``exports``
 * //``$``： Bdbox对象，所以在模块中可以直接使用``$.isFunction``等
 * //common/static/bdbox/demo.js
 * var str = 'I am a demo';
 * //使用modlue导出模块
 * return str;
 * //上面模块，在外部调用：
 * require('common:bdbox/demo');
 * console.log(Bdbox.demo);// I am a demo
 *     //or
 * var demo = require('common:bdbox/demo');
 * console.log(demo);//I am a demo
 * //或者

 * //common/static/bdbox/demo2.js
 * //调用模块依赖
 * var getVersion = require('common:bdbox/utils/getVersion');
 * var A = {
 *     str: getVersion,
 *     func: function(){}
 * };
 * //因为$实际为Bdbox
 * //所以除了使用getVersion，还可以下面的方式使用$.getVersion
 * A.other = $.getVersion();
 * //使用modlue导出
 * return A;
 * //上面模块，在外部调用：
 * require('common:bdbox/demo2');
 * console.log(Bdbox.demo2.str);//xxx
 * Bdbox.demo2.func();
 *
 * //再或者
 * //common/static/bdbox/demo3.js
 * var B = {
 *     str: 'xxx',
 *     func: function(cb){
 *         //直接使用$, $就是Bdbox对象哦
 *         if($.isFunction(cb)){
 *             cb();
 *         }
 *     }
 * };
 * //导出
 * return A;
 *
 * //再或者

 * //common/static/bdbox/demo4.js
 * exports.demo = '12121';
 * exports.send = function(){
 *     alert('Bdbox.demo4.send fire!');
 * };
 */
$.define = define;
function define(id, factory) {
    var ids = id.split(':');
    var names = ids.pop().split('/');
    var root = $;
    var name, lastName;

    while (name = names.shift()) {
        if (name === 'bdbox') {
            continue;
        }
        lastName = name;
        if (names.length) {
            root = (root[name] = root[name] || {});
        }
    }

    var mod = modulesMap[id] = {
        exports: {}
    };

    var ret = $.isFunction(factory) ? factory.apply(mod, [require, mod.exports, mod, $]) : factory;

    if (ret) {
        mod.exports = ret;
    }
    root[lastName] = mod.exports;

}
