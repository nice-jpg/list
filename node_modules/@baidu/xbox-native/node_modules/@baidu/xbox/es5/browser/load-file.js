"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = loadFile;

/**
 * @file Created on Tue Nov 27 2018
 * @module browser
 * @author wangyongqing <wangyongqing01@baidu.com>
 */
var emptyFn = function emptyFn() {};
/**
 * 加载单个文件，支持css/img/js
 * @function loadFile
 * @param {string} path - url 地址
 * @param {function} callbackFn - callback error first
 * @param {object} args - 配置对象，包括async，timeout，maxTries，before 等
 * @param {number} numTries - 不对外参数，用于尝试重试次数
 * @example
 * loadFile('/path/to/foo.js', function(err, path) {
 *     // foo.js loaded
 * });
 * loadFile('css!/path/to/foo', function(err, path) {
 *     // foo css loaded
 * });
 * loadFile('img!/path/to/foo', function(err, path) {
 *     // foo img loaded
 * });
 */


function loadFile(path, callbackFn, args) {
  var numTries = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
  var doc = document;
  var pathStripped = path.replace(/^(css|img)!/, '');
  var isCss = false;
  var elem;
  var timer;
  var _args$async = args.async,
      async = _args$async === void 0 ? true : _args$async,
      _args$maxTries = args.maxTries,
      maxTries = _args$maxTries === void 0 ? 1 : _args$maxTries,
      _args$timeout = args.timeout,
      timeout = _args$timeout === void 0 ? 2e4 : _args$timeout,
      _args$before = args.before,
      before = _args$before === void 0 ? null : _args$before;
  var beforeCallbackFn = before;

  if (typeof beforeCallbackFn !== 'function') {
    beforeCallbackFn = emptyFn;
  }

  if (/(^css!|\.css$)/.test(path)) {
    isCss = true; // css

    elem = doc.createElement('link');
    elem.rel = 'stylesheet';
    elem.href = pathStripped;
  } else if (/(^img!|\.(png|gif|jpg|svg)$)/.test(path)) {
    // image
    elem = doc.createElement('img');
    elem.src = pathStripped;
  } else {
    // javascript
    elem = doc.createElement('script');
    elem.src = path;
    elem.async = !!async;
  }

  var cb = function cb(ev) {
    clearTimeout(timer);
    var result;

    if (ev instanceof Error) {
      result = 'e';
    } else {
      result = ev.type[0];
    } // Note: The following code isolates IE using `hideFocus` and treats empty
    // stylesheets as failures to get around lack of onerror support


    if (isCss && 'hideFocus' in elem) {
      try {
        if (!elem.sheet.cssText.length) {
          result = 'e';
        }
      } catch (x) {
        // sheets objects created from load errors don't allow access to
        // `cssText`
        result = 'e';
      }
    } // handle retries in case of load failure


    if (result === 'e') {
      // increment counter
      numTries += 1; // exit function and try again

      if (numTries < maxTries) {
        return loadFile(path, callbackFn, args, numTries);
      }
    }

    elem.onload = elem.onerror = elem.onbeforeload = null;
    elem = null; // error first

    callbackFn(result === 'e' ? ev ? ev : 'error' : null, path);
  };

  elem.onload = elem.onerror = cb;

  if (beforeCallbackFn(path, elem) !== false) {
    var head = doc.head || doc.getElementsByTagName('script')[0];
    head.appendChild(elem); // timeout

    if (timeout > 0) {
      timer = setTimeout(function () {
        cb(new Error('timeout'));
      }, timeout);
    }
  }
}