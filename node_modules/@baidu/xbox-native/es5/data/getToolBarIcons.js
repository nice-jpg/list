"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _register = _interopRequireDefault(require("../register"));

var _index = require("./index");

var _utils = require("../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @file getToolbarIcons
 * http://bdbox.baidu.com/jssdk/api/dataget.html#gettoolbaricons
 * @module data
 * @author wangyongqing <wangyongqing01@baidu.com>
 */
(0, _register.default)('utils/getToolBarIcons', {
  androidlite: {
    versionRange: ['2.2.2']
  },
  androidinfo: {
    versionRange: ['1.0']
  },
  androidmission: {
    versionRange: ['1.0']
  },
  iosmission: {
    versionRange: ['1.0']
  },
  ios: {
    versionRange: ['8.2.3'],
    filter: function filter() {
      return {
        extData: {
          minver: '8.2.3.0'
        }
      };
    },
    thunk: function thunk(res) {
      return {
        status: res.result,
        data: {
          data: res.toolids || []
        }
      };
    }
  },
  android: {
    supportFrame: ['hybrid', 'video', 'tags', 'h5'],
    versionRange: ['8.3'],
    filter: function filter() {
      return {
        module: 'Bdbox_android_utils',
        action: 'getToolBarIcons'
      };
    },
    thunk: function thunk(res) {
      return {
        status: 0,
        data: {
          data: res.toolids || []
        }
      };
    }
  }
});
/**
 * getToolBarIcons
 * @function getToolBarIcons
 * @param {object} [data={}] - getToolBarIcons参数
 */

var _default = function _default() {
  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return (0, _index.get)((0, _utils.getParams)('utils-toolBarIcons', data));
};

exports.default = _default;