"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _register = _interopRequireDefault(require("../register"));

var _index = require("./index");

var _utils = require("../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * http://bdbox.baidu.com/jssdk/api/dataset.html#settoolbaricons
 * @file setToolBarIcons
 * @module data
 * @author wangyongqing <wangyongqing01@baidu.com>
 */
(0, _register.default)('utils/setToolBarIcons', {
  androidlite: {
    versionRange: ['2.2.2'],
    supportFrame: ['video', 'tags', 'h5'],
    thunk: function thunk(res) {
      return {
        status: 0,
        message: res.errmsg
      };
    }
  },
  androidmission: {
    versionRange: ['1.0'],
    thunk: function thunk(res) {
      return {
        status: 0,
        message: res.errmsg
      };
    }
  },
  iosmission: {
    versionRange: ['1.0']
  },
  androidinfo: {
    versionRange: ['1.0'],
    supportFrame: ['video', 'tags', 'h5'],
    thunk: function thunk(res) {
      return {
        status: 0,
        message: res.errmsg
      };
    }
  },
  iosinfo: {
    versionRange: ['1.1']
  },
  ios: {
    versionRange: ['7.7'],
    supportFrame: ['hybrid', 'video', 'tags', 'h5', 'search'],
    filter: function filter() {
      return {
        extData: {
          minver: '7.7.0.0'
        }
      };
    },
    thunk: function thunk(res) {
      return {
        status: res.errno === '1' ? 0 : res.errno,
        message: res.errmsg
      };
    }
  },
  android: {
    versionRange: ['7.7'],
    hasCB: false,
    supportFrame: ['hybrid', 'h5', 'video', 'tags'],
    filter: function filter() {
      return {
        module: 'Bdbox_android_utils',
        action: 'setToolBarIcons'
      };
    }
  }
});
/**
 * setToolBarIcons
 * @function setToolBarIcons
 * @param {array} [toolids=[]] - setToolBarIconsçš„ toolids
 */

var _default = function _default() {
  var toolids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  return (0, _index.set)((0, _utils.getParams)('utils-toolBarIcons', {
    toolids: toolids
  }));
};

exports.default = _default;