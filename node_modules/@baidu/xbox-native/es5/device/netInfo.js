"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getGlobalFunc = _interopRequireDefault(require("@baidu/xbox/es5/get-global-func"));

var _register = _interopRequireDefault(require("../register"));

var _index = require("./index");

var _android = require("../android");

var _ios = _interopRequireDefault(require("../ios"));

var _detect = require("../detect");

var _stringify = _interopRequireDefault(require("../stringify"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @file 获取 info
 * @module device
 * @author wangyongqing <wangyongqing01@baidu.com>
 */
(0, _register.default)('utils/getDeviceInfo', {
  androidlite: {
    versionRange: ['2.2.2']
  },
  androidinfo: {
    versionRange: ['1.0']
  },
  iosmission: {
    versionRange: ['1.0']
  },
  androidmission: {
    versionRange: ['1.0']
  },
  iosinfo: {
    versionRange: ['1.1']
  },
  ios: {
    versionRange: ['7.3'],
    filter: function filter() {
      return {
        module: 'utils',
        action: 'getDeviceInfo'
      };
    },
    thunk: function thunk(res) {
      return {
        status: res.errno === '1' ? 0 : parseInt(res.errno, 10),
        data: res.data,
        message: res.errmsg
      };
    }
  },
  android: {
    versionRange: ['7.3'],
    filter: function filter() {
      return {
        module: 'Bdbox_android_utils',
        action: 'getDeviceInfo'
      };
    },
    thunk: function thunk(res) {
      return {
        status: res.errno === '1' ? 0 : parseInt(res.errno, 10),
        data: res.data,
        message: res.errmsg
      };
    }
  }
});
/**
 * 获取 netinfo 网络环境
 * @function netInfo
 * @param {any} abtest - abtest 参数
 */

var _default = function _default(abtest) {
  if ((0, _detect.isMatrix)('baiduboxvision')) {
    return new Promise(function (resolve, reject) {
      var params = {
        keys: ['netInfo']
      };
      var callback = (0, _getGlobalFunc.default)(function (res) {
        if (typeof res === 'string') {
          res = JSON.parse(res);
        }

        resolve(res.data || {});
      });

      if ((0, _detect.isIOS)()) {
        (0, _ios.default)("baiduboxapp://utils?action=getDeviceInfo&params=".concat((0, _stringify.default)(params, true), "&func=").concat(callback));
      } else {
        (0, _android.prompt)('Bdbox_android_utils', 'getDeviceInfo', [(0, _stringify.default)(params), callback]);
      }
    });
  }

  return (0, _index.info)(['netInfo'], abtest);
};

exports.default = _default;