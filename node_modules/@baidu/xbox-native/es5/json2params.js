"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _type = _interopRequireDefault(require("@baidu/xbox/es5/type"));

var _getGlobalFunc = _interopRequireDefault(require("@baidu/xbox/es5/get-global-func"));

var _stringify = _interopRequireDefault(require("./stringify"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @file  将 json 转成 params 字符串
 * @author wangyongqing <wangyongqing01@baidu.com>
 */

/**
 * 经常会出现 params 的 stringify 之后再encode 的情况，这里统一处理了
 * 还处理了函数问题，可以直接传入匿名函数即可自动转为全局函数
 * @function json2params
 * @param {Object} json - 参数
 * @param {boolean} encode - 是否encode
 * @return {Promise} promise - Promise
 */
var _default = function _default(json) {
  var encode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  if ((0, _type.default)(json) === 'string') {
    return json;
  }

  var rs = {};

  for (var i in json) {
    var j = json[i];

    switch ((0, _type.default)(j)) {
      case 'array':
        j = mapArray(j);
        break;

      case 'function':
        j = (0, _getGlobalFunc.default)(j);
        break;
    }

    rs[i] = j;
  }

  return (0, _stringify.default)(rs, encode);
};

exports.default = _default;

function mapArray(args) {
  return args.map(function (arg) {
    switch ((0, _type.default)(arg)) {
      case 'function':
        return (0, _getGlobalFunc.default)(arg);

      default:
        return arg;
    }
  });
}