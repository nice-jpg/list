/**
 * @file  将 json 转成 params 字符串
 * @author wangyongqing <wangyongqing01@baidu.com>
 */
import type from '@baidu/xbox/type';
import getGlobalFunc from '@baidu/xbox/get-global-func';
import stringify from './stringify';
/**
 * 经常会出现 params 的 stringify 之后再encode 的情况，这里统一处理了
 * 还处理了函数问题，可以直接传入匿名函数即可自动转为全局函数
 * @function json2params
 * @param {Object} json - 参数
 * @param {boolean} encode - 是否encode
 * @return {Promise} promise - Promise
 */
export default (json, encode = true) => {
    if (type(json) === 'string') {
        return json;
    }

    const rs = {};
    for (let i in json) {
        let j = json[i];
        switch (type(j)) {
            case 'array':
                j = mapArray(j);
                break;
            case 'function':
                j = getGlobalFunc(j);
                break;
        }
        rs[i] = j;
    }
    return stringify(rs, encode);
};

function mapArray(args) {
    return args.map(arg => {
        switch (type(arg)) {
            case 'function':
                return getGlobalFunc(arg);
            default:
                return arg;
        }
    });
}
