"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.str2Array = void 0;

/**
 * @file 截取指定长度的字符串，将emoji和自定义的ubb表情识别为1个字符
 * @author jinzhan <jinzhan@baidu.com>
 *
 * 字符串编码相关正则表达式：refer: https://github.com/qlover/loadsh/blob/39a75c454047c51c328e608756d535791e6cdd88/loadsh-4.17.5/loadsh-4.17.5.js
 * **/
var rsAstralRange = "\\ud800-\\udfff";
var rsZWJ = "\\u200d";
var rsVarRange = "\\ufe0e\\ufe0f";
var rsComboMarksRange = "\\u0300-\\u036f";
var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange = "\\u20d0-\\u20ff";
var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
var reHasUnicode = new RegExp('[' + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + ']');
var rsFitz = "\\ud83c[\\udffb-\\udfff]";
var rsOptVar = '[' + rsVarRange + ']?';
var rsCombo = '[' + rsComboRange + ']';
var rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';
var reOptMod = rsModifier + '?';
var rsAstral = '[' + rsAstralRange + ']';
var rsNonAstral = '[^' + rsAstralRange + ']';
var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
var rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';
var rsSeq = rsOptVar + reOptMod + rsOptJoin;
var rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
var rsUnicode = rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq;
var reUnicode = new RegExp(rsUnicode, 'g');

var hasUnicode = function hasUnicode(val) {
  return reHasUnicode.test(val);
};

var unicodeToArray = function unicodeToArray(val) {
  return val.match(reUnicode) || [];
};

var asciiToArray = function asciiToArray(val) {
  return val.split('');
};
/*
* 将字符转换为数组，方便进行截取
*
* emoji表情case示例：
* ["[滑稽]", "[捂脸]", "[赞同]", "[大笑]", "[左捂脸]", ...]
*
* @param {string}   val: 目标字符串
* @param {Object}   option 可选配置项
* @param {boolean}  option.hasEmoji 是否包含hasEmoji，默认:false
* @param {number}   option.emojiMaxLenth 单个emoji文本的最大长度，默认：8
* @param {Array}    option.emojiData emoji的详细信息，如果存在，则忽略emojiMaxLenth
* */


var str2Array = function str2Array(val) {
  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
    hasEmoji: false,
    emojiMaxLenth: 8,
    emojiData: []
  };

  if (!option.hasEmoji) {
    return hasUnicode(val) ? unicodeToArray(val) : asciiToArray(val);
  }

  var rsEmoji = function (option) {
    return option.emojiData && option.emojiData.length ? option.emojiData.map(function (item) {
      return item.replace('[', '\\[').replace(']', '\\]');
    }).join('|') : '\\[.{1,' + (option.emojiMaxLenth - 2) + '}?\\]';
  }(option);

  var reUbb = new RegExp(rsEmoji + '|' + rsUnicode, 'g');
  return val.match(reUbb) || [];
};
/**
 *
 * 字符串裁剪，为了能更方便使用，采用打散运算符
 *
 * @params {string} str 目标字符串
 * @params {number} start 欲截取的字符串
 * @params {number} option.length 欲截取的字符串长度，可选
 * @params {Object} option.opt    可选的配置项
 * */


exports.str2Array = str2Array;

var substr = function substr(str, start) {
  var hasLength = typeof (arguments.length <= 2 ? undefined : arguments[2]) === 'number';
  var data = hasLength ? str2Array(str, arguments.length <= 3 ? undefined : arguments[3]) : str2Array(str, arguments.length <= 2 ? undefined : arguments[2]);
  var ret = hasLength ? data.splice(start, arguments.length <= 2 ? undefined : arguments[2]) : data.splice(start);
  return ret.join('');
};

var _default = substr;
exports.default = _default;