/**
 * @file 调起应用商店
 * @author zhuzhibo(zhuzhibo@baidu.com)
 */
import {getMarketScheme} from '../../config/app/marketMap';
import {invokeWithType} from './invokeWithType';
import {InvokeType} from '../../config/app/InvokeType';
import {InnerInvokeConfig} from '../../api/invokeApp';
import {checkInvoke} from './checkInvoke';
import {Status} from '../../config/Status';
import {invokeAction} from './invokeAction';

// 内部方法
export async function invokeAndroidMarket(options: InnerInvokeConfig) {
    options.marketScheme = getMarketScheme(options.pkgName);
    return invokeWithType(options, InvokeType.ANDROID_MARKET);
}

// 专门给外边人写的单独的api
export async function invokeMarket(pkgName: string, timeout = 2000) {
    const scheme = getMarketScheme(pkgName);
    // 函数签名需要一个AppName，但其实invokeMarket并不会用到
    // 所以这里随意传入一个好了了
    invokeAction(scheme, 'baiduinput');
    try {
        await checkInvoke(timeout);
        return Status.APPSTORE_SUCCESS;
    }
    catch (e) {
        return Promise.reject(Status.INVOKE_APPSTORE_FAIL);
    }
}
