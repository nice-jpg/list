/**
 * @file App灰度包判断 （限手百）
 * @author liuyaqian02 <liuyaqian02@baidu.com>
 */
import {invokeByIframe} from './invokeByIframe';
import {toGlobalFunc, versionCompare} from '@baidu/eop-utils';
import {getUa} from './utils'

const LOW_EXIST = {
    status: 101,
    message: '该版本不支持此端能力'
}
/**
 * @see http://es.baidu-int.com/#/apidetail/1809
 * @resolve {Object} data 端返回的data参数
 * @resolve {String} data.isBata 是否为灰度包 true|false
 *
 * @reject {Object} rejectData 端返回的失败回调信息
 * @reject {String} rejectData.status 失败状态码
 * @reject {String} rejectData.message 失败说明
 */
export function isBeta() {
    return new Promise((resolve, reject) => {
        const ua = getUa();
        let match = /baiduboxapp\/([\d+.]+)/.exec(ua);
        const BOX_VERSION = (match && match[1]) || '0';
        // 版本小于12.20.0.0，提示101 该版本不支持此端能力
        if (versionCompare(BOX_VERSION, '12.20.0.0') < 0) {
            reject(LOW_EXIST);
            return;
        }
        let scheme = `baiduboxapp://app/isBeta?callback=${toGlobalFunc(callback)}`;
        invokeByIframe(scheme);

        function callback(res) {
            res = JSON.parse(res);
            // 请求成功回调值
            if (+res.status === 0) {
                resolve(res.data);
            }
            // 请求失败
            else {
                let rejectData = {
                    status: res.status,
                    message: res.message
                };
                reject(rejectData);
            }
        }
    });
}

export const isBetaCanIUseConfig = {
    ios: '12.20.0.0',
    android: '12.20.0.0'
};
//# sourceMappingURL=isBeta.js.map