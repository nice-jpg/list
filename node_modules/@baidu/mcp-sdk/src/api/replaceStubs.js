/**
 * @file titihuan
 * @author zhangsiyuan(zhangsiyuan@baidu.com)
 */

import isstring from 'lodash.isstring';

/**
 * 替换占位符
 *
 * @param {Object} invokeConf 调起conf
 * @param {Object} placeholders 占位符
 */
export function replaceStubs(invokeConf, placeholders = {}) {
    if (!invokeConf?.action_rule) {
        console.log('invokeConf.action_rule not found. ');
        return false;
    }
    const copiedObj = JSON.parse(JSON.stringify(invokeConf));
    const rule = copiedObj.action_rule;
    for (let pos in rule) {
        rule[pos].forEach(invokeOptions => {

            for (let k in invokeOptions) {
                isstring(invokeOptions[k])
                && (invokeOptions[k] = replaceStr(invokeOptions[k], placeholders));

            }
        });
    }
    return copiedObj;
}

// 单一字符串中的桩位替换
export function replaceStr(str, placeholders) {
    for (let [k, v] of Object.entries(placeholders)) {
        str = str.replace(`{{${k}}}`, v);
    }
    return str;
}

