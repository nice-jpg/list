/**
 * js 加载器
 * @file Created on Thu Nov 22 2018
 * @author wangyongqing <wangyongqing01@baidu.com>
 */
import { guid } from '../guid';
import { isFunction, isString } from '../is';
import { json2query } from '../json2query';
import { loadFile } from './load-file';
/**
 * 加载 JS
 *
 * @param param 参数
 * @example
 *  loadjs({
 *      url,
 *      data,
 *      async,
 *      timeout,
 *      before,
 *      success,
 *      error,
 *      jsonpCallback,
 *      jsonpCallbackName // 传给server的回调函数的名字
 *  })
 */
export function loadJS({ url = '', data, async, timeout = 2e4, before, success, error, jsonpCallback, jsonpCallbackName, }) {
    if (typeof data === 'object') {
        data = json2query(data);
    }
    if (data) {
        url += (url.includes('?') ? '&' : '?') + data;
    }
    url = url.replace(/[&?]{1,2}/, '?');
    let callbackName = isFunction(jsonpCallback)
        ? jsonpCallback()
        : isString(jsonpCallback)
            ? jsonpCallback
            : '_boxjsonp' + guid();
    let originalCallback = window[callbackName];
    // 返回的数据
    let responseData = null;
    let cb = (e, p) => {
        if (e) {
            error && error(e, p);
        }
        else {
            success && success(responseData);
        }
        // window[callbackName] = originalCallback;
        Object.assign(window, {
            [callbackName]: originalCallback,
        });
        if (responseData && isFunction(originalCallback)) {
            originalCallback(responseData);
        }
        originalCallback = responseData = undefined;
    };
    // window[callbackName] = (...args) => {
    //     responseData = args;
    // };
    Object.assign(window, {
        [callbackName]: (data) => {
            responseData = data;
        },
    });
    // 当data的某个属性的值恰好以'?'开头，比如data:{content:'?', callback:'?'}，经过json2query后'content=?&callback=?'
    // 此时不能直接替换/=\?/，可根据传参优先处理
    if (jsonpCallbackName) {
        url += '&' + jsonpCallbackName + '=' + callbackName;
    }
    else if (url.includes('=?')) {
        url = url.replace('=?', '=' + callbackName);
    }
    loadFile(url, cb, { timeout, async, before });
}
