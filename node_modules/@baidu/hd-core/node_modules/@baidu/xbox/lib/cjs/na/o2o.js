"use strict";
/**
 * @file 调起o2o框架，支持轻应用（直达号）调起
 * @author wangyongqing01
 * @version $Id: o2o.js 289534 2016-04-07 06:00:51Z yupeng07 $
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.o2o = void 0;
var each_1 = require("../each");
var is_1 = require("../is");
var os_1 = require("../os");
var invoke_1 = require("./android/invoke");
var invoke_2 = require("./invoke");
var encode = encodeURIComponent;
/**
 * 调起o2o框架
 *
 * @deprecated
 * @param url 调起的页面url
 * @param opt 调起的参数
 * @param schemeHead 协议头
 *
 * @example
 * ```js
 * // 例如：调起o2o打开百度首页
 * o2o('http://m.baidu.com', {color:'0000ff'});
 * // 调起o2o框架，打开首页，并且指定顶框黑条颜色改变成0000ff(16进制颜色值)
 * o2o('http://m.baidu.com', {color:'0000ff'});
 * // 调起直达号
 * o2o('http://m.baidu.com', {appid:xxxx})
 * ```
 */
function o2o(url, opt, schemeHead) {
    if ((0, is_1.isPlainObject)(url)) {
        opt = url;
        url = opt.url;
        delete opt.url;
    }
    // iOS 调起o2o框架，（非安卓调起可以方便查看调用参数）
    if ((0, os_1.isIOS)() || (0 && !(0, os_1.isAndroid)())) {
        var obj_1 = {
            openurl: encode(url),
            minver: '5.3.0.0',
            isla: 0,
            opentype: 1,
            append: 0,
            rbtnstyle: 2,
        };
        if (opt && (0, is_1.isPlainObject)(opt)) {
            var alias_1 = {
                color: 'barcolor',
            };
            (0, each_1.each)(opt, function (value, key) {
                key = alias_1[key] || key;
                obj_1[key] = value;
            });
        }
        if (obj_1.appid) {
            obj_1.isla = 1;
        }
        (0, invoke_2.invokeP)('easybrowse', obj_1, schemeHead);
        return;
    }
    // 安卓调起o2o框架
    // android 需要统计各种O2O打开时长，扩展了几个 O2O 框架，需要传 component 参数来区分，以及版本信息，参数不能向下兼容。
    // 当参数存在 component 时，不设置 class，因为端需要做统计使用的 class 不一样。
    // 为了统一以后都只传 component 参数就OK。为了兼容之前的代码如果为空时 class 保持不变。
    // 2016.04.07
    var cclass = (opt === null || opt === void 0 ? void 0 : opt.component) || 'com.baidu.searchbox.wallet.WalletServiceActivity';
    var minver = (opt === null || opt === void 0 ? void 0 : opt.miv_v) || (opt === null || opt === void 0 ? void 0 : opt.minver) || '16783629';
    var intentParts = ["S.bdsb_light_start_url=" + encode(url)];
    if (opt && (0, is_1.isPlainObject)(opt)) {
        // android intent中不能传递不认参数，不然会报错，因为他们只是透传 intent，没有处理，所以要把多余参数去掉。
        // 2016.04.07
        // 惊了（只移除个min_v，但是注释没提哪些参数不认，这个坑需要实测）
        delete opt.min_v;
        var alias_2 = {
            color: 'i.extra_actionbar_color_id',
            appid: 'S.bdsb_wallet_appid',
        };
        (0, each_1.each)(opt, function (value, key) {
            if (key === 'color') {
                value = parseInt("0x" + value, 16) | 0xff000000;
            }
            key = alias_2[key] || key;
            intentParts.push(key + "=" + value);
        });
    }
    var intent = "intent:#Intent;" + intentParts.join(';') + ";end";
    (0, invoke_1.command)(intent, '0', cclass, minver);
}
exports.o2o = o2o;
