
import {IvkAppCreator} from '../../src/index';
import config from './config.json';

const mcpObj = config.mcpShare;
const pos = 'pos_3';
const logId = mcpObj['log_id'];
const opt = mcpObj['action_rule'][pos];
const index = 0;
const creator = new IvkAppCreator();
const options = {
    pos: pos,
    opt: opt,
    logId: logId,
    index: index
};
const ivkMcpInst = creator.create(options);

test('set commonParams', () => {
    // 设置公参
    creator.setCommonParams({
        app: 'wise',
        scene: 'sharepage'
    });
    // 获取公参
    const commonParams = creator.getCommonParams();
    expect(
        commonParams.app
    ).toBe('wise');
    expect(
        commonParams.scene
    ).toBe('sharepage');
});

test('get hitMcp', () => {
    // 是否命中mcp策略
    const hitMcp = ivkMcpInst.hitMcp();
    expect(
        hitMcp
    ).toBe(true);
})

test('get hitActionFlag', () => {
    // 是否命中屏蔽策略
    const hitActionFlag = ivkMcpInst.getActionFlag();
    expect(
        hitActionFlag
    ).toBe(false);
})

test('get extInfo', () => {
    // 获取退场状态
    const extInfo = ivkMcpInst.getExitInfo();
    expect(
        extInfo.isExit
    ).toBe(false);
})

test('get hitMcp after execInvoke', () => {
    ivkMcpInst.execInvoke();
    // 是否命中mcp策略
    const hitMcp = ivkMcpInst.hitMcp();
    expect(
        hitMcp
    ).toBe(true);
})

test('get extInfo after execInvoke', () => {
    ivkMcpInst.execInvoke();
    // 获取退场状态
    const extInfo = ivkMcpInst.getExitInfo();
    expect(
        extInfo.isExit
    ).toBe(true);
})
