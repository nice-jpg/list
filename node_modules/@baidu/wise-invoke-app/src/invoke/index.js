/**
 * @file invoke
 * @author xiongyang(xiongyang@baidu.com)
 */
import * as mcpSdk from '@baidu/mcp-sdk';

// mcp调起实例对象
export class IvkApp {
    constructor({pos, opt, logId, index}) {
        this.pos = pos;
        this.opt = opt;
        this.logId = logId;
        this.index = index;
    }

    hitMcp() {
        return mcpSdk.hitMcp(this.opt, this.index);
    }

    isBlock() {
        return !(this.pos && this.hitMcp() && this.getActionFlag());
    }

    getExitInfo() {
        return mcpSdk.getExitInfo(this.pos);
    }

    getActionFlag() {
        return this.opt?.[this.index]?.action_flag === 1;
    }

    execInvoke({sucCb, failCb} = {}) {
        const invokeData = this.opt[this.index];
        let timer = null;
        // 根据调起ext中的waitTime判断是否走延迟调起
        if (invokeData?.ext?.waitTime) {
            timer = setTimeout(() => {
                timer = null;
                this.callApp({sucCb, failCb}, invokeData);
            }, invokeData.ext.waitTime);
        } else {
            this.callApp({sucCb, failCb}, invokeData);
        }
    }

    callApp({sucCb, failCb} = {}, invokeData) {
        // 执行调起逻辑
        return mcpSdk.execInvoke(this.pos, invokeData, this.logId).then(res => {
            if (sucCb && sucCb instanceof Function) {
                sucCb(res);
            }
        }).catch(err => {
            if (failCb && failCb instanceof Function) {
                failCb(err);
            }
        });
    }
}
