import {Component} from 'san';
import styles from './style.module.less';
import {AucNavData} from './types';
import {WujiButton, WujiGrid} from '@baidu/wuji-san';
import {aucArrow} from '@baidu/auc-arrow/index';
import {pageLog} from "@baidu/auc-log/index";
import {machiningColor} from '@baidu/auc-base/utils';

export class topicNavs extends Component {
    static template:string = `
    <div class="{{wrapperClass}}" style="{{wrapperStyle}}">
        <div class="{{styles.aucTips}} {{landType ? styles.aucTips028 : ''}}" style="{{landType ? 'color:#fff;' : ''}}">
            {{title}}
            <auc-arrow
            arrowType="{{arrow}}"
            on-click="moreClick"
            class="{{styles.aucArrow}}"
            landType="{{landType}}"
            ></auc-arrow>
        </div>
        <div class="{{styles.aucMoreBoxWrapper}}">
            <div class="{{styles.aucMoreBox}}" >
                <wuji-row column="12" wrap="{{true}}" margin="51">    
                    <wuji-col span="6" s-for="nav,index in navs" class="{{styles.aucNavBtnBox}}">
                        <wuji-button 
                            text="{{nav.text}}"
                            height="108"
                            theme="twotone"
                            radius="J_X06"
                            class="{{styles.aucNavBtn}} {{activeIndex === index ? styles.active : ''}}"
                            on-click="handleClick(index)"
                            style="{{landType !== 0 ? btnStyles[index].btnStyle : ''}}"
                        ></wuji-button>
                    </wuji-col>
                </wuji-row>
            </div>
        </div>
    </div>`;
    static components:object = {
        'wuji-button': WujiButton,
        'wuji-col': WujiGrid.Col,
        'wuji-row': WujiGrid.Row,
        'auc-arrow': aucArrow
    };

    initData(): AucNavData {
        return {
            styles,
            activeIndex: 0,
            isMore: false,
            navs: [],
            showMore: false,
            title: '专题栏目',
            navDialogTop: '',
            btnStyles: []
        };
    }

    static computed = {
        arrow () {
            return this.data.get('showMore') ? 'up' : 'down';
        },
        wrapperClass() {
            const showMore = this.data.get('showMore');
            let result = [
                styles.aucNavMoreWrap,
                showMore ? this.data.get('styles').scrollIn : this.data.get('styles').scrollOut
            ]
            result.push(this.data.get('bigEventClass')[0]);
            return result;
        },
        wrapperStyle() {
            return `top: ${this.data.get('navDialogTop')}; background-color: ${this.data.get('bigEventColor')}`
        }
    };
    inited(): void {
        this.filterbtnStyle(this.data.get('activeIndex'));
        this.watch('activeIndex', (val)=>{
            this.filterbtnStyle(val);
        })
    }
    attached(): void {
        pageLog('tab_expand_click');
        this.watch('showMore', value => {
            pageLog(value ? 'tab_expand_click' : 'tab_retract_click');
        });
    }

    handleClick(index?:number): void {
        this.fire('nav-click', index);
    }
    moreClick() {
        this.fire('more-click');
    }

    filterbtnStyle(activeIndex) {
        const navs = this.data.get('navs');
        const navColor = machiningColor(this.data.get('navColor'));
        navs.forEach((item, index) => {
            let btnStyle = 'background: rgba(255,255,255,0.14);color: #fff;';
            if (index === activeIndex) {
                btnStyle = `color: ${this.data.get('bigEventColor')};background: #fff;`;
            }
            this.data.set(`btnStyles[${index}].btnStyle`, btnStyle);
        });
    }
}

export default topicNavs;
