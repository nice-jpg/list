"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TypeScriptSanParser = void 0;
const debug_1 = __importDefault(require("debug"));
const ts_ast_util_1 = require("../utils/ts-ast-util");
const normalize_component_1 = require("./normalize-component");
const san_source_file_1 = require("../models/san-source-file");
const parse_template_1 = require("./parse-template");
const component_info_1 = require("../models/component-info");
const component_reference_1 = require("../models/component-reference");
const debug = debug_1.default('ts-component-parser');
/**
 * 把包含 San 组件定义的 TypeScript 源码，通过静态分析（AST），得到组件信息。
 */
class TypeScriptSanParser {
    parse(sourceFile) {
        const classDeclarations = ts_ast_util_1.getComponentDeclarations(sourceFile).map(normalize_component_1.normalizeComponentClass);
        const defaultClassDeclaration = classDeclarations.find(clazz => clazz.isDefaultExport());
        const componentInfos = classDeclarations.map(decl => this.parseComponentClassDeclaration(decl, defaultClassDeclaration));
        return new san_source_file_1.TypedSanSourceFile(componentInfos, sourceFile, componentInfos.find(info => info.classDeclaration.isDefaultExport()));
    }
    parseComponentClassDeclaration(classDeclaration, defaultClassDeclaration) {
        const template = ts_ast_util_1.getPropertyStringValue(classDeclaration, 'template', '');
        const trimWhitespace = ts_ast_util_1.getPropertyStringValue(classDeclaration, 'trimWhitespace');
        const delimiters = ts_ast_util_1.getPropertyStringArrayValue(classDeclaration, 'delimiters');
        const childComponents = ts_ast_util_1.getChildComponents(classDeclaration, defaultClassDeclaration);
        for (const constructorDelcaration of classDeclaration.getConstructors()) {
            constructorDelcaration.remove();
        }
        return new component_info_1.TypedComponentInfo(component_reference_1.componentID(classDeclaration.isDefaultExport(), classDeclaration.getName()), parse_template_1.parseAndNormalizeTemplate(template, {
            trimWhitespace, delimiters
        }), childComponents, classDeclaration);
    }
}
exports.TypeScriptSanParser = TypeScriptSanParser;
//# sourceMappingURL=typescript-san-parser.js.map