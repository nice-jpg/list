import { ComponentConstructor } from 'san';
import { DynamicSanSourceFile } from '../models/san-source-file';
import { DynamicComponentInfo } from '../models/component-info';
import { ComponentClass } from '../models/component';
import { DynamicComponentReference } from '../models/component-reference';
export declare class ComponentClassParser {
    private readonly root;
    private readonly filePath;
    private id;
    private cids;
    constructor(root: ComponentConstructor<{}, {}>, filePath: string);
    parse(): DynamicSanSourceFile;
    /**
     * 从组件 class 得到组件 component info
     */
    createComponentInfoFromComponentClass(componentClass: ComponentConstructor<{}, {}>, id: string): DynamicComponentInfo;
    /**
     * 从组件 class 得到子组件 class
     */
    getChildComponentClasses(parentComponentClass: ComponentClass): Map<string, DynamicComponentReference>;
    private getOrSetID;
}
