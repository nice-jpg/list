import { JSEmitter } from '../target-js/js-emitter';
import { ANode, ATemplateNode, AFragmentNode } from 'san';
import { ComponentInfo } from '../models/component-info';
/**
 * ANode 编译
 *
 * 负责单个 ComponentClass 的编译，每个 ANodeCompiler 对应于一个 ComponentInfo。
 */
export declare class ANodeCompiler<T extends 'none' | 'typed'> {
    private componentInfo;
    private ssrOnly;
    emitter: JSEmitter;
    private ssrIndex;
    private elementCompiler;
    private inScript;
    /**
     * @param componentInfo 要被编译的节点所在组件的信息
     * @param componentTree 当前组件所在的组件树
     * @param ssrOnly san-ssr 当做模板引擎来使用（产出 HTML 更简单，但无法反解）
     * @param emitter 代码输出器，产出代码塞到这里面
     */
    constructor(componentInfo: ComponentInfo, ssrOnly: boolean, emitter: JSEmitter);
    compile(aNode: ANode, isRootElement: boolean): void;
    private generateRef;
    private compileText;
    compileTemplate(aNode: ATemplateNode): void;
    compileFragment(aNode: AFragmentNode): void;
    private compileIf;
    private compileFor;
    private compileSlot;
    private compileElement;
    private compileComponent;
    private compileSlotRenderer;
    private componentDataCode;
}
