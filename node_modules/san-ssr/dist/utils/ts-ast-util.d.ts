import type { MethodDeclaration, ShorthandPropertyAssignment, PropertyAssignment, ImportDeclaration, ClassDeclaration, SourceFile } from 'ts-morph';
import { TagName } from '../models/component-info';
import { ComponentReference } from '../models/component-reference';
export declare function getSanImportDeclaration(sourceFile: SourceFile): ImportDeclaration | undefined;
export declare function getComponentClassIdentifier(sourceFile: SourceFile): string | undefined;
export declare function isChildClassOf(clazz: ClassDeclaration, parentClass: string): boolean;
export declare function getComponentDeclarations(sourceFile: SourceFile): ClassDeclaration[];
export declare function getPropertyStringValue<T extends string>(clazz: ClassDeclaration, memberName: string, defaultValue: T): T;
export declare function getPropertyStringValue<T extends string>(clazz: ClassDeclaration, memberName: string): T | undefined;
export declare function getPropertyStringArrayValue<T extends string[]>(clazz: ClassDeclaration, memberName: string): T | undefined;
export declare function getChildComponents(clazz: ClassDeclaration, defaultClassDeclaration?: ClassDeclaration): Map<TagName, ComponentReference>;
export declare function getObjectLiteralPropertyKeys(clazz: ClassDeclaration, propertyName: string): string[];
export declare function getPropertyAssignmentName(prop: PropertyAssignment | ShorthandPropertyAssignment | MethodDeclaration): string;
