import { SanProject } from '../models/san-project';
import { SanSourceFile, DynamicSanSourceFile } from '../models/san-source-file';
import { Renderer } from '../models/renderer';
import { Compiler } from '../models/compiler';
export declare type ToJSCompileOptions = {
    ssrOnly?: boolean;
};
export default class ToJSCompiler implements Compiler {
    private project;
    constructor(project: SanProject);
    /**
     * 编译到 JS Render 源码
     *
     * @param sourceFile 解析过的 San 源文件
     * @param ssrOnly 只在服务端渲染，客户端无法反解，可用来减少渲染标记
     * @param bareFunction 只输出一个 function，不输出 CMD 包装
     * @param bareFunctionBody 只输出 function body
     */
    compileToSource(sourceFile: SanSourceFile, { importHelpers, ssrOnly, bareFunction, bareFunctionBody }?: {
        importHelpers?: string | undefined;
        ssrOnly?: boolean | undefined;
        bareFunction?: boolean | undefined;
        bareFunctionBody?: boolean | undefined;
    }): string;
    /**
     * 编译到 JS Render 函数
     *
     * @param sourceFile 解析过的 San 源文件
     * @param ssrOnly 只在服务端渲染，客户端无法反解，可用来减少渲染标记
     */
    compileToRenderer(sourceFile: DynamicSanSourceFile, { ssrOnly }?: ToJSCompileOptions): Renderer;
    emitHelpers(): string;
    /**
     * 解决 render 函数的依赖（即 helpers）
     */
    private createRender;
    private doCompileToSource;
    private ensureHelpers;
    private compileTSComponentToSource;
    private compileJSComponentToSource;
    private compileComponentClassToSource;
}
